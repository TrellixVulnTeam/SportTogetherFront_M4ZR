{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Events\\\\EventList.js\";\nimport React from \"react\";\nimport EventItem from \"./EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventList = props => {\n  let arrayEvents = [...props.eventsList];\n  let path;\n\n  if (arrayEvents && arrayEvents.length) {\n    path = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: arrayEvents.map(item => /*#__PURE__*/_jsxDEV(EventItem, {\n        eventId: item._id,\n        profileImg: item.author.profileImg,\n        authorUsername: item.authorUsername,\n        authorFirstName: item.authorFirstName,\n        sport: item.sportType,\n        level: item.sportLevel,\n        county: item.county,\n        city: item.city,\n        location: item.place,\n        description: item.description,\n        date: item.startDate,\n        time: item.startTime,\n        nrPlayers: item.nrOfPlayers,\n        allowed: item.levelRequirement\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(EventItem, {\n      dataMessage: 'No events to show'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n  return {\n    routes\n  };\n};\n\n_c = EventList;\nexport default EventList; // if(props.allFilters.sportFilters !== '' ){\n//     console.log(props.allFilters.sportFilter)\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Events/EventList.js"],"names":["React","EventItem","EventList","props","arrayEvents","eventsList","path","length","map","item","_id","author","profileImg","authorUsername","authorFirstName","sportType","sportLevel","county","city","place","description","startDate","startTime","nrOfPlayers","levelRequirement","routes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,MAAIC,WAAW,GAAG,CAAC,GAAGD,KAAK,CAACE,UAAV,CAAlB;AAEA,MAAIC,IAAJ;;AACA,MAAGF,WAAW,IAAIA,WAAW,CAACG,MAA9B,EAAqC;AACjCD,IAAAA,IAAI,gBACA,QAAC,KAAD,CAAO,QAAP;AAAA,gBACCF,WAAW,CAACI,GAAZ,CAAiBC,IAAD,iBACb,QAAC,SAAD;AAEQ,QAAA,OAAO,EAAIA,IAAI,CAACC,GAFxB;AAGQ,QAAA,UAAU,EAAID,IAAI,CAACE,MAAL,CAAYC,UAHlC;AAIQ,QAAA,cAAc,EAAIH,IAAI,CAACI,cAJ/B;AAKQ,QAAA,eAAe,EAAIJ,IAAI,CAACK,eALhC;AAMQ,QAAA,KAAK,EAAIL,IAAI,CAACM,SANtB;AAOQ,QAAA,KAAK,EAAIN,IAAI,CAACO,UAPtB;AAQQ,QAAA,MAAM,EAAIP,IAAI,CAACQ,MARvB;AASQ,QAAA,IAAI,EAAIR,IAAI,CAACS,IATrB;AAUQ,QAAA,QAAQ,EAAIT,IAAI,CAACU,KAVzB;AAWQ,QAAA,WAAW,EAAIV,IAAI,CAACW,WAX5B;AAYQ,QAAA,IAAI,EAAIX,IAAI,CAACY,SAZrB;AAaQ,QAAA,IAAI,EAAIZ,IAAI,CAACa,SAbrB;AAcQ,QAAA,SAAS,EAAIb,IAAI,CAACc,WAd1B;AAeQ,QAAA,OAAO,EAAId,IAAI,CAACe;AAfxB,SACWf,IAAI,CAACC,GADhB;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH,GAxBD,MAwBK;AACDe,IAAAA,MAAM,gBACF,QAAC,SAAD;AAAW,MAAA,WAAW,EAAI;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH,CApCD;;KAAMvB,S;AAsCN,eAAeA,SAAf,C,CAEA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport EventItem from \"./EventItem\";\r\n\r\nconst EventList = (props) => {\r\n    \r\n    let arrayEvents = [...props.eventsList]\r\n    \r\n    let path;\r\n    if(arrayEvents && arrayEvents.length){\r\n        path = (\r\n            <React.Fragment>\r\n            {arrayEvents.map((item) => (\r\n                <EventItem  \r\n                    key = {item._id}\r\n                        eventId = {item._id}\r\n                        profileImg = {item.author.profileImg}\r\n                        authorUsername = {item.authorUsername}\r\n                        authorFirstName = {item.authorFirstName}\r\n                        sport = {item.sportType}\r\n                        level = {item.sportLevel}\r\n                        county = {item.county}\r\n                        city = {item.city}\r\n                        location = {item.place}\r\n                        description = {item.description}\r\n                        date = {item.startDate}\r\n                        time = {item.startTime}\r\n                        nrPlayers = {item.nrOfPlayers}\r\n                        allowed = {item.levelRequirement}\r\n                /> \r\n            ))}\r\n        </React.Fragment>\r\n        )\r\n    }else{\r\n        routes = (\r\n            <EventItem dataMessage = {'No events to show'}/>\r\n        )\r\n    }\r\n\r\n    return {routes}\r\n}\r\n\r\nexport default EventList;\r\n\r\n// if(props.allFilters.sportFilters !== '' ){\r\n//     console.log(props.allFilters.sportFilter)\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}