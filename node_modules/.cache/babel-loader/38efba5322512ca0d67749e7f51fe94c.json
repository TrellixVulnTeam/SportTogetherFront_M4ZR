{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Select from 'react-select';\nimport { Form, Button, Spinner } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from \"../../store\";\nimport \"./RegisterForm.css\";\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputUsername, setInputUsername] = useState('');\n  const [inputFirst, setInputFirst] = useState('');\n  const [inputLast, setInputLast] = useState('');\n  const [inputPw, setInputPw] = useState('');\n  const [inputConfirmPw, setInputConfirmPw] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState();\n  const [inputCounty, setInputCounty] = useState('');\n  const [inputCity, setInputCity] = useState('');\n  const [listCounties, setListCounties] = useState([]);\n  const [listCities, setListCities] = useState([]);\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(state => state.authentication.isAuthenticated);\n  useSelector(state => state.authentication.userId);\n  useSelector(state => state.authentication.token);\n  useSelector(state => state.authentication.tokenExpiration);\n  useEffect(() => {\n    let lstCounties = [];\n\n    for (let i of countyList) {\n      lstCounties.push({\n        value: i,\n        label: i\n      });\n    }\n\n    console.log(lstCounties);\n    setListCounties(lstCounties);\n  }, []);\n\n  const countyOptionChange = obj => {\n    setInputCounty(obj.value);\n    console.log(obj.value);\n    const countyNameList = countyCityList[obj.value];\n    console.log('LIST OF CITIES IN ARRAY: >>', countyNameList);\n    let lstCities = [];\n\n    for (let i of countyNameList) {\n      lstCities.push({\n        value: i,\n        label: i\n      });\n    }\n\n    console.log(lstCities);\n    setListCities(lstCities);\n  };\n\n  const cityOptionChange = obj => {\n    setInputCity(obj.value);\n  };\n\n  const registerFormHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5000/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        body: JSON.stringify({\n          'email': inputEmail,\n          'username': inputUsername,\n          'firstName': inputFirst,\n          'lastName': inputLast,\n          'county': inputCounty,\n          'city': inputCity,\n          'password': inputPw,\n          'confirmPw': inputConfirmPw\n        })\n      });\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        setIsError(responseData.error);\n        setIsLoading(false);\n        return new Error(responseData.message);\n      } else {\n        auth.modalShow();\n        auth.login(responseData.userId, responseData.token);\n        localStorage.setItem('userLoc', JSON.stringify({\n          county: responseData.county,\n          city: responseData.city\n        }));\n        return console.log(responseData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxRegister\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Register \", isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            variant: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-5\",\n          id: \"noticeEvent\",\n          children: [\" \", isError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: registerFormHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your data with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: inputEmail,\n              onInput: e => setInputEmail(e.target.value),\n              placeholder: \"Enter email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formUserName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputUsername,\n              onInput: e => setInputUsername(e.target.value),\n              placeholder: \"User name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputFirst,\n              onInput: e => setInputFirst(e.target.value),\n              placeholder: \"First name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputLast,\n              onInput: e => setInputLast(e.target.value),\n              placeholder: \"Last name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formCounty\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"County\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: listCounties,\n              value: inputCounty.value,\n              onChange: option => countyOptionChange(option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formCity\",\n            style: {\n              'marginTop': '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: listCities,\n              value: inputCity.value,\n              onChange: opt => cityOptionChange(opt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: inputPw,\n              onInput: e => setInputPw(e.target.value),\n              placeholder: \"Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formConfirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: inputConfirmPw,\n              onInput: e => setInputConfirmPw(e.target.value),\n              placeholder: \"Confirm Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            style: {\n              'float': 'right'\n            },\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"ubWRAvJVjvBxGwvubdAKmFPDQyQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/RegisterForm.js"],"names":["React","useState","useEffect","Select","Form","Button","Spinner","useSelector","useDispatch","authActions","countyList","countyCityList","RegisterForm","inputEmail","setInputEmail","inputUsername","setInputUsername","inputFirst","setInputFirst","inputLast","setInputLast","inputPw","setInputPw","inputConfirmPw","setInputConfirmPw","isLoading","setIsLoading","isError","setIsError","inputCounty","setInputCounty","inputCity","setInputCity","listCounties","setListCounties","listCities","setListCities","dispatch","isAuthenticated","state","authentication","userId","token","tokenExpiration","lstCounties","i","push","value","label","console","log","countyOptionChange","obj","countyNameList","lstCities","cityOptionChange","registerFormHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","error","Error","message","auth","modalShow","login","localStorage","setItem","county","city","e","target","option","opt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,QAAsC,iBAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,oBAAP;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;;;AAIA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,EAAtC;AACA,QAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgC7B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC8B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACkC,UAAD,EAAaC,aAAb,IAA8BnC,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMoC,QAAQ,GAAG7B,WAAW,EAA5B;AACA,QAAM8B,eAAe,GAAG/B,WAAW,CAAEgC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBF,eAAjC,CAAnC;AACA/B,EAAAA,WAAW,CAAEgC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBC,MAAjC,CAAX;AACAlC,EAAAA,WAAW,CAAEgC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBE,KAAjC,CAAX;AACAnC,EAAAA,WAAW,CAAEgC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBG,eAAjC,CAAX;AAEEzC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAI0C,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAT,IAAcnC,UAAd,EAAyB;AACvBkC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAACC,QAAAA,KAAK,EAAEF,CAAR;AAAWG,QAAAA,KAAK,EAAEH;AAAlB,OAAjB;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAV,IAAAA,eAAe,CAACU,WAAD,CAAf;AACD,GAPQ,EAOP,EAPO,CAAT;;AAUF,QAAMO,kBAAkB,GAAIC,GAAD,IAAS;AAClCtB,IAAAA,cAAc,CAACsB,GAAG,CAACL,KAAL,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACL,KAAhB;AACA,UAAMM,cAAc,GAAG1C,cAAc,CAACyC,GAAG,CAACL,KAAL,CAArC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CG,cAA3C;AAEA,QAAIC,SAAS,GAAG,EAAhB;;AACE,SAAK,IAAIT,CAAT,IAAcQ,cAAd,EAA6B;AAC3BC,MAAAA,SAAS,CAACR,IAAV,CAAe;AAACC,QAAAA,KAAK,EAAEF,CAAR;AAAWG,QAAAA,KAAK,EAAEH;AAAlB,OAAf;AACD;;AACHI,IAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AACAlB,IAAAA,aAAa,CAACkB,SAAD,CAAb;AACD,GAZD;;AAeA,QAAMC,gBAAgB,GAAIH,GAAD,IAAS;AAChCpB,IAAAA,YAAY,CAACoB,GAAG,CAACL,KAAL,CAAZ;AACD,GAFD;;AAKA,QAAMS,mBAAmB,GAAG,MAAOC,KAAP,IAAiB;AAC3CA,IAAAA,KAAK,CAACC,cAAN;AACAhC,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAMiC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AAC3DC,QAAAA,MAAM,EAAE,MADmD;AAE3DC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT,CAEP;;AAFO,SAFkD;AAM3DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,mBAASpD,UADU;AAEnB,sBAAYE,aAFO;AAGnB,uBAAaE,UAHM;AAInB,sBAAYE,SAJO;AAKnB,oBAAWU,WALQ;AAMnB,kBAASE,SANU;AAOnB,sBAAYV,OAPO;AAQnB,uBAAaE;AARM,SAAf;AANqD,OAAjC,CAA5B;AAiBA,YAAM2C,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;;AACA,UAAG,CAACR,QAAQ,CAACS,EAAb,EAAgB;AACdxC,QAAAA,UAAU,CAACsC,YAAY,CAACG,KAAd,CAAV;AACA3C,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,eAAO,IAAI4C,KAAJ,CAAUJ,YAAY,CAACK,OAAvB,CAAP;AACD,OAJD,MAIK;AACHC,QAAAA,IAAI,CAACC,SAAL;AACAD,QAAAA,IAAI,CAACE,KAAL,CAAWR,YAAY,CAACzB,MAAxB,EAAgCyB,YAAY,CAACxB,KAA7C;AACAiC,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCZ,IAAI,CAACC,SAAL,CAAe;AAACY,UAAAA,MAAM,EAACX,YAAY,CAACW,MAArB;AAA6BC,UAAAA,IAAI,EAAEZ,YAAY,CAACY;AAAhD,SAAf,CAAhC;AACA,eAAO7B,OAAO,CAACC,GAAR,CAAYgB,YAAZ,CAAP;AAED;AACF,KA9BD,CA8BE,OAAOG,KAAP,EAAc;AACdpB,MAAAA,OAAO,CAACoB,KAAR,CAAcA,KAAd;AACD;AACF,GApCD;;AAsCA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACA;AAAA,kCAAc5C,SAAS,iBAAI,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,QAAnB;AAA4B,YAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAECE,OAAO,iBAAI;AAAG,UAAA,SAAS,EAAC,MAAb;AAAoB,UAAA,EAAE,EAAC,aAAvB;AAAA,0BAAuCA,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFZ,eAGA,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE6B,mBAAhB;AAAA,kCACI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAME,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,WAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,OAAnB;AAA2B,cAAA,KAAK,EAAE3C,UAAlC;AAA8C,cAAA,OAAO,EAAEkE,CAAC,IAAIjE,aAAa,CAACiE,CAAC,CAACC,MAAF,CAASjC,KAAV,CAAzE;AAA2F,cAAA,WAAW,EAAC,aAAvG;AAAqH,cAAA,QAAQ;AAA7H;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAWE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,cAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,MAAnB;AAA0B,cAAA,KAAK,EAAEhC,aAAjC;AAAgD,cAAA,OAAO,EAAEgE,CAAC,IAAI/D,gBAAgB,CAAC+D,CAAC,CAACC,MAAF,CAASjC,KAAV,CAA9E;AAAgG,cAAA,WAAW,EAAC,WAA5G;AAAwH,cAAA,QAAQ;AAAhI;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAgBE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,eAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,MAAnB;AAA0B,cAAA,KAAK,EAAE9B,UAAjC;AAA6C,cAAA,OAAO,EAAE8D,CAAC,IAAI7D,aAAa,CAAC6D,CAAC,CAACC,MAAF,CAASjC,KAAV,CAAxE;AAA0F,cAAA,WAAW,EAAC,YAAtG;AAAmH,cAAA,QAAQ;AAA3H;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAqBE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,cAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,MAAnB;AAA0B,cAAA,KAAK,EAAE5B,SAAjC;AAA4C,cAAA,OAAO,EAAE4D,CAAC,IAAI3D,YAAY,CAAC2D,CAAC,CAACC,MAAF,CAASjC,KAAV,CAAtE;AAAwF,cAAA,WAAW,EAAC,WAApG;AAAgH,cAAA,QAAQ;AAAxH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF,eA0BE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,YAAtB;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAGd,YAAlB;AAAgC,cAAA,KAAK,EAAEJ,WAAW,CAACkB,KAAnD;AAA0D,cAAA,QAAQ,EAAGkC,MAAD,IAAY9B,kBAAkB,CAAC8B,MAAD;AAAlG;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BF,eA+BE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,UAAtB;AAAiC,YAAA,KAAK,EAAE;AAAC,2BAAY;AAAb,aAAxC;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAI9C,UAAnB;AAA+B,cAAA,KAAK,EAAEJ,SAAS,CAACgB,KAAhD;AAAuD,cAAA,QAAQ,EAAGmC,GAAD,IAAS3B,gBAAgB,CAAC2B,GAAD;AAA1F;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BF,eAoCE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,cAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,UAAnB;AAA8B,cAAA,KAAK,EAAE7D,OAArC;AAA8C,cAAA,OAAO,EAAE0D,CAAC,IAAIzD,UAAU,CAACyD,CAAC,CAACC,MAAF,CAASjC,KAAV,CAAtE;AAAwF,cAAA,WAAW,EAAC,UAApG;AAA+G,cAAA,QAAQ;AAAvH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApCF,eAyCE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,qBAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,UAAnB;AAA8B,cAAA,KAAK,EAAExB,cAArC;AAAqD,cAAA,OAAO,EAAEwD,CAAC,IAAIvD,iBAAiB,CAACuD,CAAC,CAACC,MAAF,CAASjC,KAAV,CAApF;AAAsG,cAAA,WAAW,EAAC,kBAAlH;AAAqI,cAAA,QAAQ;AAA7I;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzCF,eA8CE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA2B,YAAA,KAAK,EAAE;AAAC,uBAAQ;AAAT,aAAlC;AAAqD,YAAA,IAAI,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CArJD;;GAAMnC,Y;UAcaJ,W,EACOD,W,EACxBA,W,EACAA,W,EACAA,W;;;KAlBIK,Y;AAuJN,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Select from 'react-select'\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authActions } from \"../../store\";\r\nimport \"./RegisterForm.css\";\r\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\r\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\r\n\r\n\r\n\r\nconst RegisterForm = () => {  \r\n  const [inputEmail, setInputEmail] = useState('')\r\n  const [inputUsername, setInputUsername] = useState('')\r\n  const [inputFirst, setInputFirst] = useState('')\r\n  const [inputLast, setInputLast] = useState('')\r\n  const [inputPw, setInputPw] = useState('')\r\n  const [inputConfirmPw, setInputConfirmPw] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isError, setIsError] = useState()\r\n  const [inputCounty, setInputCounty] = useState('')\r\n  const [inputCity, setInputCity] = useState('')\r\n  const [listCounties, setListCounties] = useState([])\r\n  const [listCities, setListCities] = useState([])\r\n  \r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector((state) => state.authentication.isAuthenticated)\r\n  useSelector((state) => state.authentication.userId)\r\n  useSelector((state) => state.authentication.token)\r\n  useSelector((state) => state.authentication.tokenExpiration)\r\n\r\n    useEffect(()=>{\r\n      let lstCounties = []\r\n      for (let i of countyList){\r\n        lstCounties.push({value: i, label: i})\r\n      }\r\n      console.log(lstCounties)\r\n      setListCounties(lstCounties)\r\n    },[])\r\n\r\n    \r\n  const countyOptionChange = (obj) => {\r\n    setInputCounty(obj.value)\r\n    console.log(obj.value)\r\n    const countyNameList = countyCityList[obj.value]\r\n    console.log('LIST OF CITIES IN ARRAY: >>', countyNameList )\r\n\r\n    let lstCities = []\r\n      for (let i of countyNameList){\r\n        lstCities.push({value: i, label: i})\r\n      }\r\n    console.log(lstCities)\r\n    setListCities(lstCities)\r\n  }\r\n\r\n\r\n  const cityOptionChange = (obj) => {\r\n    setInputCity(obj.value)\r\n  }\r\n  \r\n\r\n  const registerFormHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true)\r\n    try {\r\n      const response = await fetch('http://localhost:5000/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify({\r\n          'email': inputEmail,\r\n          'username': inputUsername,\r\n          'firstName': inputFirst,\r\n          'lastName': inputLast,\r\n          'county' : inputCounty,\r\n          'city' : inputCity,\r\n          'password': inputPw,\r\n          'confirmPw': inputConfirmPw,\r\n        })\r\n      })\r\n      const responseData = await response.json()\r\n      if(!response.ok){\r\n        setIsError(responseData.error)\r\n        setIsLoading(false)\r\n        return new Error(responseData.message)\r\n      }else{\r\n        auth.modalShow()\r\n        auth.login(responseData.userId, responseData.token)\r\n        localStorage.setItem('userLoc', JSON.stringify({county:responseData.county, city: responseData.city}))\r\n        return console.log(responseData)\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n \r\n  return (\r\n    <div className=\"registerContainer\">\r\n      <div className=\"boxRegister\">\r\n        <div className=\"registerForm\">\r\n        <h3>Register {isLoading && <Spinner animation=\"border\" variant=\"primary\"/>}</h3>\r\n        {isError && <p className=\"mb-5\" id=\"noticeEvent\"> {isError}</p>}\r\n        <Form onSubmit={registerFormHandler}>\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your data with anyone else.\r\n            </Form.Text>\r\n            <br/>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" value={inputEmail} onInput={e => setInputEmail(e.target.value)} placeholder=\"Enter email\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formUserName\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputUsername} onInput={e => setInputUsername(e.target.value)} placeholder=\"User name\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputFirst} onInput={e => setInputFirst(e.target.value)} placeholder=\"First name\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputLast} onInput={e => setInputLast(e.target.value)} placeholder=\"Last name\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formCounty\">\r\n          <Form.Label>County</Form.Label>\r\n            <Select options ={listCounties} value={inputCounty.value} onChange={(option) => countyOptionChange(option)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formCity\" style={{'marginTop':'10px',}}>\r\n          <Form.Label>City</Form.Label>\r\n            <Select options = {listCities} value={inputCity.value} onChange={(opt) => cityOptionChange(opt)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" value={inputPw} onInput={e => setInputPw(e.target.value)} placeholder=\"Password\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type=\"password\" value={inputConfirmPw} onInput={e => setInputConfirmPw(e.target.value)} placeholder=\"Confirm Password\" required />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\"  style={{'float':'right'}} type=\"submit\">\r\n            Register\r\n          </Button>\r\n\r\n        </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}