{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button, Spinner, Alert } from \"react-bootstrap\";\nimport \"./RegisterForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputUsername, setInputUsername] = useState('');\n  const [inputFirst, setInputFirst] = useState('');\n  const [inputLast, setInputLast] = useState('');\n  const [inputPw, setInputPw] = useState('');\n  const [inputConfirmPw, setInputConfirmPw] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState();\n\n  const registerFormHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5000/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        body: JSON.stringify({\n          'email': inputEmail,\n          'username': inputUsername,\n          'firstName': inputFirst,\n          'lastName': inputLast,\n          'password': inputPw,\n          'confirmPw': inputConfirmPw\n        })\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n\n      if (!responseData.ok) {\n        throw new Error(responseData.message);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      console.log('ERROR');\n      setIsError(error.message || \"Something went wrong, please try again\");\n    }\n\n    setInputEmail('');\n    setInputUsername('');\n    setInputFirst('');\n    setInputLast('');\n    setInputPw('');\n    setInputConfirmPw('');\n    setIsLoading(false);\n  };\n\n  const errorHandler = () => {\n    setIsError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: [isError, /*#__PURE__*/_jsxDEV(Button, {\n        children: \" Close Alert \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, \"warning\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxRegister\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registerForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: registerFormHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll never share your data with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                value: inputEmail,\n                onInput: e => setInputEmail(e.target.value),\n                placeholder: \"Enter email\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formUserName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: inputUsername,\n                onInput: e => setInputUsername(e.target.value),\n                placeholder: \"User name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formFirstName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: inputFirst,\n                onInput: e => setInputFirst(e.target.value),\n                placeholder: \"First name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formLastName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: inputLast,\n                onInput: e => setInputLast(e.target.value),\n                placeholder: \"Last name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: inputPw,\n                onInput: e => setInputPw(e.target.value),\n                placeholder: \"Password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formConfirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: inputConfirmPw,\n                onInput: e => setInputConfirmPw(e.target.value),\n                placeholder: \"Confirm Password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 11\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n              variant: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              style: {\n                'float': 'right'\n              },\n              type: \"submit\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"mG4haQaGZAYRRyBj1kEB3+3CnLY=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/RegisterForm.js"],"names":["React","useState","Form","Button","Spinner","Alert","RegisterForm","inputEmail","setInputEmail","inputUsername","setInputUsername","inputFirst","setInputFirst","inputLast","setInputLast","inputPw","setInputPw","inputConfirmPw","setInputConfirmPw","isLoading","setIsLoading","isError","setIsError","registerFormHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","console","log","ok","Error","message","error","errorHandler","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Form, Button, Spinner, Alert } from \"react-bootstrap\";\r\nimport \"./RegisterForm.css\";\r\n\r\nconst RegisterForm = () => {\r\n  const [inputEmail, setInputEmail] = useState('')\r\n  const [inputUsername, setInputUsername] = useState('')\r\n  const [inputFirst, setInputFirst] = useState('')\r\n  const [inputLast, setInputLast] = useState('')\r\n  const [inputPw, setInputPw] = useState('')\r\n  const [inputConfirmPw, setInputConfirmPw] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isError, setIsError] = useState()\r\n  const registerFormHandler = async event => {\r\n    event.preventDefault();\r\n    setIsLoading(true)\r\n    try {\r\n      const response = await fetch('http://localhost:5000/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify({\r\n          'email': inputEmail,\r\n          'username': inputUsername,\r\n          'firstName': inputFirst,\r\n          'lastName': inputLast,\r\n          'password': inputPw,\r\n          'confirmPw': inputConfirmPw,\r\n        })\r\n      })\r\n      const responseData = await response.json()\r\n      console.log(responseData)\r\n     if(!responseData.ok){\r\n       throw new Error(responseData.message)\r\n     }\r\n      \r\n    } catch (error) {\r\n        setIsLoading(false)\r\n        console.log('ERROR')\r\n        setIsError(error.message || \"Something went wrong, please try again\")\r\n    }\r\n    setInputEmail('')\r\n    setInputUsername('')\r\n    setInputFirst('')\r\n    setInputLast('')\r\n    setInputPw('')\r\n    setInputConfirmPw('')\r\n    setIsLoading(false)\r\n  }\r\n  \r\n  const errorHandler = () => {\r\n    setIsError(null)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Alert key=\"warning\" variant=\"warning\">\r\n    {isError}\r\n    <Button > Close Alert </Button>\r\n  </Alert>\r\n    <div className=\"registerContainer\">\r\n      <div className=\"boxRegister\">\r\n        <div className=\"registerForm\">\r\n        <h3>Register</h3>\r\n        <Form onSubmit={registerFormHandler}>\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your data with anyone else.\r\n            </Form.Text>\r\n            <br/>\r\n          <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" value={inputEmail} onInput={e => setInputEmail(e.target.value)} placeholder=\"Enter email\" required/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formUserName\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputUsername} onInput={e => setInputUsername(e.target.value)} placeholder=\"User name\" required/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputFirst} onInput={e => setInputFirst(e.target.value)} placeholder=\"First name\" required/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputLast} onInput={e => setInputLast(e.target.value)} placeholder=\"Last name\" required/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" value={inputPw} onInput={e => setInputPw(e.target.value)} placeholder=\"Password\" required/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type=\"password\" value={inputConfirmPw} onInput={e => setInputConfirmPw(e.target.value)} placeholder=\"Confirm Password\" required />\r\n          </Form.Group>\r\n\r\n          {isLoading && <Spinner variant=\"primary\"/>}\r\n          <Button variant=\"primary\"  style={{'float':'right'}} type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}