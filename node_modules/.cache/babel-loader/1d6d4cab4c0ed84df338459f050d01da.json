{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\UI\\\\Alert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { alertActions } from \"../../store/alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertDismissible = props => {\n  _s();\n\n  const dispatch = useDispatch;\n  const alertActive = useSelector(state => state.alert.alertToggle);\n  const alertVariant = useSelector(state => state.alert.alertVariant);\n  const alertTitle = useSelector(state => state.alert.alertTitle);\n  const alertBody = useSelector(state => state.alert.alertBody);\n\n  const handleClose = () => {\n    dispatch(alertActions.alertToggle());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: alertVariant,\n    onClose: alertActive,\n    dismissible: true,\n    children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n      className: \"center\",\n      children: alertTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), alertBody && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: alertBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}; // return <Button onClick={() => setShow(true)}>Show Alert</Button>;\n\n\n_s(AlertDismissible, \"6STdKcmTDmASswv3TFIm8JWB3Os=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AlertDismissible;\nexport default AlertDismissible;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertDismissible\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/UI/Alert.js"],"names":["React","useState","Alert","useSelector","useDispatch","alertActions","AlertDismissible","props","dispatch","alertActive","state","alert","alertToggle","alertVariant","alertTitle","alertBody","handleClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAMC,QAAQ,GAAGJ,WAAjB;AACA,QAAMK,WAAW,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,WAAtB,CAA/B;AACA,QAAMC,YAAY,GAAGV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,YAAxB,CAAhC;AACA,QAAMC,UAAU,GAAGX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYG,UAAxB,CAA9B;AACA,QAAMC,SAAS,GAAGZ,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYI,SAAxB,CAA7B;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACxBR,IAAAA,QAAQ,CAACH,YAAY,CAACO,WAAb,EAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEC,YAAhB;AAA8B,IAAA,OAAO,EAAEJ,WAAvC;AAAoD,IAAA,WAAW,MAA/D;AAAA,4BACA,QAAC,KAAD,CAAO,OAAP;AAAe,MAAA,SAAS,EAAC,QAAzB;AAAA,gBAAmCK;AAAnC;AAAA;AAAA;AAAA;AAAA,YADA,EAECC,SAAS,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD,C,CAmBI;;;GAnBET,gB;UAEgBH,W,EACCA,W,EACFA,W,EACDA,W;;;KALdG,gB;AAuBJ,eAAeA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { alertActions } from \"../../store/alert\";\r\n\r\nconst AlertDismissible = (props) => {\r\n  const dispatch = useDispatch;\r\n  const alertActive = useSelector(state => state.alert.alertToggle)\r\n  const alertVariant = useSelector((state) => state.alert.alertVariant)\r\n  const alertTitle = useSelector((state) => state.alert.alertTitle)\r\n  const alertBody = useSelector((state) => state.alert.alertBody)\r\n\r\n\r\n  const handleClose = () => {\r\n    dispatch(alertActions.alertToggle())\r\n  }\r\n\r\n  return (\r\n    <Alert variant={alertVariant} onClose={alertActive} dismissible>\r\n    <Alert.Heading className=\"center\">{alertTitle}</Alert.Heading>\r\n    {alertBody && <p>{alertBody}</p>}\r\n  </Alert>\r\n  );\r\n}\r\n    // return <Button onClick={() => setShow(true)}>Show Alert</Button>;\r\n  \r\n  \r\n\r\n  export default AlertDismissible"]},"metadata":{},"sourceType":"module"}