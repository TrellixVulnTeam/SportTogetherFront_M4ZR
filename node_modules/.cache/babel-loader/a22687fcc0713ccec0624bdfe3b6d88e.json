{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\AddEventForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./AddEventForm.css\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Select from 'react-select';\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Form, Col, Row, Button, FloatingLabel, FormControl } from \"react-bootstrap\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\n\nvar yyyy = today.getFullYear();\n\nif (dd < 10) {\n  dd = '0' + dd;\n}\n\nif (mm < 10) {\n  mm = '0' + mm;\n}\n\ntoday = yyyy + '-' + mm + '-' + dd;\n\nconst AddEventForm = props => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [inputSport, setInputSport] = useState('');\n  const [inputNrPlayers, setInputNrPlayers] = useState('');\n  const [inputLevel, setInputLevel] = useState('');\n  const [inputCounty, setInputCounty] = useState('');\n  const [inputCity, setInputCity] = useState('');\n  const [inputPlace, setInputPlace] = useState('');\n  const [inputDate, setInputDate] = useState('');\n  const [inputTime, setInputTime] = useState('');\n  const [inputDescription, setInputDescription] = useState('');\n  const [listCounties, setListCounties] = useState([]);\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function reverseDate(string) {\n    return string = string.split(\"-\").reverse().join(\"-\");\n  }\n\n  useEffect(() => {\n    let lstCounties = [];\n\n    for (let i of countyList) {\n      lstCounties.push({\n        value: i,\n        label: i\n      });\n    }\n\n    console.log(lstCounties);\n    setListCounties(lstCounties);\n  }, []);\n\n  const countyOptionChange = obj => {\n    setInputCounty(obj.value);\n  };\n\n  const handleSubmit = async event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n    }\n\n    setValidated(true);\n\n    if (form.checkValidity() === true) {\n      event.preventDefault();\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/createEvent', {\n          method: 'POST',\n          headers: new Headers({\n            'Authorization': 'Bearer ' + auth.token,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify({\n            'Sport': inputSport,\n            'County': inputCounty,\n            'City': capitalizeFirstLetter(inputCity),\n            'NrPlayers': inputNrPlayers,\n            'LevelRequirement': inputLevel,\n            'Place': inputPlace,\n            'Date': reverseDate(inputDate),\n            'Time': inputTime,\n            'Description': inputDescription\n          })\n        });\n        const responseData = await response.json();\n\n        if (response.ok) {\n          console.log('response.OK from /createEvent > responnseData :', responseData); // isSuccess used to show message\n        }\n      } catch (error) {\n        setIsError(error);\n        setIsLoading(false);\n        console.log(error);\n      }\n\n      setTimeout(() => {\n        props.onAddEventItem(false);\n      }, 1000);\n    }\n\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addEventFormClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-5\",\n      id: \"noticeEvent\",\n      children: \" Keep in mind, once you create an event, you will not be able to edit/delete it if other users joined the event unless you make a request to all users and they agree with your request!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3 justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"2\",\n          className: \"d-flex justify-content-center\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 64\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-5\",\n        id: \"noticeEvent\",\n        children: isError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Choose a sport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: inputSport,\n            onInput: e => setInputSport(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Tennis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Football\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Table Tennis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Jogging\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cycling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Paintball\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Airsoft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Skiing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Basketball\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Work out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Volleyball\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Badminton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Ice Skating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Skating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Bowling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Laser Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide a valid sport.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nr of players including you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"ex: 4\",\n            min: \"2\",\n            max: \"20\",\n            value: inputNrPlayers,\n            onInput: e => setInputNrPlayers(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide an appropriate nr of players(including you).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Level Requirement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: inputLevel,\n            onInput: e => setInputLevel(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: false,\n              children: \"Open to everyone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: true,\n              children: \"Restricted to my level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide level requirement.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom03\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-sm m-2\",\n            style: {\n              'float': 'right'\n            },\n            children: \" Use current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: listCounties,\n            value: inputCounty.value,\n            onChange: option => countyOptionChange(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: inputCity,\n            onInput: e => setInputCity(e.target.value),\n            autoComplete: \"off\",\n            placeholder: \"Ex: Iasi\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"You can specify a place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: inputPlace,\n            onInput: e => setInputPlace(e.target.value),\n            autoComplete: \"off\",\n            placeholder: \"Place: ex: Sport club...(Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"date\",\n            min: today,\n            value: inputDate,\n            onInput: e => setInputDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"time\",\n            value: inputTime,\n            onInput: e => setInputTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"floatingTextarea\",\n            label: \"You can write a description.(Optional)\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: inputDescription,\n              onInput: e => setInputDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        style: {\n          'float': 'right'\n        },\n        children: \"Create event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 24\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        style: {\n          'float': 'right'\n        },\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          as: \"span\",\n          animation: \"grow\",\n          size: \"sm\",\n          role: \"status\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEventForm, \"tlxpfyP6cbWBUC79s3O4YSRYzYw=\");\n\n_c = AddEventForm;\nexport default AddEventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEventForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/AddEventForm.js"],"names":["React","useState","useContext","useEffect","Select","countyList","Spinner","Form","Col","Row","Button","FloatingLabel","FormControl","AuthContext","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","AddEventForm","props","auth","isLoading","setIsLoading","validated","setValidated","isError","setIsError","inputSport","setInputSport","inputNrPlayers","setInputNrPlayers","inputLevel","setInputLevel","inputCounty","setInputCounty","inputCity","setInputCity","inputPlace","setInputPlace","inputDate","setInputDate","inputTime","setInputTime","inputDescription","setInputDescription","listCounties","setListCounties","capitalizeFirstLetter","string","charAt","toUpperCase","slice","reverseDate","split","reverse","join","lstCounties","i","push","value","label","console","log","countyOptionChange","obj","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","response","fetch","method","headers","Headers","token","body","JSON","stringify","responseData","json","ok","error","setTimeout","onAddEventItem","e","target","option"],"mappings":"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","sourcesContent":["import \"./AddEventForm.css\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport Select from 'react-select'\r\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport {\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  FloatingLabel,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nvar today = new Date();\r\nvar dd = today.getDate();\r\nvar mm = today.getMonth()+1; //January is 0 so need to add 1 to make it 1!\r\nvar yyyy = today.getFullYear();\r\nif(dd<10){\r\n  dd='0'+dd\r\n} \r\nif(mm<10){\r\n  mm='0'+mm\r\n} \r\n\r\ntoday = yyyy+'-'+mm+'-'+dd;\r\n\r\n\r\nconst AddEventForm = (props) => {\r\n  const auth = useContext(AuthContext)\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [validated, setValidated] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [inputSport, setInputSport] = useState('')\r\n  const [inputNrPlayers, setInputNrPlayers] = useState('')\r\n  const [inputLevel, setInputLevel] = useState('')\r\n  const [inputCounty, setInputCounty] = useState('')\r\n  const [inputCity, setInputCity] = useState('')\r\n  const [inputPlace, setInputPlace] = useState('')\r\n  const [inputDate, setInputDate] = useState('')\r\n  const [inputTime, setInputTime] = useState('')\r\n  const [inputDescription, setInputDescription] = useState('')\r\n  const [listCounties, setListCounties] = useState([])\r\n\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  function reverseDate(string){\r\n    return string = string.split(\"-\").reverse().join(\"-\");\r\n  }\r\n\r\n  useEffect(()=>{\r\n    let lstCounties = []\r\n    for (let i of countyList){\r\n      lstCounties.push({value: i, label: i})\r\n    }\r\n    console.log(lstCounties)\r\n    setListCounties(lstCounties)\r\n  }, [])\r\n\r\n  const countyOptionChange = (obj) => {\r\n    setInputCounty(obj.value)\r\n  }\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity() === true) {\r\n      event.preventDefault();\r\n      setIsLoading(true)\r\n      try {\r\n        const response = await fetch('http://localhost:5000/createEvent', {\r\n                    method: 'POST',\r\n                    headers: new Headers({\r\n                      'Authorization': 'Bearer '+auth.token,\r\n                      'Accept': 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                    }),\r\n                    body: JSON.stringify({\r\n                      'Sport' : inputSport,\r\n                      'County' : inputCounty,\r\n                      'City' : capitalizeFirstLetter(inputCity),\r\n                      'NrPlayers' : inputNrPlayers,\r\n                      'LevelRequirement' : inputLevel,\r\n                      'Place' : inputPlace,\r\n                      'Date' : reverseDate(inputDate),\r\n                      'Time' : inputTime,\r\n                      'Description' : inputDescription,\r\n                    }),\r\n        });\r\n        const responseData = await response.json()\r\n        if(response.ok){\r\n          console.log('response.OK from /createEvent > responnseData :', responseData)\r\n          // isSuccess used to show message\r\n        }\r\n      } catch (error) {\r\n        setIsError(error)\r\n        setIsLoading(false)\r\n        console.log(error)\r\n      }\r\n      setTimeout(() => {\r\n        props.onAddEventItem(false)\r\n      }, 1000);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addEventFormClass\">\r\n      <p className=\"mb-5\" id=\"noticeEvent\"> Keep in mind, once you create an event, you will not be able to edit/delete it if other users joined the event unless you make a request to all users and they agree with your request!</p>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n\r\n      {isLoading && \r\n      <Row className=\"mb-3 justify-content-center\"> \r\n        <Col md='2' className=\"d-flex justify-content-center\"> <Spinner animation=\"border\" role=\"status\"/> </Col> \r\n      </Row>}\r\n      {isError && \r\n        <p className=\"mb-5\" id=\"noticeEvent\">{isError}</p>\r\n      }\r\n      \r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\">\r\n            <Form.Label>Choose a sport</Form.Label>\r\n            <Form.Select value={inputSport} onInput={e => setInputSport(e.target.value)} required>\r\n              <option></option>\r\n              <option>Tennis</option>\r\n              <option>Football</option>\r\n              <option>Table Tennis</option>\r\n              <option>Jogging</option>\r\n              <option>Cycling</option>\r\n              <option>Paintball</option>\r\n              <option>Airsoft</option>\r\n              <option>Skiing</option>\r\n              <option>Basketball</option>\r\n              <option>Work out</option>\r\n              <option>Volleyball</option>\r\n              <option>Badminton</option>\r\n              <option>Ice Skating</option>\r\n              <option>Skating</option>\r\n              <option>Bowling</option>\r\n              <option>Laser Tag</option>\r\n            </Form.Select>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid sport.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Form.Label>Nr of players including you</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"ex: 4\"\r\n              min=\"2\"\r\n              max=\"20\"\r\n              value={inputNrPlayers} onInput={e => setInputNrPlayers(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide an appropriate nr of players(including you).\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\">\r\n            <Form.Label>Level Requirement</Form.Label>\r\n            <Form.Select value={inputLevel} onInput={e => setInputLevel(e.target.value)} required>\r\n              <option></option>\r\n              <option value={false} >Open to everyone</option>\r\n              <option value={true} >Restricted to my level</option>\r\n            </Form.Select>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide level requirement.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n          <Form.Label>County</Form.Label><Button className=\"btn btn-sm m-2\" style={{'float':'right'}}> Use current location</Button>\r\n            <Select options ={listCounties} value={inputCounty.value} onChange={(option) => countyOptionChange(option)}/>\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={inputCity} onInput={e => setInputCity(e.target.value)}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Ex: Iasi\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>You can specify a place</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={inputPlace} onInput={e => setInputPlace(e.target.value)}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Place: ex: Sport club...(Optional)\"\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Form.Label>Start date</Form.Label>\r\n            <FormControl type=\"date\" min={today} value={inputDate} onInput={e => setInputDate(e.target.value)} required/>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start date\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n          \r\n          <Col md=\"6\">\r\n            <Form.Label>Start time</Form.Label>\r\n            <FormControl type=\"time\" value={inputTime} onInput={e => setInputTime(e.target.value)} required/>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start time\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\" className=\"mt-3\">\r\n            <FloatingLabel\r\n              controlId=\"floatingTextarea\"\r\n              label=\"You can write a description.(Optional)\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control as=\"textarea\" value={inputDescription} onInput={e => setInputDescription(e.target.value)}/>\r\n            </FloatingLabel>\r\n          </Col>\r\n        </Row>\r\n        \r\n        {!isLoading && <Button type=\"submit\" style={{'float': 'right'}} >Create event</Button>}\r\n        {isLoading && <Button variant=\"primary\" style={{'float': 'right'}} disabled>\r\n          <Spinner\r\n            as=\"span\"\r\n            animation=\"grow\"\r\n            size=\"sm\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          Loading...\r\n        </Button>}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEventForm;\r\n\r\n"]},"metadata":{},"sourceType":"module"}