{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\UploadIcon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport \"./UploadIcon.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadIcon = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n  const [responseOk, setResponseOk] = useState(false);\n  const token = useSelector(state => state.authentication.token);\n\n  const handleImage = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleImageUpload = async event => {\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('profile', selectedFile);\n    console.log(formData, 'formdata from fetch');\n\n    try {\n      const response = await fetch('http://localhost:5000/uploadimage', {\n        method: 'POST',\n        headers: {\n          'Authorization': \"Bearer \" + token\n        },\n        body: formData\n      });\n      const responseData = await response.json();\n\n      if (response.ok) {\n        console.log(\"response.OK from /userimage > responnseData :\", responseData); // isSuccess used to show message\n\n        setResponseOk(true);\n      } else {\n        setIsLoading(false);\n        return new Error(responseData.message);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      console.log(error);\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    encType: \"multipart/form-data\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please don't close this window while we processing your request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileUpload\",\n          name: \"profile\",\n          onChange: handleImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-arrow-up\",\n          style: {\n            'fontSize': '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this), responseOk && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleImageUpload,\n      style: {\n        borderColor: 'transparent'\n      },\n      disabled: isLoading,\n      children: \"Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadIcon, \"ogROm1o6Zo9oGdwkLcw2u6VXpZA=\", false, function () {\n  return [useSelector];\n});\n\n_c = UploadIcon;\nexport default UploadIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadIcon\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/UploadIcon.js"],"names":["React","useState","Button","Spinner","useSelector","UploadIcon","isLoading","setIsLoading","selectedFile","setSelectedFile","responseOk","setResponseOk","token","state","authentication","handleImage","event","target","files","handleImageUpload","formData","FormData","append","console","log","response","fetch","method","headers","body","responseData","json","ok","Error","message","error","borderColor"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./UploadIcon.css\";\r\n\r\nconst UploadIcon = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [selectedFile, setSelectedFile] = useState()\r\n  const [responseOk, setResponseOk] = useState(false)\r\n\r\n  const token = useSelector((state) => state.authentication.token)\r\n\r\n  const handleImage = (event) => {\r\n\t\tsetSelectedFile(event.target.files[0]);\r\n\t};\r\n\r\n  const handleImageUpload = async (event) => {\r\n    setIsLoading(true);\r\n\r\n    const formData = new FormData();\r\n\t\tformData.append('profile', selectedFile);\r\n\r\n    console.log(formData, 'formdata from fetch')\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/uploadimage',\r\n        {\r\n          method: 'POST',\r\n          headers:{'Authorization': \"Bearer \" + token},\r\n          body: formData,\r\n        }\r\n      )\r\n      const responseData = await response.json()\r\n      if (response.ok) {\r\n        console.log(\"response.OK from /userimage > responnseData :\",responseData);\r\n        // isSuccess used to show message\r\n        setResponseOk(true)\r\n      } else {\r\n        setIsLoading(false);\r\n        return new Error(responseData.message);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.log(error);\r\n    }\r\n\r\n\r\n    setIsLoading(false)\r\n  };\r\n\t\r\n  return (\r\n    <form encType=\"multipart/form-data\">\r\n      {isLoading && <div>Please don't close this window while we processing your request</div>}\r\n      <div className=\"wrapper\"  >\r\n        <div className=\"file-upload\">\r\n          <input type=\"file\" id=\"fileUpload\" name=\"profile\" onChange={handleImage}/>\r\n          <i className=\"fa fa-arrow-up\" style={{'fontSize':'40px'}}></i>\r\n        </div>\r\n      </div>\r\n      {isLoading && <Spinner animation=\"border\" variant=\"primary\"/>}\r\n      {responseOk && <Button onClick={handleImageUpload} style={{borderColor:'transparent'}} disabled={isLoading}>Preview</Button>}\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nexport default UploadIcon;"]},"metadata":{},"sourceType":"module"}