{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isLogged: false,\n  userId: null,\n  token: null,\n  modalShow: false,\n  login: () => {},\n  logout: () => {}\n};\ncreateSlice({\n  name: 'authorization',\n  initialState: initialAuthState\n});\n\nconst authorization = (state = initialAuthState, action) => {\n  if (action.type === 'login') {\n    return {\n      isLogged: state.isLogged = action.value\n    };\n  }\n};\n\nconst store = createStore({\n  authIsLogged\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/store/index.js"],"names":["createStore","createSlice","initialAuthState","isLogged","userId","token","modalShow","login","logout","name","initialState","authorization","state","action","type","value","store","authIsLogged"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAE,KADW;AAErBC,EAAAA,MAAM,EAAC,IAFc;AAGrBC,EAAAA,KAAK,EAAC,IAHe;AAIrBC,EAAAA,SAAS,EAAE,KAJU;AAKrBC,EAAAA,KAAK,EAAE,MAAM,CAAE,CALM;AAMrBC,EAAAA,MAAM,EAAE,MAAM,CAAE;AANK,CAAzB;AASAP,WAAW,CAAC;AACRQ,EAAAA,IAAI,EAAC,eADG;AAERC,EAAAA,YAAY,EAAER;AAFN,CAAD,CAAX;;AAKA,MAAMS,aAAa,GAAG,CAACC,KAAK,GAAGV,gBAAT,EAA2BW,MAA3B,KAAuC;AACzD,MAAGA,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA2B;AACvB,WAAO;AACHX,MAAAA,QAAQ,EAAES,KAAK,CAACT,QAAN,GAAiBU,MAAM,CAACE;AAD/B,KAAP;AAGH;AACJ,CAND;;AAYA,MAAMC,KAAK,GAAGhB,WAAW,CAAC;AAACiB,EAAAA;AAAD,CAAD,CAAzB;AAEA,eAAeD,KAAf","sourcesContent":["import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialAuthState = {\r\n    isLogged: false,\r\n    userId:null,\r\n    token:null,\r\n    modalShow: false,\r\n    login: () => {},\r\n    logout: () => {}\r\n}\r\n\r\ncreateSlice({\r\n    name:'authorization',\r\n    initialState: initialAuthState\r\n})\r\n\r\nconst authorization = (state = initialAuthState, action ) => {\r\n    if(action.type === 'login'){\r\n        return { \r\n            isLogged: state.isLogged = action.value,\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst store = createStore({authIsLogged})\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}