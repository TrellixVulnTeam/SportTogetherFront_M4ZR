{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Select from 'react-select';\nimport { Form, Button, Spinner, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { alertActions } from \"../../store/alert\";\nimport \"./RegisterForm.css\";\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputUsername, setInputUsername] = useState('');\n  const [inputFirst, setInputFirst] = useState('');\n  const [inputLast, setInputLast] = useState('');\n  const [inputPw, setInputPw] = useState('');\n  const [inputConfirmPw, setInputConfirmPw] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [buttonClass, setButtonClass] = useState();\n  const [inputGender, setInputGender] = useState('');\n  const [isError, setIsError] = useState();\n  const [inputCounty, setInputCounty] = useState('');\n  const [cityValidation, setCityValidation] = useState('');\n  const [genderValidation, setGenderValidation] = useState('');\n  const [inputCity, setInputCity] = useState('');\n  const [listCounties, setListCounties] = useState([]);\n  const [listCities, setListCities] = useState([]);\n  const dispatch = useDispatch();\n  useSelector(state => state.authentication.isAuthenticated);\n  useSelector(state => state.authentication.token);\n  useSelector(state => state.authentication.tokenExpiration);\n  useSelector(state => state.dialog.modalToggle);\n  useEffect(() => {\n    let lstCounties = [];\n\n    for (let i of countyList) {\n      lstCounties.push({\n        value: i,\n        label: i\n      });\n    }\n\n    console.log(lstCounties);\n    setListCounties(lstCounties);\n  }, []);\n\n  const btnClass1 = () => {\n    setInputGender('male');\n    setButtonClass(\"btnActive1\");\n  };\n\n  const btnClass2 = () => {\n    setInputGender(\"female\");\n    setButtonClass(\"btnActive2\");\n  };\n\n  const countyOptionChange = obj => {\n    setInputCounty(obj.value);\n    console.log(obj.value);\n    const countyNameList = countyCityList[obj.value];\n    console.log('LIST OF CITIES IN ARRAY: >>', countyNameList);\n    let lstCities = [];\n\n    for (let i of countyNameList) {\n      lstCities.push({\n        value: i,\n        label: i\n      });\n    }\n\n    console.log(lstCities);\n    setListCities(lstCities);\n  };\n\n  const cityOptionChange = obj => {\n    setInputCity(obj.value);\n  };\n\n  const registerFormHandler = async event => {\n    event.preventDefault();\n\n    if (!inputCity || !inputCounty) {\n      return setCityValidation(\"Please choose County\");\n    }\n\n    if (!inputGender) {\n      return setGenderValidation(\"Please choose gender\");\n    }\n\n    if (inputGender && inputCity && inputCounty) {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://localhost:5000/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            'email': inputEmail,\n            'username': inputUsername,\n            'firstName': inputFirst,\n            'lastName': inputLast,\n            'county': inputCounty,\n            'gender': inputGender,\n            'city': inputCity,\n            'password': inputPw,\n            'confirmPw': inputConfirmPw\n          })\n        });\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          setIsError(responseData.error);\n          setIsLoading(false);\n          return new Error(responseData.message);\n        } else {\n          console.log(responseData);\n          dispatch(modal.alertToggle());\n          dispatch(alertActions.alertToggle());\n          dispatch(alertActions.alertTitle('Welcome to SportTogether'));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxRegister\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-5\",\n          id: \"noticeEvent\",\n          children: [\" \", isError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: registerFormHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your data with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: inputEmail,\n              onInput: e => setInputEmail(e.target.value),\n              placeholder: \"Enter email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formUserName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputUsername,\n              onInput: e => setInputUsername(e.target.value),\n              placeholder: \"User name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"my-3\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formFirstName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: inputFirst,\n                  onInput: e => setInputFirst(e.target.value),\n                  placeholder: \"First name\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formLastName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: inputLast,\n                  onInput: e => setInputLast(e.target.value),\n                  placeholder: \"Last name\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"my-2\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"center\",\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"choiceBtns\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  \"aria-label\": \"option 1\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: buttonClass === \"btnActive1\" ? \"btnActive1\" : \"\",\n                    value: inputGender,\n                    onClick: btnClass1,\n                    style: {\n                      width: '150px',\n                      fontSize: '16px'\n                    },\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  \"aria-label\": \"option 2\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: buttonClass === \"btnActive2\" ? \"btnActive2\" : \"\",\n                    value: inputGender,\n                    onClick: btnClass2,\n                    style: {\n                      width: '150px',\n                      fontSize: '16px'\n                    },\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this), !inputGender && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-warning center validationInput123\",\n                children: genderValidation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formCounty\",\n                style: {\n                  'color': 'black'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"County\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  options: listCounties,\n                  value: inputCounty.value,\n                  onChange: option => countyOptionChange(option)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 17\n                }, this), !inputCounty && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"center mt-2 text-warning\",\n                  children: [\" \", cityValidation, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formCity\",\n                style: {\n                  'color': 'black'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  options: listCities,\n                  value: inputCity.value,\n                  onChange: opt => cityOptionChange(opt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 15\n              }, this), !inputCounty && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"center mt-2 text-warning\",\n                children: [\" \", cityValidation, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  value: inputPw,\n                  onInput: e => setInputPw(e.target.value),\n                  placeholder: \"Password\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formConfirmPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  value: inputConfirmPw,\n                  onInput: e => setInputConfirmPw(e.target.value),\n                  placeholder: \"Confirm Password\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this), !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 26\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            disabled: true,\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"grow\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 13\n            }, this), \"Loading...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"LT5/e6bCuRGxMpT4o4nI7GUArk8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/RegisterForm.js"],"names":["React","useState","useEffect","Select","Form","Button","Spinner","Col","Row","useDispatch","useSelector","alertActions","countyList","countyCityList","RegisterForm","inputEmail","setInputEmail","inputUsername","setInputUsername","inputFirst","setInputFirst","inputLast","setInputLast","inputPw","setInputPw","inputConfirmPw","setInputConfirmPw","isLoading","setIsLoading","buttonClass","setButtonClass","inputGender","setInputGender","isError","setIsError","inputCounty","setInputCounty","cityValidation","setCityValidation","genderValidation","setGenderValidation","inputCity","setInputCity","listCounties","setListCounties","listCities","setListCities","dispatch","state","authentication","isAuthenticated","token","tokenExpiration","dialog","modalToggle","lstCounties","i","push","value","label","console","log","btnClass1","btnClass2","countyOptionChange","obj","countyNameList","lstCities","cityOptionChange","registerFormHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","error","Error","message","modal","alertToggle","alertTitle","e","target","width","fontSize","option","opt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqCC,GAArC,QAAgD,iBAAhD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAO,oBAAP;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC0B,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgC7B,QAAQ,EAA9C;AACA,QAAM,CAAC8B,WAAD,EAAcC,cAAd,IAAgC/B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgC,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,EAAtC;AACA,QAAM,CAACkC,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACoC,cAAD,EAAiBC,iBAAjB,IAAsCrC,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACsC,gBAAD,EAAmBC,mBAAnB,IAA0CvC,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACwC,SAAD,EAAYC,YAAZ,IAA4BzC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC0C,YAAD,EAAeC,eAAf,IAAkC3C,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC4C,UAAD,EAAaC,aAAb,IAA8B7C,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM8C,QAAQ,GAAGtC,WAAW,EAA5B;AACAC,EAAAA,WAAW,CAAEsC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBC,eAAjC,CAAX;AACAxC,EAAAA,WAAW,CAAEsC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBE,KAAjC,CAAX;AACAzC,EAAAA,WAAW,CAAEsC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBG,eAAjC,CAAX;AACA1C,EAAAA,WAAW,CAAEsC,KAAD,IAAWA,KAAK,CAACK,MAAN,CAAaC,WAAzB,CAAX;AAEEpD,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIqD,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAT,IAAc5C,UAAd,EAAyB;AACvB2C,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAACC,QAAAA,KAAK,EAAEF,CAAR;AAAWG,QAAAA,KAAK,EAAEH;AAAlB,OAAjB;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAX,IAAAA,eAAe,CAACW,WAAD,CAAf;AACD,GAPQ,EAOP,EAPO,CAAT;;AASF,QAAMO,SAAS,GAAG,MAAM;AACtB9B,IAAAA,cAAc,CAAC,MAAD,CAAd;AACAF,IAAAA,cAAc,CAAC,YAAD,CAAd;AACD,GAHD;;AAIA,QAAMiC,SAAS,GAAG,MAAM;AACtB/B,IAAAA,cAAc,CAAC,QAAD,CAAd;AACAF,IAAAA,cAAc,CAAC,YAAD,CAAd;AACD,GAHD;;AAKA,QAAMkC,kBAAkB,GAAIC,GAAD,IAAS;AAClC7B,IAAAA,cAAc,CAAC6B,GAAG,CAACP,KAAL,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACP,KAAhB;AACA,UAAMQ,cAAc,GAAGrD,cAAc,CAACoD,GAAG,CAACP,KAAL,CAArC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CK,cAA3C;AAEA,QAAIC,SAAS,GAAG,EAAhB;;AACE,SAAK,IAAIX,CAAT,IAAcU,cAAd,EAA6B;AAC3BC,MAAAA,SAAS,CAACV,IAAV,CAAe;AAACC,QAAAA,KAAK,EAAEF,CAAR;AAAWG,QAAAA,KAAK,EAAEH;AAAlB,OAAf;AACD;;AACHI,IAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACArB,IAAAA,aAAa,CAACqB,SAAD,CAAb;AACD,GAZD;;AAeA,QAAMC,gBAAgB,GAAIH,GAAD,IAAS;AAChCvB,IAAAA,YAAY,CAACuB,GAAG,CAACP,KAAL,CAAZ;AACD,GAFD;;AAKA,QAAMW,mBAAmB,GAAG,MAAOC,KAAP,IAAiB;AAC3CA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,CAAC9B,SAAD,IAAc,CAACN,WAAnB,EAAgC;AAC9B,aAAOG,iBAAiB,CAAC,sBAAD,CAAxB;AACD;;AACD,QAAI,CAACP,WAAL,EAAkB;AAChB,aAAOS,mBAAmB,CAAC,sBAAD,CAA1B;AACD;;AAGD,QAAGT,WAAW,IAAIU,SAAf,IAA4BN,WAA/B,EAA2C;AAC3C,UAAI;AACFP,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAM4C,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AAC3DC,UAAAA,MAAM,EAAE,MADmD;AAE3DC,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WAFkD;AAG3DC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,qBAAS/D,UADU;AAEnB,wBAAYE,aAFO;AAGnB,yBAAaE,UAHM;AAInB,wBAAYE,SAJO;AAKnB,sBAAWc,WALQ;AAMnB,sBAAWJ,WANQ;AAOnB,oBAASU,SAPU;AAQnB,wBAAYlB,OARO;AASnB,yBAAaE;AATM,WAAf;AAHqD,SAAjC,CAA5B;AAeA,cAAMsD,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;;AACA,YAAG,CAACR,QAAQ,CAACS,EAAb,EAAgB;AACd/C,UAAAA,UAAU,CAAC6C,YAAY,CAACG,KAAd,CAAV;AACAtD,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,iBAAO,IAAIuD,KAAJ,CAAUJ,YAAY,CAACK,OAAvB,CAAP;AACD,SAJD,MAIK;AACHxB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,YAAZ;AACAhC,UAAAA,QAAQ,CAACsC,KAAK,CAACC,WAAN,EAAD,CAAR;AACAvC,UAAAA,QAAQ,CAACpC,YAAY,CAAC2E,WAAb,EAAD,CAAR;AACAvC,UAAAA,QAAQ,CAACpC,YAAY,CAAC4E,UAAb,CAAwB,0BAAxB,CAAD,CAAR;AAED;AACF,OA7BD,CA6BE,OAAOL,KAAP,EAAc;AACdtB,QAAAA,OAAO,CAACsB,KAAR,CAAcA,KAAd;AACD;AACA;AACF,GA5CD;;AA8CA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAECjD,OAAO,iBAAI;AAAG,UAAA,SAAS,EAAC,MAAb;AAAoB,UAAA,EAAE,EAAC,aAAvB;AAAA,0BAAuCA,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFZ,eAGA,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEoC,mBAAhB;AAAA,kCACI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAME,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,WAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,OAAnB;AAA2B,cAAA,KAAK,EAAEtD,UAAlC;AAA8C,cAAA,OAAO,EAAEyE,CAAC,IAAIxE,aAAa,CAACwE,CAAC,CAACC,MAAF,CAAS/B,KAAV,CAAzE;AAA2F,cAAA,WAAW,EAAC,aAAvG;AAAqH,cAAA,QAAQ;AAA7H;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAWE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,cAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,MAAnB;AAA0B,cAAA,KAAK,EAAEzC,aAAjC;AAAgD,cAAA,OAAO,EAAEuE,CAAC,IAAItE,gBAAgB,CAACsE,CAAC,CAACC,MAAF,CAAS/B,KAAV,CAA9E;AAAgG,cAAA,WAAW,EAAC,WAA5G;AAAwH,cAAA,QAAQ;AAAhI;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAeE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE,QAAC,GAAD;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAa,gBAAA,SAAS,EAAC,eAAvB;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,MAAnB;AAA0B,kBAAA,KAAK,EAAEvC,UAAjC;AAA6C,kBAAA,OAAO,EAAEqE,CAAC,IAAIpE,aAAa,CAACoE,CAAC,CAACC,MAAF,CAAS/B,KAAV,CAAxE;AAA0F,kBAAA,WAAW,EAAC,YAAtG;AAAmH,kBAAA,QAAQ;AAA3H;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,GAAD;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,cAAtB;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,MAAnB;AAA0B,kBAAA,KAAK,EAAErC,SAAjC;AAA4C,kBAAA,OAAO,EAAEmE,CAAC,IAAIlE,YAAY,CAACkE,CAAC,CAACC,MAAF,CAAS/B,KAAV,CAAtE;AAAwF,kBAAA,WAAW,EAAC,WAApG;AAAgH,kBAAA,QAAQ;AAAxH;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eA6BE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,IAAI,EAAC,OAAjB;AAAyB,gCAAW,UAApC;AAAA,yCACE;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,EAAE,EAAE7B,WAAW,KAAK,YAAhB,GAA+B,YAA/B,GAA8C,EAFpD;AAGE,oBAAA,KAAK,EAAEE,WAHT;AAIE,oBAAA,OAAO,EAAE+B,SAJX;AAKE,oBAAA,KAAK,EAAE;AAAC4B,sBAAAA,KAAK,EAAC,OAAP;AAAgBC,sBAAAA,QAAQ,EAAC;AAAzB,qBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAYE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,IAAI,EAAC,OAAjB;AAAyB,gCAAW,UAApC;AAAA,yCACE;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,EAAE,EAAE9D,WAAW,KAAK,YAAhB,GAA+B,YAA/B,GAA8C,EAFpD;AAGE,oBAAA,KAAK,EAAEE,WAHT;AAIE,oBAAA,OAAO,EAAEgC,SAJX;AAKE,oBAAA,KAAK,EAAE;AAAC2B,sBAAAA,KAAK,EAAC,OAAP;AAAgBC,sBAAAA,QAAQ,EAAC;AAAzB,qBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EA0BG,CAAC5D,WAAD,iBAAgB;AAAK,gBAAA,SAAS,EAAC,wCAAf;AAAA,0BACZQ;AADY;AAAA;AAAA;AAAA;AAAA,sBA1BnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA7BF,eA6DE,QAAC,GAAD;AAAA,oCACE,QAAC,GAAD;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,YAAtB;AAAmC,gBAAA,KAAK,EAAE;AAAC,2BAAQ;AAAT,iBAA1C;AAAA,wCACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEE,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAGI,YAAlB;AAAgC,kBAAA,KAAK,EAAER,WAAW,CAACuB,KAAnD;AAA0D,kBAAA,QAAQ,EAAGkC,MAAD,IAAY5B,kBAAkB,CAAC4B,MAAD;AAAlG;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGG,CAACzD,WAAD,iBAAgB;AAAK,kBAAA,SAAS,EAAC,0BAAf;AAAA,kCAA4CE,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,UAAtB;AAAiC,gBAAA,KAAK,EAAE;AAAC,2BAAQ;AAAT,iBAAxC;AAAA,wCACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEE,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAIQ,UAAnB;AAA+B,kBAAA,KAAK,EAAEJ,SAAS,CAACiB,KAAhD;AAAuD,kBAAA,QAAQ,EAAGmC,GAAD,IAASzB,gBAAgB,CAACyB,GAAD;AAA1F;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAKG,CAAC1D,WAAD,iBAAgB;AAAK,gBAAA,SAAS,EAAC,0BAAf;AAAA,gCAA4CE,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,sBALnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7DF,eA8EE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE,QAAC,GAAD;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,MAAtB;AAA6B,gBAAA,SAAS,EAAC,cAAvC;AAAA,wCACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,UAAnB;AAA8B,kBAAA,KAAK,EAAEd,OAArC;AAA8C,kBAAA,OAAO,EAAEiE,CAAC,IAAIhE,UAAU,CAACgE,CAAC,CAACC,MAAF,CAAS/B,KAAV,CAAtE;AAAwF,kBAAA,WAAW,EAAC,UAApG;AAA+G,kBAAA,QAAQ;AAAvH;AAAA;AAAA;AAAA;AAAA,wBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,GAAD;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,MAAtB;AAA6B,gBAAA,SAAS,EAAC,qBAAvC;AAAA,wCACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA,QAAC,IAAD,CAAM,OAAN;AAAc,kBAAA,IAAI,EAAC,UAAnB;AAA8B,kBAAA,KAAK,EAAEjC,cAArC;AAAqD,kBAAA,OAAO,EAAE+D,CAAC,IAAI9D,iBAAiB,CAAC8D,CAAC,CAACC,MAAF,CAAS/B,KAAV,CAApF;AAAsG,kBAAA,WAAW,EAAC,kBAAlH;AAAqI,kBAAA,QAAQ;AAA7I;AAAA;AAAA;AAAA;AAAA,wBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9EF,EA6FG,CAAC/B,SAAD,iBAAc,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7FjB,EA8FGA,SAAS,iBAAI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,QAAQ,MAAlC;AAAA,oCACZ,QAAC,OAAD;AACE,cAAA,EAAE,EAAC,MADL;AAEE,cAAA,SAAS,EAAC,MAFZ;AAGE,cAAA,IAAI,EAAC,QAHP;AAIE,6BAAY;AAJd;AAAA;AAAA;AAAA;AAAA,oBADY;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9FhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkHD,CA9ND;;GAAMb,Y;UAkBaL,W,EACjBC,W,EACAA,W,EACAA,W,EACAA,W;;;KAtBII,Y;AAgON,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Select from 'react-select'\r\nimport { Form, Button, Spinner, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { alertActions } from \"../../store/alert\";\r\nimport \"./RegisterForm.css\";\r\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\r\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\r\n\r\nconst RegisterForm = () => {  \r\n  const [inputEmail, setInputEmail] = useState('')\r\n  const [inputUsername, setInputUsername] = useState('')\r\n  const [inputFirst, setInputFirst] = useState('')\r\n  const [inputLast, setInputLast] = useState('')\r\n  const [inputPw, setInputPw] = useState('')\r\n  const [inputConfirmPw, setInputConfirmPw] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [buttonClass, setButtonClass] = useState()\r\n  const [inputGender, setInputGender] = useState('')\r\n  const [isError, setIsError] = useState()\r\n  const [inputCounty, setInputCounty] = useState('')\r\n  const [cityValidation, setCityValidation] = useState('')\r\n  const [genderValidation, setGenderValidation] = useState('')\r\n  const [inputCity, setInputCity] = useState('')\r\n  const [listCounties, setListCounties] = useState([])\r\n  const [listCities, setListCities] = useState([])\r\n\r\n  const dispatch = useDispatch();\r\n  useSelector((state) => state.authentication.isAuthenticated)\r\n  useSelector((state) => state.authentication.token)\r\n  useSelector((state) => state.authentication.tokenExpiration)\r\n  useSelector((state) => state.dialog.modalToggle)\r\n\r\n    useEffect(()=>{\r\n      let lstCounties = []\r\n      for (let i of countyList){\r\n        lstCounties.push({value: i, label: i})\r\n      }\r\n      console.log(lstCounties)\r\n      setListCounties(lstCounties)\r\n    },[])\r\n\r\n  const btnClass1 = () => {\r\n    setInputGender('male');\r\n    setButtonClass(\"btnActive1\");\r\n  };\r\n  const btnClass2 = () => {\r\n    setInputGender(\"female\");\r\n    setButtonClass(\"btnActive2\");\r\n  };\r\n\r\n  const countyOptionChange = (obj) => {\r\n    setInputCounty(obj.value)\r\n    console.log(obj.value)\r\n    const countyNameList = countyCityList[obj.value]\r\n    console.log('LIST OF CITIES IN ARRAY: >>', countyNameList )\r\n\r\n    let lstCities = []\r\n      for (let i of countyNameList){\r\n        lstCities.push({value: i, label: i})\r\n      }\r\n    console.log(lstCities)\r\n    setListCities(lstCities)\r\n  }\r\n\r\n\r\n  const cityOptionChange = (obj) => {\r\n    setInputCity(obj.value)\r\n  }\r\n  \r\n\r\n  const registerFormHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (!inputCity || !inputCounty) {\r\n      return setCityValidation(\"Please choose County\");\r\n    }\r\n    if (!inputGender) {\r\n      return setGenderValidation(\"Please choose gender\");\r\n    }\r\n  \r\n\r\n    if(inputGender && inputCity && inputCounty){\r\n    try {\r\n      setIsLoading(true)\r\n      const response = await fetch('http://localhost:5000/signup', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          'email': inputEmail,\r\n          'username': inputUsername,\r\n          'firstName': inputFirst,\r\n          'lastName': inputLast,\r\n          'county' : inputCounty,\r\n          'gender' : inputGender,\r\n          'city' : inputCity,\r\n          'password': inputPw,\r\n          'confirmPw': inputConfirmPw,\r\n        })\r\n      })\r\n      const responseData = await response.json()\r\n      if(!response.ok){\r\n        setIsError(responseData.error)\r\n        setIsLoading(false)\r\n        return new Error(responseData.message)\r\n      }else{\r\n        console.log(responseData)\r\n        dispatch(modal.alertToggle())\r\n        dispatch(alertActions.alertToggle())\r\n        dispatch(alertActions.alertTitle('Welcome to SportTogether'))\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n    }\r\n  }\r\n \r\n  return (\r\n    <div className=\"registerContainer\">\r\n      <div className=\"boxRegister\">\r\n        <div className=\"registerForm\">\r\n        <h3>Register</h3>\r\n        {isError && <p className=\"mb-5\" id=\"noticeEvent\"> {isError}</p>}\r\n        <Form onSubmit={registerFormHandler}>\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your data with anyone else.\r\n            </Form.Text>\r\n            <br/>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" value={inputEmail} onInput={e => setInputEmail(e.target.value)} placeholder=\"Enter email\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formUserName\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputUsername} onInput={e => setInputUsername(e.target.value)} placeholder=\"User name\" required/>\r\n          </Form.Group>\r\n          <Row className='my-3'>\r\n            <Col>\r\n              <Form.Group  controlId=\"formFirstName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control type=\"text\" value={inputFirst} onInput={e => setInputFirst(e.target.value)} placeholder=\"First name\" required/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"formLastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control type=\"text\" value={inputLast} onInput={e => setInputLast(e.target.value)} placeholder=\"Last name\" required/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"my-2\">\r\n            <Col>\r\n              <Form.Label className=\"center\">Gender</Form.Label>\r\n              <div className=\"choiceBtns\">\r\n                <Form.Check type=\"radio\" aria-label=\"option 1\">\r\n                  <button\r\n                    type=\"button\"\r\n                    id={buttonClass === \"btnActive1\" ? \"btnActive1\" : \"\"}\r\n                    value={inputGender}\r\n                    onClick={btnClass1}\r\n                    style={{width:'150px', fontSize:'16px'}}\r\n                  >\r\n                    Male\r\n                  </button>\r\n                </Form.Check>\r\n                <Form.Check type=\"radio\" aria-label=\"option 2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    id={buttonClass === \"btnActive2\" ? \"btnActive2\" : \"\"}\r\n                    value={inputGender}\r\n                    onClick={btnClass2}\r\n                    style={{width:'150px', fontSize:'16px'}}\r\n                  >\r\n                    Female\r\n                  </button>\r\n                </Form.Check>\r\n              </div>\r\n              {!inputGender && <div className=\"text-warning center validationInput123\">\r\n                  {genderValidation}\r\n              </div>}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"formCounty\" style={{'color':'black'}}>\r\n              <Form.Label>County</Form.Label>\r\n                <Select options ={listCounties} value={inputCounty.value} onChange={(option) => countyOptionChange(option)} />\r\n                {!inputCounty && <div className='center mt-2 text-warning'> {cityValidation} </div>}\r\n              </Form.Group>\r\n\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"formCity\" style={{'color':'black'}}>\r\n              <Form.Label>City</Form.Label>\r\n                <Select options = {listCities} value={inputCity.value} onChange={(opt) => cityOptionChange(opt)}/>\r\n              </Form.Group>\r\n              {!inputCounty && <div className='center mt-2 text-warning'> {cityValidation} </div>}\r\n            </Col>\r\n          </Row>\r\n          <Row className='mt-3'>\r\n            <Col>\r\n              <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" value={inputPw} onInput={e => setInputPw(e.target.value)} placeholder=\"Password\" required/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control type=\"password\" value={inputConfirmPw} onInput={e => setInputConfirmPw(e.target.value)} placeholder=\"Confirm Password\" required />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>  \r\n\r\n          {!isLoading && <Button variant=\"primary\" type=\"submit\">Register</Button>}\r\n          {isLoading && <Button variant=\"primary\" disabled>\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"grow\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            Loading...\r\n          </Button>}\r\n        </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}