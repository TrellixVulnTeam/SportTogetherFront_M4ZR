{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"./LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputPw, setInputPw] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n\n  const formCheckboxHandler = () => {\n    setRememberMe(true);\n  };\n\n  const loginFormHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        body: JSON.stringify({\n          'email': inputEmail,\n          'password': inputPw,\n          'rememberMe': rememberMe\n        })\n      });\n      const responseData = await response.json();\n      console.log(responseData, 'Aici raspuns backend');\n    } catch (error) {\n      console.log('ERROR');\n    }\n\n    setInputEmail('');\n    setInputPw('');\n    setRememberMe(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          action: \"/login\",\n          onSubmit: loginFormHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: inputEmail,\n              onInput: e => setInputEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll never share your email or password with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: inputPw,\n              onInput: e => setInputPw(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            style: {\n              'float': 'right'\n            },\n            controlId: \"formBasicCheckbox\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Remember me\",\n              onClick: formCheckboxHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"Ulggrkc9hFTsIOlgHYBYmSIF0j4=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/LoginForm.js"],"names":["React","useState","Form","Button","LoginForm","inputEmail","setInputEmail","inputPw","setInputPw","rememberMe","setRememberMe","formCheckboxHandler","loginFormHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","console","log","error","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAGA,QAAMU,mBAAmB,GAAG,MAAM;AAChCD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAME,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AACpCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AAC1DC,QAAAA,MAAM,EAAE,MADkD;AAE1DC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT,CAEP;;AAFO,SAFiD;AAM1DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,mBAAShB,UADU;AAEnB,sBAAYE,OAFO;AAGnB,wBAAcE;AAHK,SAAf;AANoD,OAAhC,CAA5B;AAYA,YAAMa,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAA0B,sBAA1B;AACD,KAfD,CAeE,OAAOI,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AACDnB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAvBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,IAAD;AAAM,UAAA,MAAM,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAEE,gBAAhC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,gBAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,OAAnB;AAA2B,cAAA,WAAW,EAAC,aAAvC;AAAsD,cAAA,KAAK,EAAEP,UAA7D;AAAyE,cAAA,OAAO,EAAEQ,CAAC,IAAIP,aAAa,CAACO,CAAC,CAACc,MAAF,CAASC,KAAV;AAApG;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,mBAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,UAAnB;AAA8B,cAAA,WAAW,EAAC,UAA1C;AAAqD,cAAA,KAAK,EAAErB,OAA5D;AAAqE,cAAA,OAAO,EAAEM,CAAC,IAAIL,UAAU,CAACK,CAAC,CAACc,MAAF,CAASC,KAAV;AAA7F;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAYE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,KAAK,EAAE;AAAC,uBAAQ;AAAT,aAApC;AAAuD,YAAA,SAAS,EAAC,mBAAjE;AAAA,mCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,IAAI,EAAC,UAAjB;AAA4B,cAAA,KAAK,EAAC,aAAlC;AAAgD,cAAA,OAAO,EAAEjB;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAeE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA9DD;;GAAMP,S;;KAAAA,S;AAgEN,eAAeA,SAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./LoginForm.css\";\r\n\r\nconst LoginForm = () => {\r\n  const [inputEmail, setInputEmail] = useState('')\r\n  const [inputPw, setInputPw] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(false)\r\n\r\n \r\n  const formCheckboxHandler = () => {\r\n    setRememberMe(true)\r\n  }\r\n\r\n  const loginFormHandler = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const response = await fetch('http://localhost:5000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify({\r\n          'email': inputEmail,\r\n          'password': inputPw,\r\n          'rememberMe': rememberMe\r\n        })\r\n      })\r\n      const responseData = await response.json()\r\n      console.log(responseData, 'Aici raspuns backend')\r\n    } catch (error) {\r\n      console.log('ERROR')\r\n    }\r\n    setInputEmail('')\r\n    setInputPw('')\r\n    setRememberMe(false)\r\n  }\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <div className=\"box\">\r\n        <div className=\"loginForm\">\r\n        <h3>Login</h3>\r\n        <Form action=\"/login\" onSubmit={loginFormHandler}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\"  value={inputEmail} onInput={e => setInputEmail(e.target.value)}/>\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email or password with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" value={inputPw} onInput={e => setInputPw(e.target.value)}/>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" style={{'float':'right'}} controlId=\"formBasicCheckbox\">\r\n            <Form.Check type=\"checkbox\" label=\"Remember me\" onClick={formCheckboxHandler} />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}