{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isLogged: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n};\ncreateSlice({\n  name: 'authorization',\n  initialState: initialAuthState,\n  reducers: {\n    isLogged(state) {\n      state.isLogged = !state.isLogged;\n    },\n\n    userId(state) {\n      state.userId = state.userId;\n    },\n\n    token(state, action) {\n      s;\n    },\n\n    login() {},\n\n    logout() {}\n\n  }\n});\n\nconst authorization = (state = initialAuthState, action) => {\n  if (action.type === 'login') {\n    return {\n      isLogged: state.isLogged = action.value\n    };\n  }\n};\n\nconst store = createStore({\n  authIsLogged\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/store/index.js"],"names":["createStore","createSlice","initialAuthState","isLogged","userId","token","login","logout","name","initialState","reducers","state","action","s","authorization","type","value","store","authIsLogged"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAE,KADW;AAErBC,EAAAA,MAAM,EAAC,IAFc;AAGrBC,EAAAA,KAAK,EAAC,IAHe;AAIrBC,EAAAA,KAAK,EAAE,MAAM,CAAE,CAJM;AAKrBC,EAAAA,MAAM,EAAE,MAAM,CAAE;AALK,CAAzB;AAQAN,WAAW,CAAC;AACRO,EAAAA,IAAI,EAAC,eADG;AAERC,EAAAA,YAAY,EAAEP,gBAFN;AAGRQ,EAAAA,QAAQ,EAAE;AACNP,IAAAA,QAAQ,CAACQ,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACR,QAAN,GAAiB,CAACQ,KAAK,CAACR,QAAxB;AACH,KAHK;;AAINC,IAAAA,MAAM,CAACO,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACP,MAAN,GAAeO,KAAK,CAACP,MAArB;AACH,KANK;;AAONC,IAAAA,KAAK,CAACM,KAAD,EAAQC,MAAR,EAAgB;AACjBC,MAAAA,CAAC;AACJ,KATK;;AAUNP,IAAAA,KAAK,GAAG,CAAE,CAVJ;;AAWNC,IAAAA,MAAM,GAAG,CAAE;;AAXL;AAHF,CAAD,CAAX;;AAkBA,MAAMO,aAAa,GAAG,CAACH,KAAK,GAAGT,gBAAT,EAA2BU,MAA3B,KAAuC;AACzD,MAAGA,MAAM,CAACG,IAAP,KAAgB,OAAnB,EAA2B;AACvB,WAAO;AACHZ,MAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACI;AAD/B,KAAP;AAGH;AACJ,CAND;;AAYA,MAAMC,KAAK,GAAGjB,WAAW,CAAC;AAACkB,EAAAA;AAAD,CAAD,CAAzB;AAEA,eAAeD,KAAf","sourcesContent":["import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialAuthState = {\r\n    isLogged: false,\r\n    userId:null,\r\n    token:null,\r\n    login: () => {},\r\n    logout: () => {}\r\n}\r\n\r\ncreateSlice({\r\n    name:'authorization',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        isLogged(state) {\r\n            state.isLogged = !state.isLogged\r\n        },\r\n        userId(state) {\r\n            state.userId = state.userId\r\n        },\r\n        token(state, action) {\r\n            s\r\n        },\r\n        login() {},\r\n        logout() {}\r\n    }\r\n})\r\n\r\nconst authorization = (state = initialAuthState, action ) => {\r\n    if(action.type === 'login'){\r\n        return { \r\n            isLogged: state.isLogged = action.value,\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst store = createStore({authIsLogged})\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}