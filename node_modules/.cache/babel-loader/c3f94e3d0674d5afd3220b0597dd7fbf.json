{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\AddEventForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./AddEventForm.css\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Select from 'react-select';\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\nimport sportOptions from \"../../utils/sportListAndOptions/sportOptions\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Form, Col, Row, Button, FloatingLabel, FormControl } from \"react-bootstrap\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { ReactComponent as LogoSvg1 } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/Images/SportTogetherJustLogoSVG1.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\n\nvar yyyy = today.getFullYear();\nif (dd < 10) dd = '0' + dd;\nif (mm < 10) mm = '0' + mm;\ntoday = yyyy + '-' + mm + '-' + dd;\n\nconst AddEventForm = props => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [inputSport, setInputSport] = useState('');\n  const [inputNrPlayers, setInputNrPlayers] = useState('');\n  const [inputLevel, setInputLevel] = useState(null);\n  const [inputCounty, setInputCounty] = useState('Select County...');\n  const [inputCity, setInputCity] = useState('Select City...');\n  const [inputPlace, setInputPlace] = useState('');\n  const [inputDate, setInputDate] = useState('');\n  const [inputTime, setInputTime] = useState('');\n  const [inputDescription, setInputDescription] = useState('');\n  const [listCounties, setListCounties] = useState([]);\n  const [listCities, setListCities] = useState([]);\n  const [buttonClass, setButtonClass] = useState('');\n  const [sportValidation, setSportValidation] = useState('');\n  const [countyValidation, setCountyValidation] = useState('');\n  const [cityValidation, setCityValidation] = useState('');\n  const [levelValidation, setLevelValidation] = useState('');\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function reverseDate(string) {\n    return string = string.split(\"-\").reverse().join(\"-\");\n  }\n\n  useEffect(() => {\n    let lstCounties = [];\n\n    for (let i of countyList) {\n      lstCounties.push({\n        value: i,\n        label: i\n      });\n    }\n\n    setListCounties(lstCounties);\n  }, []);\n\n  const countyOptionChange = obj => {\n    setInputCounty(obj.value);\n    const countyNameList = countyCityList[obj.value];\n    let lstCities = [];\n\n    for (let i of countyNameList) {\n      lstCities.push({\n        value: i,\n        label: i\n      });\n    }\n\n    setListCities(lstCities);\n  };\n\n  const cityOptionChange = obj => {\n    console.log(obj.value);\n    setInputCity(obj.value);\n  };\n\n  const sportChoiceHandler = opt => {\n    console.log(opt);\n    setInputSport(opt.value);\n  };\n\n  const btnClass1 = () => {\n    setInputLevel(true);\n    console.log('CLICK BTN1');\n    setButtonClass('btnActive1');\n  };\n\n  const btnClass2 = () => {\n    setInputLevel(false);\n    console.log('CLICK BTN2');\n    setButtonClass('btnActive2');\n  };\n\n  const currentLocationHandler = () => {\n    const cc = JSON.parse(localStorage.getItem('userLoc'));\n    console.log('County >:', cc.county);\n    console.log('City :>', cc.city);\n    setInputCounty(cc.county);\n    setInputCity(cc.city);\n  }; // SUBMIT HANDLER !\n\n\n  const handleSubmit = async event => {\n    const form = event.currentTarget; // manual validation handlers\n\n    if (inputSport === '') {\n      setSportValidation('Please choose a sport');\n    }\n\n    if (inputCounty === 'Select County...') {\n      setCountyValidation('Please choose the County for your event');\n    }\n\n    if (inputCity === 'Select City...') {\n      setCityValidation('Please choose the City for your event');\n    }\n\n    if (inputLevel === null) {\n      setLevelValidation('Please choose level requirement');\n    }\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n    }\n\n    setValidated(true);\n\n    if (form.checkValidity() === true) {\n      event.preventDefault();\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://localhost:5000/createEvent', {\n          method: 'POST',\n          headers: new Headers({\n            'Authorization': 'Bearer ' + auth.token,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify({\n            'Sport': inputSport,\n            'County': inputCounty,\n            'City': capitalizeFirstLetter(inputCity),\n            'NrPlayers': inputNrPlayers,\n            'LevelRequirement': inputLevel,\n            'Place': inputPlace,\n            'Date': reverseDate(inputDate),\n            'Time': inputTime,\n            'Description': inputDescription\n          })\n        });\n        const responseData = await response.json();\n\n        if (response.ok) {\n          console.log('response.OK from /createEvent > responnseData :', responseData); // isSuccess used to show message\n        } else {\n          setIsError(responseData.error);\n          setIsLoading(false);\n          return new Error(responseData.message);\n        }\n      } catch (error) {\n        setIsError(error);\n        setIsLoading(false);\n        console.log(error);\n      }\n\n      setTimeout(() => {\n        props.onAddEventItem(false);\n      }, 1000);\n    }\n\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addEventFormClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-5\",\n      id: \"noticeEvent\",\n      children: \" Keep in mind, once you create an event, you will not be able to edit/delete it if other users joined the event unless you make a request to all users and they agree with your request!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3 justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"2\",\n          className: \"d-flex justify-content-center\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 64\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-5\",\n        id: \"noticeEvent\",\n        children: isError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Choose a sport*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              'border': 'red'\n            },\n            options: sportOptions,\n            value: inputSport.value,\n            onChange: option => sportChoiceHandler(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            children: sportValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 145\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nr of players including you*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"ex: 4\",\n            min: \"2\",\n            max: \"20\",\n            value: inputNrPlayers,\n            onInput: e => setInputNrPlayers(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide then number of players you wish to play(including you)*.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          style: {\n            'textAlign': 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Level Requirement*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choiceBtns\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              \"aria-label\": \"option 1\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: buttonClass === 'btnActive1' ? 'btnActive1' : '',\n                value: true,\n                onClick: btnClass1,\n                children: \" Only my level \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 63\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              \"aria-label\": \"option 2\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: buttonClass === 'btnActive2' ? 'btnActive2' : '',\n                value: false,\n                onClick: btnClass2,\n                children: \" Open to everyone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 63\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            style: {\n              'textAlign': 'start'\n            },\n            children: levelValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom03\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"County*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"currentLocationBtn\",\n            onClick: currentLocationHandler,\n            children: [\" \", /*#__PURE__*/_jsxDEV(LogoSvg1, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 131\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: listCounties,\n            value: inputCounty,\n            placeholder: inputCounty,\n            onChange: option => countyOptionChange(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            children: countyValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: listCities,\n            value: inputCity,\n            placeholder: inputCity,\n            onChange: opt => cityOptionChange(opt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            children: cityValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"You can specify a place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: inputPlace,\n            onInput: e => setInputPlace(e.target.value),\n            autoComplete: \"off\",\n            placeholder: \"Place: ex: Sport club...(Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start date*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"date\",\n            min: today,\n            value: inputDate,\n            onInput: e => setInputDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start time*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"time\",\n            value: inputTime,\n            onInput: e => setInputTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"floatingTextarea\",\n            label: \"You can write a description.(Optional)\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: inputDescription,\n              onInput: e => setInputDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        style: {\n          'float': 'right',\n          'marginTop': '15px'\n        },\n        children: \"Create event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 24\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        style: {\n          'float': 'right'\n        },\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          as: \"span\",\n          animation: \"grow\",\n          size: \"sm\",\n          role: \"status\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEventForm, \"zI7RPoSAp5IzEOcYMQlGWkDbkLI=\");\n\n_c = AddEventForm;\nexport default AddEventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEventForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/AddEventForm.js"],"names":["React","useState","useContext","useEffect","Select","countyList","countyCityList","sportOptions","Spinner","Form","Col","Row","Button","FloatingLabel","FormControl","AuthContext","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","AddEventForm","props","auth","isLoading","setIsLoading","validated","setValidated","isError","setIsError","inputSport","setInputSport","inputNrPlayers","setInputNrPlayers","inputLevel","setInputLevel","inputCounty","setInputCounty","inputCity","setInputCity","inputPlace","setInputPlace","inputDate","setInputDate","inputTime","setInputTime","inputDescription","setInputDescription","listCounties","setListCounties","listCities","setListCities","buttonClass","setButtonClass","sportValidation","setSportValidation","countyValidation","setCountyValidation","cityValidation","setCityValidation","levelValidation","setLevelValidation","capitalizeFirstLetter","string","charAt","toUpperCase","slice","reverseDate","split","reverse","join","lstCounties","i","push","value","label","countyOptionChange","obj","countyNameList","lstCities","cityOptionChange","console","log","sportChoiceHandler","opt","btnClass1","btnClass2","currentLocationHandler","cc","JSON","parse","localStorage","getItem","county","city","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","response","fetch","method","headers","Headers","token","body","stringify","responseData","json","ok","error","Error","message","setTimeout","onAddEventItem","option","e","target"],"mappings":"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","sourcesContent":["import \"./AddEventForm.css\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport Select from 'react-select'\r\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\r\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\r\nimport sportOptions from \"../../utils/sportListAndOptions/sportOptions\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport {Form, Col, Row, Button, FloatingLabel, FormControl} from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { ReactComponent as LogoSvg1 } from '../../assets/Images/SportTogetherJustLogoSVG1.svg';\r\n\r\nvar today = new Date();\r\nvar dd = today.getDate();\r\nvar mm = today.getMonth()+1; //January is 0 so need to add 1 to make it 1!\r\nvar yyyy = today.getFullYear();\r\n\r\nif(dd<10) dd='0'+dd;\r\nif(mm<10) mm='0'+mm; \r\ntoday = yyyy+'-'+mm+'-'+dd;\r\n\r\n\r\n\r\nconst AddEventForm = (props) => {\r\n  const auth = useContext(AuthContext)\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [validated, setValidated] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [inputSport, setInputSport] = useState('')\r\n  const [inputNrPlayers, setInputNrPlayers] = useState('')\r\n  const [inputLevel, setInputLevel] = useState(null)\r\n  const [inputCounty, setInputCounty] = useState('Select County...')\r\n  const [inputCity, setInputCity] = useState('Select City...')\r\n  const [inputPlace, setInputPlace] = useState('')\r\n  const [inputDate, setInputDate] = useState('')\r\n  const [inputTime, setInputTime] = useState('')\r\n  const [inputDescription, setInputDescription] = useState('')\r\n  const [listCounties, setListCounties] = useState([])\r\n  const [listCities, setListCities] = useState([])\r\n  const [buttonClass, setButtonClass] = useState('')\r\n  const [sportValidation, setSportValidation] = useState('')\r\n  const [countyValidation, setCountyValidation] = useState('')\r\n  const [cityValidation, setCityValidation] = useState('')\r\n  const [levelValidation, setLevelValidation] = useState('')\r\n\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  function reverseDate(string){\r\n    return string = string.split(\"-\").reverse().join(\"-\");\r\n  }\r\n\r\n  useEffect(()=>{\r\n    let lstCounties = []\r\n    for (let i of countyList){\r\n      lstCounties.push({value: i, label: i})\r\n    }\r\n    setListCounties(lstCounties)\r\n  }, [])\r\n\r\n  const countyOptionChange = (obj) => {\r\n    setInputCounty(obj.value)\r\n    const countyNameList = countyCityList[obj.value]\r\n    let lstCities = []\r\n      for (let i of countyNameList){\r\n        lstCities.push({value: i, label: i})\r\n      }\r\n    setListCities(lstCities)\r\n  }\r\n\r\n  const cityOptionChange = (obj) => {\r\n    console.log(obj.value)\r\n    setInputCity(obj.value)\r\n  }\r\n\r\n  const sportChoiceHandler = (opt) => {\r\n    console.log(opt)\r\n    setInputSport(opt.value)\r\n  }\r\n  \r\n  const btnClass1 = () => {\r\n    setInputLevel(true)\r\n    console.log('CLICK BTN1')\r\n    setButtonClass('btnActive1')\r\n  }\r\n  const btnClass2 = () => {\r\n    setInputLevel(false)\r\n    console.log('CLICK BTN2')\r\n    setButtonClass('btnActive2')\r\n  }\r\n\r\n  const currentLocationHandler = () => {\r\n    const cc = JSON.parse(localStorage.getItem('userLoc'))\r\n    console.log('County >:',cc.county)\r\n    console.log('City :>',cc.city)\r\n    setInputCounty(cc.county)\r\n    setInputCity(cc.city)\r\n  }\r\n  // SUBMIT HANDLER !\r\n  const handleSubmit = async (event) => {\r\n    const form = event.currentTarget;\r\n    // manual validation handlers\r\n    if(inputSport === ''){\r\n      setSportValidation('Please choose a sport')\r\n    }\r\n    if(inputCounty === 'Select County...'){\r\n      setCountyValidation('Please choose the County for your event')\r\n    }\r\n    if(inputCity === 'Select City...'){\r\n      setCityValidation('Please choose the City for your event')\r\n    }\r\n    if(inputLevel === null){\r\n      setLevelValidation('Please choose level requirement')\r\n    }\r\n\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity() === true) {\r\n      event.preventDefault();\r\n      setIsLoading(true)\r\n      try {\r\n        const response = await fetch('http://localhost:5000/createEvent', {\r\n                    method: 'POST',\r\n                    headers: new Headers({\r\n                      'Authorization': 'Bearer '+auth.token,\r\n                      'Accept': 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                    }),\r\n                    body: JSON.stringify({\r\n                      'Sport' : inputSport,\r\n                      'County' : inputCounty,\r\n                      'City' : capitalizeFirstLetter(inputCity),\r\n                      'NrPlayers' : inputNrPlayers,\r\n                      'LevelRequirement' : inputLevel,\r\n                      'Place' : inputPlace,\r\n                      'Date' : reverseDate(inputDate),\r\n                      'Time' : inputTime,\r\n                      'Description' : inputDescription,\r\n                    }),\r\n        });\r\n        const responseData = await response.json()\r\n        if(response.ok){\r\n          console.log('response.OK from /createEvent > responnseData :', responseData)\r\n          // isSuccess used to show message\r\n        }else{\r\n          setIsError(responseData.error)\r\n          setIsLoading(false)\r\n          return new Error(responseData.message)\r\n        }\r\n      } catch (error) {\r\n        setIsError(error)\r\n        setIsLoading(false)\r\n        console.log(error)\r\n      }\r\n      setTimeout(() => {\r\n        props.onAddEventItem(false)\r\n      }, 1000);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addEventFormClass\">\r\n      <p className=\"mb-5\" id=\"noticeEvent\"> Keep in mind, once you create an event, you will not be able to edit/delete it if other users joined the event unless you make a request to all users and they agree with your request!</p>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n\r\n      {isLoading && \r\n      <Row className=\"mb-3 justify-content-center\"> \r\n        <Col md='2' className=\"d-flex justify-content-center\"> <Spinner animation=\"border\" role=\"status\"/> </Col> \r\n      </Row>}\r\n      {isError && \r\n        <p className=\"mb-5\" id=\"noticeEvent\">{isError}</p>\r\n      }\r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\">\r\n            <Form.Label>Choose a sport*</Form.Label>\r\n            <Select style={{'border':'red'}} options={sportOptions} value={inputSport.value} onChange={(option) => sportChoiceHandler(option)}/><div className='text-danger validationInput123'>{sportValidation}</div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Form.Label>Nr of players including you*</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"ex: 4\"\r\n              min=\"2\"\r\n              max=\"20\"\r\n              value={inputNrPlayers} onInput={e => setInputNrPlayers(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide then number of players you wish to play(including you)*.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\" style={{'textAlign':'center'}}>\r\n            <Form.Label >Level Requirement*</Form.Label>\r\n            <div className=\"choiceBtns\">\r\n              <Form.Check type=\"radio\" aria-label=\"option 1\"> <button type=\"button\" id = { buttonClass === 'btnActive1' ? 'btnActive1' : ''} value={true} onClick={btnClass1}> Only my level </button> </Form.Check>\r\n              <Form.Check type=\"radio\" aria-label=\"option 2\"> <button type=\"button\"  id = { buttonClass === 'btnActive2' ? 'btnActive2' : ''} value={false} onClick={btnClass2}> Open to everyone</button> </Form.Check>\r\n            </div>\r\n            <div className='text-danger validationInput123' style={{'textAlign':'start'}}>{levelValidation}</div>\r\n          </Col>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n          <Form.Label>County*</Form.Label> <button type=\"button\" className='currentLocationBtn' onClick={currentLocationHandler}> <LogoSvg1/> </button>\r\n            <Select options ={listCounties} value={inputCounty} placeholder={inputCounty}  onChange={(option) => countyOptionChange(option)}/>\r\n            <div className='text-danger validationInput123'>{countyValidation}</div>\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>City*</Form.Label>\r\n            <Select options = {listCities} value={inputCity} placeholder={inputCity}  onChange={(opt) => cityOptionChange(opt)}/>\r\n            <div className='text-danger validationInput123'>{cityValidation}</div>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>You can specify a place</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={inputPlace} onInput={e => setInputPlace(e.target.value)}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Place: ex: Sport club...(Optional)\"\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Form.Label>Start date*</Form.Label>\r\n            <FormControl type=\"date\" min={today} value={inputDate} onInput={e => setInputDate(e.target.value)} required/>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start date\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n          \r\n          <Col md=\"6\">\r\n            <Form.Label>Start time*</Form.Label>\r\n            <FormControl type=\"time\" value={inputTime} onInput={e => setInputTime(e.target.value)} required/>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start time\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-5\">\r\n          <Col md=\"12\" >\r\n            <FloatingLabel\r\n              controlId=\"floatingTextarea\"\r\n              label=\"You can write a description.(Optional)\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control as=\"textarea\" value={inputDescription} onInput={e => setInputDescription(e.target.value)}/>\r\n            </FloatingLabel>\r\n          </Col>\r\n        </Row>\r\n        \r\n        {!isLoading && <Button type=\"submit\" style={{'float': 'right', 'marginTop':'15px'}} >Create event</Button>}\r\n        {isLoading && <Button variant=\"primary\" style={{'float': 'right'}} disabled>\r\n          <Spinner\r\n            as=\"span\"\r\n            animation=\"grow\"\r\n            size=\"sm\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          Loading...\r\n        </Button>}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEventForm;\r\n\r\n"]},"metadata":{},"sourceType":"module"}