{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isAuthenticated: false,\n  userId: null,\n  token: null,\n  login: state => {\n    state;\n  },\n  logout: () => {}\n};\nconst authSlice = createSlice({\n  name: 'authorization',\n  initialState: initialAuthState,\n  reducers: {\n    isLogged(state) {\n      state.isAuthenticated = !state.isAuthenticated;\n      console.log(state.isAuthenticated);\n    },\n\n    userId(state) {\n      state.userId = state.userId;\n    },\n\n    token(state, action) {\n      state.token = action.payload;\n    },\n\n    login(state) {},\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    authorization: authSlice.reducer\n  }\n});\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/store/index.js"],"names":["createSlice","configureStore","initialAuthState","isAuthenticated","userId","token","login","state","logout","authSlice","name","initialState","reducers","isLogged","console","log","action","payload","store","reducer","authorization","authActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,eAAe,EAAE,KADI;AAErBC,EAAAA,MAAM,EAAC,IAFc;AAGrBC,EAAAA,KAAK,EAAC,IAHe;AAIrBC,EAAAA,KAAK,EAAGC,KAAD,IAAW;AACdA,IAAAA,KAAK;AACR,GANoB;AAOrBC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAPK,CAAzB;AAUA,MAAMC,SAAS,GAAGT,WAAW,CAAC;AAC1BU,EAAAA,IAAI,EAAC,eADqB;AAE1BC,EAAAA,YAAY,EAAET,gBAFY;AAG1BU,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,CAACN,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACJ,eAAN,GAAwB,CAACI,KAAK,CAACJ,eAA/B;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACJ,eAAlB;AACH,KAJK;;AAKNC,IAAAA,MAAM,CAACG,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACH,MAAN,GAAeG,KAAK,CAACH,MAArB;AACH,KAPK;;AAQNC,IAAAA,KAAK,CAACE,KAAD,EAAQS,MAAR,EAAgB;AACjBT,MAAAA,KAAK,CAACF,KAAN,GAAcW,MAAM,CAACC,OAArB;AACH,KAVK;;AAWNX,IAAAA,KAAK,CAACC,KAAD,EAAQ,CAEZ,CAbK;;AAcNC,IAAAA,MAAM,CAACD,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACJ,eAAN,GAAwB,KAAxB;AACH;;AAhBK;AAHgB,CAAD,CAA7B;AAyBA,MAAMe,KAAK,GAAGjB,cAAc,CAAC;AACzBkB,EAAAA,OAAO,EAAE;AAACC,IAAAA,aAAa,EAAGX,SAAS,CAACU;AAA3B;AADgB,CAAD,CAA5B;AAIA,OAAO,MAAME,WAAW,GAAGZ,SAAS,CAACa,OAA9B;AAEP,eAAeJ,KAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit'\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated: false,\r\n    userId:null,\r\n    token:null,\r\n    login: (state) => {\r\n        state\r\n    },\r\n    logout: () => {}\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name:'authorization',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        isLogged(state) {\r\n            state.isAuthenticated = !state.isAuthenticated\r\n            console.log(state.isAuthenticated)\r\n        },\r\n        userId(state) {\r\n            state.userId = state.userId\r\n        },\r\n        token(state, action) {\r\n            state.token = action.payload\r\n        },\r\n        login(state) {\r\n\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated = false\r\n        }\r\n        \r\n    }\r\n})\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {authorization : authSlice.reducer},\r\n})\r\n\r\nexport const authActions = authSlice.actions\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}