{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Events\\\\EventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport EventItem from \"./EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventList = props => {\n  _s();\n\n  const [events, setEvents] = useState(props.eventsList);\n  useEffect(() => {\n    let arrayEvents = [...props.eventsList];\n\n    if (props.allFilters.sportFilter !== '') {\n      arrayEvents = arrayEvents.filter(item => item.Sport === props.allFilters.spo);\n    }\n\n    if (filterByType) {\n      result = result.filter(anime => anime.type === filterByType);\n    }\n\n    setEvents();\n    console.log(events);\n  }, [props.eventsList, props.allFilters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: events.map(item => /*#__PURE__*/_jsxDEV(EventItem, {\n      sport: item.Sport,\n      level: item.Level,\n      city: item.City,\n      location: item.ExactLocation,\n      description: item.Description,\n      date: item.Date,\n      time: item.Time,\n      nrPlayers: item.NrPlayers,\n      allowed: item.LevelRequirement\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventList, \"P5KW2Aa0HMSSSpjmzjBogVG5jO8=\");\n\n_c = EventList;\nexport default EventList; // if(props.allFilters.sportFilters !== '' ){\n//     console.log(props.allFilters.sportFilter)\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Events/EventList.js"],"names":["React","useEffect","useState","EventItem","EventList","props","events","setEvents","eventsList","arrayEvents","allFilters","sportFilter","filter","item","Sport","spo","filterByType","result","anime","type","console","log","map","Level","City","ExactLocation","Description","Date","Time","NrPlayers","LevelRequirement","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACG,KAAK,CAACG,UAAP,CAApC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,WAAW,GAAG,CAAC,GAAGJ,KAAK,CAACG,UAAV,CAAlB;;AACA,QAAGH,KAAK,CAACK,UAAN,CAAiBC,WAAjB,KAAiC,EAApC,EAAwC;AACpCF,MAAAA,WAAW,GAAGA,WAAW,CAACG,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeT,KAAK,CAACK,UAAN,CAAiBK,GAA3D,CAAd;AACD;;AAEH,QAAGC,YAAH,EAAiB;AACjBC,MAAAA,MAAM,GAAGA,MAAM,CAACL,MAAP,CAAcM,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeH,YAAtC,CAAT;AACC;;AAEDT,IAAAA,SAAS;AACTa,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AAEH,GAbQ,EAaN,CAACD,KAAK,CAACG,UAAP,EAAmBH,KAAK,CAACK,UAAzB,CAbM,CAAT;AAgBA,sBACI;AAAA,cACKJ,MAAM,CAACgB,GAAP,CAAYT,IAAD,iBACZ,QAAC,SAAD;AACY,MAAA,KAAK,EAAIA,IAAI,CAACC,KAD1B;AAEY,MAAA,KAAK,EAAID,IAAI,CAACU,KAF1B;AAGY,MAAA,IAAI,EAAIV,IAAI,CAACW,IAHzB;AAIY,MAAA,QAAQ,EAAIX,IAAI,CAACY,aAJ7B;AAKY,MAAA,WAAW,EAAIZ,IAAI,CAACa,WALhC;AAMY,MAAA,IAAI,EAAIb,IAAI,CAACc,IANzB;AAOY,MAAA,IAAI,EAAId,IAAI,CAACe,IAPzB;AAQY,MAAA,SAAS,EAAIf,IAAI,CAACgB,SAR9B;AASY,MAAA,OAAO,EAAIhB,IAAI,CAACiB;AAT5B,OAAkBjB,IAAI,CAACkB,EAAvB;AAAA;AAAA;AAAA;AAAA,YADC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApCD;;GAAM3B,S;;KAAAA,S;AAsCN,eAAeA,SAAf,C,CAEA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport EventItem from \"./EventItem\";\r\n\r\nconst EventList = (props) => {\r\n    const [events, setEvents] = useState(props.eventsList)\r\n\r\n    useEffect(() => {\r\n        let arrayEvents = [...props.eventsList]\r\n        if(props.allFilters.sportFilter !== '') {\r\n            arrayEvents = arrayEvents.filter(item => item.Sport === props.allFilters.spo);      \r\n          }\r\n      \r\n        if(filterByType) {\r\n        result = result.filter(anime => anime.type === filterByType);      \r\n        }\r\n\r\n        setEvents()\r\n        console.log(events)\r\n        \r\n    }, [props.eventsList, props.allFilters])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {events.map((item) => (\r\n            <EventItem key = {item.id}\r\n                        sport = {item.Sport}\r\n                        level = {item.Level}\r\n                        city = {item.City}\r\n                        location = {item.ExactLocation}\r\n                        description = {item.Description}\r\n                        date = {item.Date}\r\n                        time = {item.Time}\r\n                        nrPlayers = {item.NrPlayers}\r\n                        allowed = {item.LevelRequirement}\r\n            /> \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventList;\r\n\r\n// if(props.allFilters.sportFilters !== '' ){\r\n//     console.log(props.allFilters.sportFilter)\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}