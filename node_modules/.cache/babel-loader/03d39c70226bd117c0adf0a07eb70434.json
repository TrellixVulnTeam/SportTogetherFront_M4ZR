{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\UploadIcon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport \"./UploadIcon.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadIcon = () => {\n  _s();\n\n  const [inputFile, setInputFile] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFileInput = e => {\n    setInputFile(e.target.value);\n  };\n\n  const handleImageUpload = event => {\n    const files = event.target.files;\n    const formData = new FormData();\n    formData.append('myFile', files[0]);\n    fetch('/saveImage', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5000/uploadImage', {\n        method: 'POST',\n        body: asdsad\n      });\n    } catch (error) {}\n\n    console.log(inputFile, 'fileName');\n    setIsLoading(false);\n  };\n\n  document.querySelector('#fileUpload').addEventListener('change', event => {\n    handleImageUpload(event);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    encType: \"multipart/form-data\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileUpload\",\n          name: \"image\",\n          value: inputFile,\n          onInput: handleFileInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-arrow-up\",\n          style: {\n            'fontSize': '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      style: {\n        borderColor: 'transparent'\n      },\n      children: \"Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadIcon, \"tgaZPUlJZ+advLuLVLK66zkksEc=\");\n\n_c = UploadIcon;\nexport default UploadIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadIcon\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/UploadIcon.js"],"names":["React","useState","Button","Spinner","UploadIcon","inputFile","setInputFile","isLoading","setIsLoading","handleFileInput","e","target","value","handleImageUpload","event","files","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","catch","error","handleSubmit","preventDefault","asdsad","document","querySelector","addEventListener","borderColor"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport \"./UploadIcon.css\";\r\n\r\nconst UploadIcon = () => {\r\n  const [inputFile, setInputFile] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const handleFileInput = (e) => {\r\n    setInputFile(e.target.value)\r\n  }\r\n\r\n  const handleImageUpload = event => {\r\n    const files = event.target.files\r\n    const formData = new FormData()\r\n    formData.append('myFile', files[0])\r\n  \r\n    fetch('/saveImage', {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n    })\r\n    .catch(error => {\r\n      console.error(error)\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:5000/uploadImage', {\r\n        method: 'POST',\r\n        body: asdsad,\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      \r\n    }\r\n    console.log(inputFile,'fileName')\r\n    setIsLoading(false)\r\n  }\r\n\r\n  document.querySelector('#fileUpload').addEventListener('change', event => {\r\n    handleImageUpload(event)\r\n  })\r\n\r\n\r\n  return (\r\n    <form encType=\"multipart/form-data\" onSubmit={handleSubmit}>\r\n      <div className=\"wrapper\">\r\n        <div className=\"file-upload\">\r\n          <input type=\"file\" id=\"fileUpload\" name=\"image\" value={inputFile} onInput={handleFileInput} />\r\n          <i className=\"fa fa-arrow-up\" style={{'fontSize':'40px'}}></i>\r\n        </div>\r\n      </div>\r\n      {isLoading && <Spinner animation=\"border\" variant=\"primary\"/>}\r\n      <Button type='submit' style={{borderColor:'transparent'}}>Preview</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nexport default UploadIcon;"]},"metadata":{},"sourceType":"module"}