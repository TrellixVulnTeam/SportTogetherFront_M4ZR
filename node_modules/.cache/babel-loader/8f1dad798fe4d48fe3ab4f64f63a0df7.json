{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\UploadIcon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport \"./UploadIcon.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadIcon = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n  const token = useSelector(state => state.authentication.token);\n\n  const handleImage = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleImageUpload = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('File', selectedFile);\n    console.log(formData, 'formdata from fetch');\n    const response = await fetch('http://localhost:5000/uploadimage', {\n      method: 'POST',\n      body: formData\n    });\n    const responseData = await response.json();\n    console.log(responseData); // .then((response) => response.json())\n    // .then((result) => {\n    // \tconsole.log('Success:', result);\n    // })\n    // .catch((error) => {\n    // \tconsole.error('Error:', error);\n    // });\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    en: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileUpload\",\n          name: \"image\",\n          onChange: handleImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-arrow-up\",\n          style: {\n            'fontSize': '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleImageUpload,\n      style: {\n        borderColor: 'transparent'\n      },\n      children: \"Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadIcon, \"WOdsMS18OMShEbMVL8JVff5+/VM=\", false, function () {\n  return [useSelector];\n});\n\n_c = UploadIcon;\nexport default UploadIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadIcon\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/UploadIcon.js"],"names":["React","useState","Button","Spinner","useSelector","UploadIcon","isLoading","setIsLoading","selectedFile","setSelectedFile","token","state","authentication","handleImage","event","target","files","handleImageUpload","preventDefault","formData","FormData","append","console","log","response","fetch","method","body","responseData","json","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,iBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AAEA,QAAMS,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBF,KAAjC,CAAzB;;AAEA,QAAMG,WAAW,GAAIC,KAAD,IAAW;AAC/BL,IAAAA,eAAe,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAf;AACA,GAFA;;AAIA,QAAMC,iBAAiB,GAAG,MAAOH,KAAP,IAAiB;AACzCA,IAAAA,KAAK,CAACI,cAAN;AACAX,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMY,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACFD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBb,YAAxB;AAEEc,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsB,qBAAtB;AAEA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAC7B;AACCC,MAAAA,MAAM,EAAE,MADT;AAECC,MAAAA,IAAI,EAAER;AAFP,KAD6B,CAA5B;AAME,UAAMS,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ,EAhBuC,CAiB1C;AACA;AACA;AACA;AACA;AACA;AACA;;AACGrB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAzBD;;AA2BA,sBACE;AAAM,IAAA,EAAE,MAAR;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,YAAtB;AAAmC,UAAA,IAAI,EAAC,OAAxC;AAAgD,UAAA,QAAQ,EAAEM;AAA1D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAA8B,UAAA,KAAK,EAAE;AAAC,wBAAW;AAAZ;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAOGP,SAAS,iBAAI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YAPhB,eAQE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEW,iBAAjB;AAAoC,MAAA,KAAK,EAAE;AAACa,QAAAA,WAAW,EAAC;AAAb,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjDD;;GAAMzB,U;UAIUD,W;;;KAJVC,U;AAoDN,eAAeA,UAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./UploadIcon.css\";\r\n\r\nconst UploadIcon = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [selectedFile, setSelectedFile] = useState()\r\n\r\n  const token = useSelector((state) => state.authentication.token)\r\n\r\n  const handleImage = (event) => {\r\n\t\tsetSelectedFile(event.target.files[0]);\r\n\t};\r\n\r\n  const handleImageUpload = async (event) => {\r\n    event.preventDefault()\r\n    setIsLoading(true);\r\n\r\n    const formData = new FormData();\r\n\t\tformData.append('File', selectedFile);\r\n\r\n    console.log(formData, 'formdata from fetch')\r\n\r\n    const response = await fetch('http://localhost:5000/uploadimage',\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: formData,\r\n\t\t\t}\r\n\t\t)\r\n      const responseData = await response.json()\r\n      console.log(responseData)\r\n\t\t\t// .then((response) => response.json())\r\n\t\t\t// .then((result) => {\r\n\t\t\t// \tconsole.log('Success:', result);\r\n\t\t\t// })\r\n\t\t\t// .catch((error) => {\r\n\t\t\t// \tconsole.error('Error:', error);\r\n\t\t\t// });\r\n      setIsLoading(false)\r\n  };\r\n\t\r\n  return (\r\n    <form en>\r\n      <div className=\"wrapper\"  >\r\n        <div className=\"file-upload\">\r\n          <input type=\"file\" id=\"fileUpload\" name=\"image\" onChange={handleImage}/>\r\n          <i className=\"fa fa-arrow-up\" style={{'fontSize':'40px'}}></i>\r\n        </div>\r\n      </div>\r\n      {isLoading && <Spinner animation=\"border\" variant=\"primary\"/>}\r\n      <Button onClick={handleImageUpload} style={{borderColor:'transparent'}}>Preview</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nexport default UploadIcon;"]},"metadata":{},"sourceType":"module"}