{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from './store/auth';\nimport \"./App.css\";\nimport HeaderNav from './components/Layout/HeaderNav';\nimport Events from \"./views/Events\";\nimport Homepage from \"./views/Homepage\";\nimport UserProfile from './views/UserProfile';\nimport AlertDismissible from \"./components/UI/Alert\"; // import MyEvents from './views/MyEvents';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const alert = useSelector(state => state.alert.alertToggle);\n  const isAuth = useSelector(state => state.authentication.isAuthenticated);\n  const token = useSelector(state => state.authentication.token);\n  const tokenExp = useSelector(state => state.authentication.tokenExpiration); // this is for expiry time for log out\n\n  useEffect(() => {\n    const logoutFunc = () => {\n      dispatch(authActions.isAuthenticated(false));\n      dispatch(authActions.token(null));\n      dispatch(authActions.tokenExpiration(null));\n      localStorage.removeItem('userData');\n      localStorage.removeItem('userLoc');\n    };\n\n    let logoutTimer;\n\n    if (token && tokenExp) {\n      const getRemainingTime = new Date(tokenExp).getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logoutFunc, getRemainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [tokenExp, token, dispatch]); // checking localStore if has the token and remaining time still left time, if all good, the token is refreshed and stay logged\n\n  useEffect(() => {\n    const localStoreageData = JSON.parse(localStorage.getItem('userData'));\n\n    if (localStoreageData && localStoreageData.token && localStoreageData.expiration > new Date().getTime() / 1000) {\n      dispatch(authActions.isAuthenticated(true));\n      dispatch(authActions.token(localStoreageData.token));\n      dispatch(authActions.tokenExpiration(localStoreageData.expiration));\n    }\n  }, [dispatch]);\n  let routes;\n\n  if (isAuth && token) {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/events\",\n        children: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/userprofile\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 38\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), alert && /*#__PURE__*/_jsxDEV(AlertDismissible, {\n      classNa: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), routes]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gvYOkhuGjwwXENPj8Gq2BNeEalg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/App.js"],"names":["React","useEffect","Route","Switch","Redirect","useSelector","useDispatch","authActions","HeaderNav","Events","Homepage","UserProfile","AlertDismissible","App","dispatch","alert","state","alertToggle","isAuth","authentication","isAuthenticated","token","tokenExp","tokenExpiration","logoutFunc","localStorage","removeItem","logoutTimer","getRemainingTime","Date","getTime","setTimeout","clearTimeout","localStoreageData","JSON","parse","getItem","expiration","routes"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from './store/auth'; \nimport \"./App.css\";\nimport HeaderNav from './components/Layout/HeaderNav';\nimport Events from \"./views/Events\";\nimport Homepage from \"./views/Homepage\";\nimport UserProfile from './views/UserProfile';\nimport AlertDismissible from \"./components/UI/Alert\";\n\n// import MyEvents from './views/MyEvents';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const alert = useSelector(state => state.alert.alertToggle)\n  const isAuth   = useSelector((state) => state.authentication.isAuthenticated)\n  const token    = useSelector((state) => state.authentication.token)\n  const tokenExp = useSelector((state) => state.authentication.tokenExpiration)\n  \n  // this is for expiry time for log out\n  useEffect(() => {\n    const logoutFunc = () => {\n      dispatch(authActions.isAuthenticated(false))\n      dispatch(authActions.token(null))\n      dispatch(authActions.tokenExpiration(null))\n      localStorage.removeItem('userData')\n      localStorage.removeItem('userLoc')\n    }\n    let logoutTimer;\n    if(token && tokenExp){\n      const getRemainingTime = new Date(tokenExp).getTime() - new Date().getTime()\n      logoutTimer = setTimeout(logoutFunc, getRemainingTime);\n    } else {\n      clearTimeout(logoutTimer)\n    }\n  },[tokenExp, token, dispatch])\n\n\n\n  // checking localStore if has the token and remaining time still left time, if all good, the token is refreshed and stay logged\n  useEffect(() => {\n    const localStoreageData = JSON.parse(localStorage.getItem('userData'))\n    if(localStoreageData && localStoreageData.token && localStoreageData.expiration > new Date().getTime() / 1000){      \n      dispatch(authActions.isAuthenticated(true));\n      dispatch(authActions.token(localStoreageData.token));\n      dispatch(authActions.tokenExpiration(localStoreageData.expiration))\n    }\n  }, [dispatch])\n\n  let routes;\n  if(isAuth && token){\n    routes= (\n      <Switch>\n        <Route path=\"/events\"><Events/></Route>\n        {/* <Route path=\"/events/myevents\"><MyEvents/> </Route> */}\n        <Route path=\"/userprofile\" > <UserProfile /> </Route>\n        <Redirect to=\"/events\"/>\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" > <Homepage/></Route>\n        <Redirect to=\"/\"/>\n      </Switch>\n    )\n  }  \n\n  return (\n    <React.Fragment> \n      <HeaderNav/>\n      {alert && <AlertDismissible classNa />}\n\n        {routes}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}