{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\AddEventForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./AddEventForm.css\";\nimport React, { useState } from \"react\";\nimport countyList from \"../../assets/CountyList/countyList\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Form, Col, Row, Button, FloatingLabel, FormControl } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\n\nvar yyyy = today.getFullYear();\n\nif (dd < 10) {\n  dd = \"0\" + dd;\n}\n\nif (mm < 10) {\n  mm = \"0\" + mm;\n}\n\ntoday = yyyy + \"-\" + mm + \"-\" + dd;\n\nconst AddEventForm = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [inputSport, setInputSport] = useState(\"\");\n  const [inputNrPlayers, setInputNrPlayers] = useState(\"\");\n  const [inputLevel, setInputLevel] = useState(\"\");\n  const [inputCounty, setInputCounty] = useState(\"\");\n  const [inputCity, setInputCity] = useState(\"\");\n  const [inputPlace, setInputPlace] = useState(\"\");\n  const [inputDate, setInputDate] = useState(\"\");\n  const [inputTime, setInputTime] = useState(\"\");\n  const [inputDescription, setInputDescription] = useState(\"\");\n\n  const handleSubmit = async event => {\n    props.onAddEventItem(true);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n    }\n\n    setValidated(true);\n\n    if (form.checkValidity() === true) {\n      event.preventDefault();\n\n      try {\n        setIsLoading(true);\n        const response = await fetch(\"http://localhost:5000/createEvent\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            Sport: inputSport,\n            County: inputCounty,\n            City: inputCity,\n            NrPlayers: inputNrPlayers,\n            LevelRequirement: inputLevel,\n            Place: inputPlace,\n            Date: inputDate,\n            Time: inputTime,\n            Description: inputDescription\n          })\n        });\n        const responseData = await response.json();\n\n        if (response.ok) {\n          console.log(\"response.OK from /createEvent > responnseData :\", responseData);\n        } else {\n          setIsError(responseData.error);\n          throw new Error(responseData.message);\n        }\n      } catch (error) {\n        setIsLoading(false);\n        console.error(error);\n      }\n    }\n\n    props.onAddEventItem(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addEventFormClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-5\",\n      id: \"noticeEvent\",\n      children: [\" \", \"Keep in mind, once you create an event, you will not be able to edit/delete it if other users joined the event unless you make a request to all users and they agree with your request!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Spinner, {\n            className: \"justify-content-center\",\n            animation: \"border\",\n            variant: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Choose a sport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: inputSport,\n            onInput: e => setInputSport(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Tennis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Football\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Table Tennis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Jogging\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Cycling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Paintball\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"AirSoft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Skiing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Basketball\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Work out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Volleyball\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Badminton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Ice Skating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Skating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Bowling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide a valid sport.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nr of players including you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"ex: 4\",\n            min: \"2\",\n            max: \"20\",\n            value: inputNrPlayers,\n            onInput: e => setInputNrPlayers(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide an appropriate nr of players(including you).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Level Requirement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: inputLevel,\n            onInput: e => setInputLevel(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Open to everyone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Restricted to my level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide level requirement.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom03\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"County\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: inputCounty,\n            onInput: e => setInputCounty(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), countyList.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: [\" \", item]\n            }, item, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide a valid county.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: inputCity,\n            onInput: e => setInputCity(e.target.value),\n            autoComplete: \"off\",\n            placeholder: \"Ex: Iasi\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"You can specify a place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: inputPlace,\n            onInput: e => setInputPlace(e.target.value),\n            autoComplete: \"off\",\n            placeholder: \"Place: ex: Sport club...(Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"date\",\n            min: today,\n            value: inputDate,\n            onInput: e => setInputDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"time\",\n            value: inputTime,\n            onInput: e => setInputTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"floatingTextarea\",\n            label: \"You can write a description.(Optional)\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: inputDescription,\n              onInput: e => setInputDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        style: {\n          float: \"right\"\n        },\n        children: \"Create event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEventForm, \"Ks1ffq+4Txsn8K9L8sUaH1YcCoE=\");\n\n_c = AddEventForm;\nexport default AddEventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEventForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/AddEventForm.js"],"names":["React","useState","countyList","Spinner","Form","Col","Row","Button","FloatingLabel","FormControl","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","AddEventForm","props","isLoading","setIsLoading","validated","setValidated","isError","setIsError","inputSport","setInputSport","inputNrPlayers","setInputNrPlayers","inputLevel","setInputLevel","inputCounty","setInputCounty","inputCity","setInputCity","inputPlace","setInputPlace","inputDate","setInputDate","inputTime","setInputTime","inputDescription","setInputDescription","handleSubmit","event","onAddEventItem","form","currentTarget","checkValidity","preventDefault","response","fetch","method","headers","body","JSON","stringify","Sport","County","City","NrPlayers","LevelRequirement","Place","Time","Description","responseData","json","ok","console","log","error","Error","message","e","target","value","map","item","float"],"mappings":"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","sourcesContent":["import \"./AddEventForm.css\";\r\nimport React, { useState } from \"react\";\r\nimport countyList from \"../../assets/CountyList/countyList\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport {\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  FloatingLabel,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\nvar today = new Date();\r\nvar dd = today.getDate();\r\nvar mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\r\nvar yyyy = today.getFullYear();\r\nif (dd < 10) {\r\n  dd = \"0\" + dd;\r\n}\r\nif (mm < 10) {\r\n  mm = \"0\" + mm;\r\n}\r\n\r\ntoday = yyyy + \"-\" + mm + \"-\" + dd;\r\n\r\nconst AddEventForm = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [validated, setValidated] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [inputSport, setInputSport] = useState(\"\");\r\n  const [inputNrPlayers, setInputNrPlayers] = useState(\"\");\r\n  const [inputLevel, setInputLevel] = useState(\"\");\r\n  const [inputCounty, setInputCounty] = useState(\"\");\r\n  const [inputCity, setInputCity] = useState(\"\");\r\n  const [inputPlace, setInputPlace] = useState(\"\");\r\n  const [inputDate, setInputDate] = useState(\"\");\r\n  const [inputTime, setInputTime] = useState(\"\");\r\n  const [inputDescription, setInputDescription] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    props.onAddEventItem(true);\r\n\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity() === true) {\r\n      event.preventDefault();\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(\"http://localhost:5000/createEvent\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            Sport: inputSport,\r\n            County: inputCounty,\r\n            City: inputCity,\r\n            NrPlayers: inputNrPlayers,\r\n            LevelRequirement: inputLevel,\r\n            Place: inputPlace,\r\n            Date: inputDate,\r\n            Time: inputTime,\r\n            Description: inputDescription,\r\n          }),\r\n        });\r\n        const responseData = await response.json();\r\n        if (response.ok) {\r\n          console.log(\r\n            \"response.OK from /createEvent > responnseData :\",\r\n            responseData\r\n          );\r\n        } else {\r\n          setIsError(responseData.error);\r\n          throw new Error(responseData.message);\r\n        }\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    props.onAddEventItem(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addEventFormClass\">\r\n      <p className=\"mb-5\" id=\"noticeEvent\">\r\n        {\" \"}\r\n        Keep in mind, once you create an event, you will not be able to\r\n        edit/delete it if other users joined the event unless you make a request\r\n        to all users and they agree with your request!\r\n      </p>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        {!isLoading && (\r\n          <Row className=\"mb-3\">\r\n            {\" \"}\r\n            <Col md=\"6\">\r\n              {\" \"}\r\n              <Spinner\r\n                className=\"justify-content-center\"\r\n                animation=\"border\"\r\n                variant=\"primary\"\r\n              />{\" \"}\r\n            </Col>{\" \"}\r\n          </Row>\r\n        )}\r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\">\r\n            <Form.Label>Choose a sport</Form.Label>\r\n            <Form.Select\r\n              value={inputSport}\r\n              onInput={(e) => setInputSport(e.target.value)}\r\n              required\r\n            >\r\n              <option></option>\r\n              <option>Tennis</option>\r\n              <option>Football</option>\r\n              <option>Table Tennis</option>\r\n              <option>Jogging</option>\r\n              <option>Cycling</option>\r\n              <option>Paintball</option>\r\n              <option>AirSoft</option>\r\n              <option>Skiing</option>\r\n              <option>Basketball</option>\r\n              <option>Work out</option>\r\n              <option>Volleyball</option>\r\n              <option>Badminton</option>\r\n              <option>Ice Skating</option>\r\n              <option>Skating</option>\r\n              <option>Bowling</option>\r\n            </Form.Select>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid sport.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Form.Label>Nr of players including you</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"ex: 4\"\r\n              min=\"2\"\r\n              max=\"20\"\r\n              value={inputNrPlayers}\r\n              onInput={(e) => setInputNrPlayers(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide an appropriate nr of players(including you).\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\">\r\n            <Form.Label>Level Requirement</Form.Label>\r\n            <Form.Select\r\n              value={inputLevel}\r\n              onInput={(e) => setInputLevel(e.target.value)}\r\n              required\r\n            >\r\n              <option></option>\r\n              <option>Open to everyone</option>\r\n              <option>Restricted to my level</option>\r\n            </Form.Select>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide level requirement.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n            <Form.Label>County</Form.Label>\r\n            <Form.Select\r\n              value={inputCounty}\r\n              onInput={(e) => setInputCounty(e.target.value)}\r\n              required\r\n            >\r\n              <option></option>\r\n              {countyList.map((item) => (\r\n                <option key={item}> {item}</option>\r\n              ))}\r\n            </Form.Select>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid county.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={inputCity}\r\n              onInput={(e) => setInputCity(e.target.value)}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Ex: Iasi\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>You can specify a place</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={inputPlace}\r\n              onInput={(e) => setInputPlace(e.target.value)}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Place: ex: Sport club...(Optional)\"\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Form.Label>Start date</Form.Label>\r\n            <FormControl\r\n              type=\"date\"\r\n              min={today}\r\n              value={inputDate}\r\n              onInput={(e) => setInputDate(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start date\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n\r\n          <Col md=\"6\">\r\n            <Form.Label>Start time</Form.Label>\r\n            <FormControl\r\n              type=\"time\"\r\n              value={inputTime}\r\n              onInput={(e) => setInputTime(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start time\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\" className=\"mt-3\">\r\n            <FloatingLabel\r\n              controlId=\"floatingTextarea\"\r\n              label=\"You can write a description.(Optional)\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={inputDescription}\r\n                onInput={(e) => setInputDescription(e.target.value)}\r\n              />\r\n            </FloatingLabel>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Button type=\"submit\" style={{ float: \"right\" }}>\r\n          Create event\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEventForm;\r\n"]},"metadata":{},"sourceType":"module"}