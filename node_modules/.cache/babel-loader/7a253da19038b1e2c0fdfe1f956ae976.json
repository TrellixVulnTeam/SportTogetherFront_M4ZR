{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport Select from 'react-select';\nimport { Form, Button, Spinner } from \"react-bootstrap\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./RegisterForm.css\";\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputUsername, setInputUsername] = useState('');\n  const [inputFirst, setInputFirst] = useState('');\n  const [inputLast, setInputLast] = useState('');\n  const [inputCounty, setInputCounty] = useState('');\n  const [inputCity, setInputCity] = useState('');\n  const [inputPw, setInputPw] = useState('');\n  const [inputConfirmPw, setInputConfirmPw] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(); // const options = [\n  //   { value: 'blues', label: 'Blues' },\n  //   { value: 'rock', label: 'Rock' },\n  //   { value: 'jazz', label: 'Jazz' },\n  //   { value: 'orchestra' label: 'Orchestra' } \n  // ];\n\n  let lstCounties = [];\n  let lstCities = [];\n\n  for (let i of countyList) {\n    let x = {\n      label: i\n    };\n    lstCounties.push(x);\n  }\n\n  for (let j of countyCityList.inputCounty) {\n    let y = {\n      label: j\n    };\n    lstCities.push(y);\n  }\n\n  const handleCountyChange = e => {\n    setInputCounty(e.target.value);\n  };\n\n  const registerFormHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5000/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        body: JSON.stringify({\n          'email': inputEmail,\n          'username': inputUsername,\n          'firstName': inputFirst,\n          'lastName': inputLast,\n          'county': inputCounty,\n          'city': inputCity,\n          'password': inputPw,\n          'confirmPw': inputConfirmPw\n        })\n      });\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        setIsError(responseData.error);\n        throw new Error(responseData.message);\n      } else {\n        auth.login(responseData.userId, responseData.token);\n        console.log(responseData);\n      }\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n\n    setInputEmail('');\n    setInputUsername('');\n    setInputFirst('');\n    setInputLast('');\n    setInputCounty('');\n    setInputPw('');\n    setInputConfirmPw('');\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxRegister\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Register \", isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            variant: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-5\",\n          id: \"noticeEvent\",\n          children: [\" \", isError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: registerFormHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your data with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: inputEmail,\n              onInput: e => setInputEmail(e.target.value),\n              placeholder: \"Enter email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formUserName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputUsername,\n              onInput: e => setInputUsername(e.target.value),\n              placeholder: \"User name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputFirst,\n              onInput: e => setInputFirst(e.target.value),\n              placeholder: \"First name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputLast,\n              onInput: e => setInputLast(e.target.value),\n              placeholder: \"Last name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formCounty\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"County\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: handleCountyChange,\n              options: lstCounties\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please provide a valid county.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formCity\",\n            style: {\n              'marginTop': '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onInput: e => setInputCity(e.target.value),\n              options: lstCounties\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please provide a valid city.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: inputPw,\n              onInput: e => setInputPw(e.target.value),\n              placeholder: \"Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formConfirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: inputConfirmPw,\n              onInput: e => setInputConfirmPw(e.target.value),\n              placeholder: \"Confirm Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            style: {\n              'float': 'right'\n            },\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"TrGRGPoPdXTr65JoifYLQ/wPztE=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/RegisterForm.js"],"names":["React","useState","useContext","Select","Form","Button","Spinner","AuthContext","countyList","countyCityList","RegisterForm","auth","inputEmail","setInputEmail","inputUsername","setInputUsername","inputFirst","setInputFirst","inputLast","setInputLast","inputCounty","setInputCounty","inputCity","setInputCity","inputPw","setInputPw","inputConfirmPw","setInputConfirmPw","isLoading","setIsLoading","isError","setIsError","lstCounties","lstCities","i","x","label","push","j","y","handleCountyChange","e","target","value","registerFormHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","error","Error","message","login","userId","token","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\";\r\nimport Select from 'react-select'\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./RegisterForm.css\";\r\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\r\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\r\n\r\n\r\n\r\nconst RegisterForm = () => {\r\n  const auth = useContext(AuthContext)\r\n  \r\n  const [inputEmail, setInputEmail] = useState('')\r\n  const [inputUsername, setInputUsername] = useState('')\r\n  const [inputFirst, setInputFirst] = useState('')\r\n  const [inputLast, setInputLast] = useState('')\r\n  const [inputCounty, setInputCounty] = useState('')\r\n  const [inputCity, setInputCity] = useState('')\r\n  const [inputPw, setInputPw] = useState('')\r\n  const [inputConfirmPw, setInputConfirmPw] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isError, setIsError] = useState()\r\n  \r\n  \r\n\r\n  // const options = [\r\n  //   { value: 'blues', label: 'Blues' },\r\n  //   { value: 'rock', label: 'Rock' },\r\n  //   { value: 'jazz', label: 'Jazz' },\r\n  //   { value: 'orchestra' label: 'Orchestra' } \r\n  // ];\r\n\r\n  let lstCounties = []\r\n  let lstCities = []\r\n  for (let i of countyList){\r\n    let x = {label: i}\r\n    lstCounties.push(x)\r\n  }\r\n  for (let j of countyCityList.inputCounty){\r\n    let y = {label: j}\r\n    lstCities.push(y)\r\n  }\r\n\r\n  const handleCountyChange = (e) => {\r\n    setInputCounty(e.target.value)\r\n  }\r\n\r\n  const registerFormHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true)\r\n    try {\r\n      const response = await fetch('http://localhost:5000/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify({\r\n          'email': inputEmail,\r\n          'username': inputUsername,\r\n          'firstName': inputFirst,\r\n          'lastName': inputLast,\r\n          'county' : inputCounty,\r\n          'city' : inputCity,\r\n          'password': inputPw,\r\n          'confirmPw': inputConfirmPw,\r\n        })\r\n      })\r\n      const responseData = await response.json()\r\n      if(!response.ok){\r\n        setIsError(responseData.error)\r\n        throw new Error(responseData.message)\r\n      }else{\r\n        auth.login(responseData.userId, responseData.token)\r\n        console.log(responseData)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n        setIsLoading(false)\r\n    }\r\n  \r\n        \r\n    setInputEmail('')\r\n    setInputUsername('')\r\n    setInputFirst('')\r\n    setInputLast('')\r\n    setInputCounty('')\r\n    setInputPw('')\r\n    setInputConfirmPw('')\r\n    setIsLoading(false)\r\n  }\r\n \r\n  return (\r\n    <div className=\"registerContainer\">\r\n      <div className=\"boxRegister\">\r\n        <div className=\"registerForm\">\r\n        <h3>Register {isLoading && <Spinner animation=\"border\" variant=\"primary\"/>}</h3>\r\n        {isError && <p className=\"mb-5\" id=\"noticeEvent\"> {isError}</p>}\r\n        <Form onSubmit={registerFormHandler}>\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your data with anyone else.\r\n            </Form.Text>\r\n            <br/>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" value={inputEmail} onInput={e => setInputEmail(e.target.value)} placeholder=\"Enter email\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formUserName\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputUsername} onInput={e => setInputUsername(e.target.value)} placeholder=\"User name\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputFirst} onInput={e => setInputFirst(e.target.value)} placeholder=\"First name\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputLast} onInput={e => setInputLast(e.target.value)} placeholder=\"Last name\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formCounty\">\r\n          <Form.Label>County</Form.Label>\r\n            <Select onChange={handleCountyChange} options = {lstCounties}/>\r\n\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid county.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formCity\" style={{'marginTop':'10px',}}>\r\n          <Form.Label>City</Form.Label>\r\n            <Select  onInput={e => setInputCity(e.target.value)} options = {lstCounties}/>\r\n            \r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid city.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" value={inputPw} onInput={e => setInputPw(e.target.value)} placeholder=\"Password\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type=\"password\" value={inputConfirmPw} onInput={e => setInputConfirmPw(e.target.value)} placeholder=\"Confirm Password\" required />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\"  style={{'float':'right'}} type=\"submit\">\r\n            Register\r\n          </Button>\r\n\r\n        </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}