{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from './store/index';\nimport \"./App.css\";\nimport HeaderNav from './components/Layout/HeaderNav';\nimport Events from \"./views/Events\";\nimport Homepage from \"./views/Homepage\";\nimport UserProfile from './views/UserProfile';\nimport MyEvents from './views/MyEvents'; // import { AuthContext } from './shared/context/auth-context'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [modalShow, setModalShow] = useState(false);\n  const dispatch = useDispatch();\n  const isAuth = useSelector(state => state.authentication.isAuthenticated);\n  const token = useSelector(state => state.authentication.userId);\n  useSelector(state => state.authentication.token);\n  const tokenExp = useSelector(state => state.authentication.tokenExpiration); //this done in login form with redux\n  // const login = useCallback((uid, token, expiration) => {\n  //   console.log('Hit by login \"context\"')\n  //   setUserId(uid)\n  //   setToken(token)\n  //   const tokenExpiration = expiration || new Date(new Date().getTime() + 1000 * 60 * 60 * 12 ) \n  //   setTokenExpirationDate(tokenExpiration)\n  //   localStorage.setItem('userData', JSON.stringify({userId:uid, token:token, expiration: tokenExpiration.toISOString()}))\n  // }, [])\n  // this done in header nav with redux \n  // const logout = useCallback(() => {\n  //   setToken(null)\n  //   setUserId(null)\n  //   setTokenExpirationDate(null)\n  //   localStorage.removeItem('userData')\n  //   localStorage.removeItem('userLoc')\n  // }, [])\n  //\n\n  useEffect(() => {\n    let logoutTimer;\n\n    if (token && tokenExp) {\n      const getRemainingTime = tokenExp - new Date().getTime() / 1000;\n      logoutTimer = setTimeout(dispatch(authActions.isAuthenticated(false)), getRemainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [tokenExp, token, isAuth, dispatch]);\n  useEffect(() => {\n    const localStoreageData = JSON.parse(localStorage.getItem('userData'));\n\n    if (localStoreageData && localStoreageData.token && localStoreageData.expiration > new Date().getTime() / 1000) {\n      // login(localStoreageData.userId, localStoreageData.token, new Date(localStoreageData.expiration))\n      dispatch(authActions.isAuthenticated(true));\n      dispatch(authActions.token(token));\n      dispatch(authActions.tokenExpiration(tokenExp));\n    }\n  }, [isAuth, dispatch, token, tokenExp]); // const showModal = useCallback(() => {\n  //   setModalShow(!modalShow)\n  // },[modalShow])\n\n  let routes;\n\n  if (isAuth === true && token) {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/events\",\n        children: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/events/myevents\",\n        children: [/*#__PURE__*/_jsxDEV(MyEvents, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/userprofile\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 38\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), routes]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7w+bpJT4EJtvpKgtRvP5ScbvfvA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/App.js"],"names":["React","useEffect","Route","Switch","Redirect","useSelector","useDispatch","authActions","HeaderNav","Events","Homepage","UserProfile","MyEvents","App","dispatch","isAuth","state","authentication","isAuthenticated","token","userId","tokenExp","tokenExpiration","logoutTimer","getRemainingTime","Date","getTime","setTimeout","clearTimeout","localStoreageData","JSON","parse","localStorage","getItem","expiration","routes"],"mappings":"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","sourcesContent":["import React, { useEffect} from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from './store/index'; \nimport \"./App.css\";\nimport HeaderNav from './components/Layout/HeaderNav';\nimport Events from \"./views/Events\";\nimport Homepage from \"./views/Homepage\";\nimport UserProfile from './views/UserProfile';\nimport MyEvents from './views/MyEvents';\n// import { AuthContext } from './shared/context/auth-context'\n\nfunction App() {\n  // const [modalShow, setModalShow] = useState(false);\n\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.authentication.isAuthenticated)\n  const token  = useSelector((state) => state.authentication.userId)\n  useSelector((state) => state.authentication.token)\n  const tokenExp = useSelector((state) => state.authentication.tokenExpiration)\n\n  //this done in login form with redux\n\n  // const login = useCallback((uid, token, expiration) => {\n  //   console.log('Hit by login \"context\"')\n  //   setUserId(uid)\n  //   setToken(token)\n  //   const tokenExpiration = expiration || new Date(new Date().getTime() + 1000 * 60 * 60 * 12 ) \n  //   setTokenExpirationDate(tokenExpiration)\n  //   localStorage.setItem('userData', JSON.stringify({userId:uid, token:token, expiration: tokenExpiration.toISOString()}))\n  // }, [])\n  \n  // this done in header nav with redux \n\n  // const logout = useCallback(() => {\n  //   setToken(null)\n  //   setUserId(null)\n  //   setTokenExpirationDate(null)\n  //   localStorage.removeItem('userData')\n  //   localStorage.removeItem('userLoc')\n  // }, [])\n  \n  //\n  useEffect(() => {\n    let logoutTimer;\n    if(token && tokenExp){\n      const getRemainingTime = tokenExp - new Date().getTime() / 1000;\n      logoutTimer = setTimeout(dispatch(authActions.isAuthenticated(false)), getRemainingTime);\n    } else {\n      clearTimeout(logoutTimer)\n    }\n  },[tokenExp, token, isAuth, dispatch])\n\n  useEffect(() => {\n    const localStoreageData = JSON.parse(localStorage.getItem('userData'))\n    if(localStoreageData && localStoreageData.token && localStoreageData.expiration > new Date().getTime() / 1000){\n      // login(localStoreageData.userId, localStoreageData.token, new Date(localStoreageData.expiration))\n      dispatch(authActions.isAuthenticated(true));\n      dispatch(authActions.token(token));\n      dispatch(authActions.tokenExpiration(tokenExp));\n\n    }\n  }, [isAuth, dispatch, token, tokenExp])\n\n\n\n\n  // const showModal = useCallback(() => {\n  //   setModalShow(!modalShow)\n  // },[modalShow])\n\n\n  let routes;\n  if(isAuth===true && token){\n    routes= (\n      <Switch>\n        <Route path=\"/events\"><Events/></Route>\n        <Route path=\"/events/myevents\"><MyEvents/> </Route>\n        <Route path=\"/userprofile\" > <UserProfile /> </Route>\n        <Redirect to=\"/events\"/>\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" > <Homepage/></Route>\n        <Redirect to=\"/\"/>\n      </Switch>\n    )\n  }\n\n  return (\n    <React.Fragment> \n      <HeaderNav/>\n        {routes}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}