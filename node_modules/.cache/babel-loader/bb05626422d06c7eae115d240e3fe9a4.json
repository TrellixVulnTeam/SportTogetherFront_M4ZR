{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\AddEventForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./AddEventForm.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\nimport sportOptions from \"../../utils/sportListAndOptions/sportOptions\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Form, Col, Row, Button, FormControl } from \"react-bootstrap\";\nimport { ReactComponent as LogoSvg1 } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/Images/SportTogetherJustLogoSVG1.svg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { alertActions } from \"../../store/alert\";\nimport { dialogActions } from \"../../store/modal\";\nimport customStyles from \"../../utils/ReactSelect/RSCustomStyle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\n\nvar yyyy = today.getFullYear();\nif (dd < 10) dd = \"0\" + dd;\nif (mm < 10) mm = \"0\" + mm;\ntoday = yyyy + \"-\" + mm + \"-\" + dd;\n\nconst AddEventForm = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [] = use;\n  const [inputSport, setInputSport] = useState(\"\");\n  const [inputNrPlayers, setInputNrPlayers] = useState(\"\");\n  const [inputLevel, setInputLevel] = useState(\"\");\n  const [inputCounty, setInputCounty] = useState(\"Select County...\");\n  const [inputCity, setInputCity] = useState(\"Select City...\");\n  const [inputPlace, setInputPlace] = useState(\"\");\n  const [inputDate, setInputDate] = useState(\"\");\n  const [inputTime, setInputTime] = useState(\"\");\n  const [inputDescription, setInputDescription] = useState(\"\");\n  const [listCounties, setListCounties] = useState([]);\n  const [listCities, setListCities] = useState([]);\n  const [buttonClass, setButtonClass] = useState(\"\");\n  const [sportValidation, setSportValidation] = useState(\"\");\n  const [countyValidation, setCountyValidation] = useState(\"\");\n  const [cityValidation, setCityValidation] = useState(\"\");\n  const [levelValidation, setLevelValidation] = useState(\"\");\n  const token = useSelector(state => state.authentication.token);\n  const dispatch = useDispatch();\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function reverseDate(string) {\n    return string = string.split(\"-\").reverse().join(\"-\");\n  }\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      let response = await fetch('http://localhost:5000/myprofile', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const responseData = await response.json();\n      const userSports = responseData.sportInterests;\n      console.log(userSports);\n    };\n\n    fetchUserData();\n  }, [token]);\n  useEffect(() => {\n    let lstCounties = [];\n\n    for (let i of countyList) {\n      lstCounties.push({\n        value: i,\n        label: i\n      });\n    }\n\n    setListCounties(lstCounties);\n  }, []);\n\n  const countyOptionChange = obj => {\n    setInputCounty(obj.value);\n    setInputCity(\"Select City...\");\n    const countyNameList = countyCityList[obj.value];\n    let lstCities = [];\n\n    for (let i of countyNameList) {\n      lstCities.push({\n        value: i,\n        label: i\n      });\n    }\n\n    setListCities(lstCities);\n  };\n\n  const cityOptionChange = obj => {\n    console.log(obj.value);\n    setInputCity(obj.value);\n  };\n\n  const sportChoiceHandler = opt => {\n    console.log(opt);\n    setInputSport(opt.value);\n  };\n\n  const btnClass1 = () => {\n    setInputLevel(\"true\");\n    console.log(\"CLICK BTN1\");\n    setButtonClass(\"btnActive1\");\n  };\n\n  const btnClass2 = () => {\n    setInputLevel(\"false\");\n    setButtonClass(\"btnActive2\");\n  };\n\n  const currentLocationHandler = () => {\n    const localStoreageLoc = JSON.parse(localStorage.getItem('userLoc'));\n    setInputCounty(localStoreageLoc.county);\n    setInputCity(localStoreageLoc.city);\n  }; // SUBMIT HANDLER !\n\n\n  const handleSubmit = async event => {\n    const form = event.currentTarget; // manual validation handlers -------------------------------\n\n    if (inputSport === \"\") {\n      setSportValidation(\"Please choose a sport\");\n    }\n\n    if (inputCounty === \"Select County...\") {\n      setCountyValidation(\"Please choose the County for your event\");\n    }\n\n    if (inputCity === \"Select City...\") {\n      setCityValidation(\"Please choose the City for your event\");\n    }\n\n    if (inputLevel === \"\") {\n      setLevelValidation(\"Please choose level requirement\");\n    } // manual validation handlers --------------------------------\n    // FORM VALIDATION CHECKER\n\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n    }\n\n    setValidated(true);\n\n    if (form.checkValidity() === true) {\n      //ON SUBMIT Try ...\n      setIsLoading(true);\n\n      if (!inputSport || !inputLevel || inputCounty === \"Select County...\" || inputCity === \"Select City...\") {\n        setIsLoading(false);\n        console.log(\"Not good\");\n        new Error(\"Need validation\");\n        return event.preventDefault();\n      } else {\n        event.preventDefault();\n\n        try {\n          const response = await fetch(\"http://localhost:5000/createEvent\", {\n            method: \"POST\",\n            headers: new Headers({\n              Authorization: \"Bearer \" + token,\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            }),\n            body: JSON.stringify({\n              Sport: inputSport,\n              County: inputCounty,\n              City: capitalizeFirstLetter(inputCity),\n              NrPlayers: inputNrPlayers,\n              LevelRequirement: inputLevel,\n              Place: inputPlace,\n              Date: reverseDate(inputDate),\n              Time: inputTime,\n              Description: inputDescription\n            })\n          });\n          const responseData = await response.json();\n\n          if (response.ok) {\n            console.log(\"response.OK from /createEvent > responnseData :\", responseData);\n            dispatch(dialogActions.modalToggle());\n            dispatch(alertActions.alertToggle());\n            dispatch(alertActions.alertVariant('success'));\n            dispatch(alertActions.alertTitle('New event has been created'));\n          } else {\n            setIsError(responseData.error);\n            setIsLoading(false);\n            dispatch(alertActions.alertToggle());\n            dispatch(alertActions.alertVariant('danger'));\n            dispatch(alertActions.alertTitle('Sorry, an error occured, please try again, if the problem persists, please contact customer support'));\n            return new Error(responseData.message);\n          }\n        } catch (error) {\n          setIsError(error);\n          setIsLoading(false);\n          console.log(error);\n        }\n      }\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addEventFormClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-5\",\n      id: \"noticeEvent\",\n      children: \"Keep in mind, once you create an event, you will not be able to edit/delete it if other users joined the event unless you make a request to all users and they agree with your request!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3 justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"2\",\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-5\",\n        id: \"noticeEvent\",\n        children: isError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Choose a sport*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: sportOptions,\n            styles: customStyles,\n            value: inputSport.value,\n            onChange: option => sportChoiceHandler(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), !inputSport && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            children: sportValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nr of players including you*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"ex: 4\",\n            min: \"2\",\n            max: \"20\",\n            value: inputNrPlayers,\n            onInput: e => setInputNrPlayers(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide then number of players you wish to play(including you)*.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Level Requirement*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choiceBtns\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              \"aria-label\": \"option 1\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: buttonClass === \"btnActive1\" ? \"btnActive1\" : \"\",\n                value: true,\n                onClick: btnClass1,\n                children: [\"Only my level\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              \"aria-label\": \"option 2\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: buttonClass === \"btnActive2\" ? \"btnActive2\" : \"\",\n                value: false,\n                onClick: btnClass2,\n                children: [\" \", \"Open to everyone\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), !inputLevel && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            style: {\n              textAlign: \"start\"\n            },\n            children: levelValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom03\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"County*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"currentLocationBtn\",\n            onClick: currentLocationHandler,\n            children: /*#__PURE__*/_jsxDEV(LogoSvg1, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: listCounties,\n            styles: customStyles,\n            value: inputCounty,\n            placeholder: inputCounty,\n            onChange: option => countyOptionChange(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), inputCounty === \"Select County...\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            children: countyValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: listCities,\n            styles: customStyles,\n            value: inputCity,\n            placeholder: inputCity,\n            onChange: opt => cityOptionChange(opt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), inputCity === \"Select City...\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            children: cityValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"You can specify a place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: inputPlace,\n            onInput: e => setInputPlace(e.target.value),\n            autoComplete: \"off\",\n            placeholder: \"Place: ex: Sport club...(Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start date*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"date\",\n            min: today,\n            value: inputDate,\n            onInput: e => setInputDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start time*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"time\",\n            value: inputTime,\n            onInput: e => setInputTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            value: inputDescription,\n            placeholder: \"Write a description(optional)\",\n            onInput: e => setInputDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        style: {\n          float: \"right\",\n          marginTop: \"15px\"\n        },\n        children: \"Create event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        style: {\n          float: \"right\"\n        },\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          as: \"span\",\n          animation: \"grow\",\n          size: \"sm\",\n          role: \"status\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEventForm, \"/W/Y2t0CmsBXaY82tmYfyAoj6X4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AddEventForm;\nexport default AddEventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEventForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/AddEventForm.js"],"names":["React","useState","useEffect","Select","countyList","countyCityList","sportOptions","Spinner","Form","Col","Row","Button","FormControl","useDispatch","useSelector","alertActions","dialogActions","customStyles","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","AddEventForm","props","isLoading","setIsLoading","validated","setValidated","isError","setIsError","use","inputSport","setInputSport","inputNrPlayers","setInputNrPlayers","inputLevel","setInputLevel","inputCounty","setInputCounty","inputCity","setInputCity","inputPlace","setInputPlace","inputDate","setInputDate","inputTime","setInputTime","inputDescription","setInputDescription","listCounties","setListCounties","listCities","setListCities","buttonClass","setButtonClass","sportValidation","setSportValidation","countyValidation","setCountyValidation","cityValidation","setCityValidation","levelValidation","setLevelValidation","token","state","authentication","dispatch","capitalizeFirstLetter","string","charAt","toUpperCase","slice","reverseDate","split","reverse","join","fetchUserData","response","fetch","method","headers","responseData","json","userSports","sportInterests","console","log","lstCounties","i","push","value","label","countyOptionChange","obj","countyNameList","lstCities","cityOptionChange","sportChoiceHandler","opt","btnClass1","btnClass2","currentLocationHandler","localStoreageLoc","JSON","parse","localStorage","getItem","county","city","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","Error","Headers","Authorization","Accept","body","stringify","Sport","County","City","NrPlayers","LevelRequirement","Place","Time","Description","ok","modalToggle","alertToggle","alertVariant","alertTitle","error","message","option","e","target","textAlign","float","marginTop"],"mappings":"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","sourcesContent":["import \"./AddEventForm.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\r\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\r\nimport sportOptions from \"../../utils/sportListAndOptions/sportOptions\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Form, Col, Row, Button, FormControl } from \"react-bootstrap\";\r\nimport { ReactComponent as LogoSvg1 } from \"../../assets/Images/SportTogetherJustLogoSVG1.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { alertActions } from \"../../store/alert\";\r\nimport { dialogActions } from \"../../store/modal\";\r\nimport customStyles from \"../../utils/ReactSelect/RSCustomStyle\";\r\nvar today = new Date();\r\nvar dd = today.getDate();\r\nvar mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\r\nvar yyyy = today.getFullYear();\r\n\r\nif (dd < 10) dd = \"0\" + dd;\r\nif (mm < 10) mm = \"0\" + mm;\r\ntoday = yyyy + \"-\" + mm + \"-\" + dd;\r\n\r\nconst AddEventForm = props => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [validated, setValidated] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [] = use\r\n  const [inputSport, setInputSport] = useState(\"\");\r\n  const [inputNrPlayers, setInputNrPlayers] = useState(\"\");\r\n  const [inputLevel, setInputLevel] = useState(\"\");\r\n  const [inputCounty, setInputCounty] = useState(\"Select County...\");\r\n  const [inputCity, setInputCity] = useState(\"Select City...\");\r\n  const [inputPlace, setInputPlace] = useState(\"\");\r\n  const [inputDate, setInputDate] = useState(\"\");\r\n  const [inputTime, setInputTime] = useState(\"\");\r\n  const [inputDescription, setInputDescription] = useState(\"\");\r\n  const [listCounties, setListCounties] = useState([]);\r\n  const [listCities, setListCities] = useState([]);\r\n  const [buttonClass, setButtonClass] = useState(\"\");\r\n  const [sportValidation, setSportValidation] = useState(\"\");\r\n  const [countyValidation, setCountyValidation] = useState(\"\");\r\n  const [cityValidation, setCityValidation] = useState(\"\");\r\n  const [levelValidation, setLevelValidation] = useState(\"\");\r\n\r\n  const token = useSelector((state) => state.authentication.token)\r\n  const dispatch = useDispatch()\r\n\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  function reverseDate(string) {\r\n    return (string = string.split(\"-\").reverse().join(\"-\"));\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async() => {\r\n      let response = await fetch('http://localhost:5000/myprofile', {\r\n        method: 'GET',\r\n        headers:{\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer '+token,\r\n        }\r\n      })\r\n      const responseData = await response.json()\r\n      const userSports = responseData.sportInterests;\r\n      console.log(userSports)\r\n      \r\n    }\r\n    fetchUserData()\r\n  },[token])\r\n\r\n  useEffect(() => {\r\n    let lstCounties = [];\r\n    for (let i of countyList) {\r\n      lstCounties.push({ value: i, label: i });\r\n    }\r\n    setListCounties(lstCounties);\r\n  }, []);\r\n\r\n  const countyOptionChange = obj => {\r\n    setInputCounty(obj.value);\r\n    setInputCity(\"Select City...\")\r\n    const countyNameList = countyCityList[obj.value];\r\n    let lstCities = [];\r\n    for (let i of countyNameList) {\r\n      lstCities.push({ value: i, label: i });\r\n    }\r\n    setListCities(lstCities);\r\n  };\r\n\r\n  const cityOptionChange = obj => {\r\n    console.log(obj.value);\r\n    setInputCity(obj.value);\r\n  };\r\n\r\n  const sportChoiceHandler = opt => {\r\n    console.log(opt);\r\n    setInputSport(opt.value);\r\n  };\r\n\r\n  const btnClass1 = () => {\r\n    setInputLevel(\"true\");\r\n    console.log(\"CLICK BTN1\");\r\n    setButtonClass(\"btnActive1\");\r\n  };\r\n  const btnClass2 = () => {\r\n    setInputLevel(\"false\");\r\n    setButtonClass(\"btnActive2\");\r\n  };\r\n\r\n  const currentLocationHandler = () => {\r\n    const localStoreageLoc = JSON.parse(localStorage.getItem('userLoc'))\r\n    setInputCounty(localStoreageLoc.county);\r\n    setInputCity(localStoreageLoc.city);\r\n  };\r\n\r\n  // SUBMIT HANDLER !\r\n  const handleSubmit = async event => {\r\n    const form = event.currentTarget;\r\n    // manual validation handlers -------------------------------\r\n    if (inputSport === \"\") {\r\n      setSportValidation(\"Please choose a sport\");\r\n    }\r\n    if (inputCounty === \"Select County...\") {\r\n      setCountyValidation(\"Please choose the County for your event\");\r\n    }\r\n    if (inputCity === \"Select City...\") {\r\n      setCityValidation(\"Please choose the City for your event\");\r\n    }\r\n    if (inputLevel === \"\") {\r\n      setLevelValidation(\"Please choose level requirement\");\r\n    }\r\n    // manual validation handlers --------------------------------\r\n    // FORM VALIDATION CHECKER\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity() === true) {\r\n      //ON SUBMIT Try ...\r\n      setIsLoading(true);\r\n      if (!inputSport || !inputLevel || inputCounty === \"Select County...\" || inputCity === \"Select City...\") {\r\n        setIsLoading(false);\r\n        console.log(\"Not good\");\r\n        new Error(\"Need validation\");\r\n        return event.preventDefault();\r\n      } else {\r\n        event.preventDefault();\r\n        try {\r\n          const response = await fetch(\"http://localhost:5000/createEvent\", {\r\n            method: \"POST\",\r\n            headers: new Headers({\r\n              Authorization: \"Bearer \" + token,\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            }),\r\n            body: JSON.stringify({\r\n              Sport: inputSport,\r\n              County: inputCounty,\r\n              City: capitalizeFirstLetter(inputCity),\r\n              NrPlayers: inputNrPlayers,\r\n              LevelRequirement: inputLevel,\r\n              Place: inputPlace,\r\n              Date: reverseDate(inputDate),\r\n              Time: inputTime,\r\n              Description: inputDescription,\r\n            }),\r\n          });\r\n          const responseData = await response.json();\r\n          if (response.ok) {\r\n            console.log(\"response.OK from /createEvent > responnseData :\",responseData);\r\n            dispatch(dialogActions.modalToggle())       \r\n            dispatch(alertActions.alertToggle())\r\n            dispatch(alertActions.alertVariant('success'))\r\n            dispatch(alertActions.alertTitle('New event has been created')) \r\n\r\n          } else {\r\n            setIsError(responseData.error);\r\n            setIsLoading(false);\r\n            dispatch(alertActions.alertToggle())\r\n            dispatch(alertActions.alertVariant('danger'))\r\n            dispatch(alertActions.alertTitle('Sorry, an error occured, please try again, if the problem persists, please contact customer support'))\r\n            return new Error(responseData.message);\r\n          }\r\n        } catch (error) {\r\n          setIsError(error);\r\n          setIsLoading(false);\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addEventFormClass\">\r\n      <p className=\"mb-5\" id=\"noticeEvent\">\r\n        Keep in mind, once you create an event, you will not be able to\r\n        edit/delete it if other users joined the event unless you make a request\r\n        to all users and they agree with your request!\r\n      </p>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        {isLoading && (\r\n          <Row className=\"mb-3 justify-content-center\">\r\n            <Col md=\"2\" className=\"d-flex justify-content-center\">\r\n              <Spinner animation=\"border\" role=\"status\" />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        {isError && (\r\n          <p className=\"mb-5\" id=\"noticeEvent\">\r\n            {isError}\r\n          </p>\r\n        )}\r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\">\r\n            <Form.Label>Choose a sport*</Form.Label>\r\n            <Select\r\n              options={sportOptions}\r\n              styles={customStyles}\r\n              value={inputSport.value}\r\n              onChange={option => sportChoiceHandler(option)}\r\n            />\r\n            {!inputSport && (\r\n              <div className=\"text-danger validationInput123\">\r\n                {sportValidation}\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Form.Label>Nr of players including you*</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"ex: 4\"\r\n              min=\"2\"\r\n              max=\"20\"\r\n              value={inputNrPlayers}\r\n              onInput={e => setInputNrPlayers(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide then number of players you wish to play(including\r\n              you)*.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\" style={{ textAlign: \"center\" }}>\r\n            <Form.Label>Level Requirement*</Form.Label>\r\n            <div className=\"choiceBtns\">\r\n              <Form.Check type=\"radio\" aria-label=\"option 1\">\r\n                <button\r\n                  type=\"button\"\r\n                  id={buttonClass === \"btnActive1\" ? \"btnActive1\" : \"\"}\r\n                  value={true}\r\n                  onClick={btnClass1}\r\n                >\r\n                  Only my level{\" \"}\r\n                </button>{\" \"}\r\n              </Form.Check>\r\n              <Form.Check type=\"radio\" aria-label=\"option 2\">\r\n                {\" \"}\r\n                <button\r\n                  type=\"button\"\r\n                  id={buttonClass === \"btnActive2\" ? \"btnActive2\" : \"\"}\r\n                  value={false}\r\n                  onClick={btnClass2}\r\n                >\r\n                  {\" \"}\r\n                  Open to everyone\r\n                </button>{\" \"}\r\n              </Form.Check>\r\n            </div>\r\n            {!inputLevel && (\r\n              <div\r\n                className=\"text-danger validationInput123\"\r\n                style={{ textAlign: \"start\" }}\r\n              >\r\n                {levelValidation}\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n            <Form.Label>County*</Form.Label>{\" \"}\r\n            <button type=\"button\" className=\"currentLocationBtn\" onClick={currentLocationHandler}>\r\n              <LogoSvg1 />\r\n            </button>\r\n            <Select\r\n              options={listCounties}\r\n              styles={customStyles}\r\n              value={inputCounty}\r\n              placeholder={inputCounty}\r\n              onChange={option => countyOptionChange(option)}\r\n            />\r\n            {inputCounty === \"Select County...\" && (\r\n              <div className=\"text-danger validationInput123\">\r\n                {countyValidation}\r\n              </div>\r\n            )}\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>City*</Form.Label>\r\n            <Select\r\n              options={listCities}\r\n              styles={customStyles}\r\n              value={inputCity}\r\n              placeholder={inputCity}\r\n              onChange={opt => cityOptionChange(opt)}\r\n            />\r\n            {inputCity === \"Select City...\" && (\r\n              <div className=\"text-danger validationInput123\">\r\n                {cityValidation}\r\n              </div>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>You can specify a place</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={inputPlace}\r\n              onInput={e => setInputPlace(e.target.value)}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Place: ex: Sport club...(Optional)\"\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Form.Label>Start date*</Form.Label>\r\n            <FormControl\r\n              type=\"date\"\r\n              min={today}\r\n              value={inputDate}\r\n              onInput={e => setInputDate(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start date\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n\r\n          <Col md=\"6\">\r\n            <Form.Label>Start time*</Form.Label>\r\n            <FormControl\r\n              type=\"time\"\r\n              value={inputTime}\r\n              onInput={e => setInputTime(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start time\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-5\">\r\n          <Col md=\"12\">\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={inputDescription}\r\n                placeholder=\"Write a description(optional)\"\r\n                onInput={e => setInputDescription(e.target.value)}\r\n              />\r\n          </Col>\r\n        </Row>\r\n\r\n        {!isLoading && (\r\n          <Button type=\"submit\" style={{ float: \"right\", marginTop: \"15px\" }}>\r\n            Create event\r\n          </Button>\r\n        )}\r\n        {isLoading && (\r\n          <Button variant=\"primary\" style={{ float: \"right\" }} disabled>\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"grow\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            Loading...\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEventForm;\r\n"]},"metadata":{},"sourceType":"module"}