{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Select from 'react-select';\nimport { Form, Button, Spinner, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authActions } from \"../../store/auth\";\nimport { dialogActions } from \"../../store/modalAndAlerts\";\nimport \"./RegisterForm.css\";\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\nimport { userActions } from \"../../store/userData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const [inputEmail, setInputEmail] = useState('');\n  const [inputUsername, setInputUsername] = useState('');\n  const [inputFirst, setInputFirst] = useState('');\n  const [inputLast, setInputLast] = useState('');\n  const [inputPw, setInputPw] = useState('');\n  const [inputConfirmPw, setInputConfirmPw] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [buttonClass, setButtonClass] = useState();\n  const [inputGender, setInputGender] = useState(null);\n  const [isError, setIsError] = useState();\n  const [inputCounty, setInputCounty] = useState('');\n  const [levelValidation, setLevelValidation] = useState('');\n  const [inputCity, setInputCity] = useState('');\n  const [listCounties, setListCounties] = useState([]);\n  const [listCities, setListCities] = useState([]);\n  const dispatch = useDispatch();\n  useSelector(state => state.authentication.isAuthenticated);\n  useSelector(state => state.authentication.userId);\n  useSelector(state => state.authentication.token);\n  useSelector(state => state.authentication.tokenExpiration);\n  useSelector(state => state.dialog.modalToggle);\n  useEffect(() => {\n    let lstCounties = [];\n\n    for (let i of countyList) {\n      lstCounties.push({\n        value: i,\n        label: i\n      });\n    }\n\n    console.log(lstCounties);\n    setListCounties(lstCounties);\n  }, []);\n\n  const btnClass1 = () => {\n    setInputGender('male');\n    setButtonClass(\"btnActive1\");\n  };\n\n  const btnClass2 = () => {\n    setInputGender(\"female\");\n    setButtonClass(\"btnActive2\");\n  };\n\n  const countyOptionChange = obj => {\n    setInputCounty(obj.value);\n    console.log(obj.value);\n    const countyNameList = countyCityList[obj.value];\n    console.log('LIST OF CITIES IN ARRAY: >>', countyNameList);\n    let lstCities = [];\n\n    for (let i of countyNameList) {\n      lstCities.push({\n        value: i,\n        label: i\n      });\n    }\n\n    console.log(lstCities);\n    setListCities(lstCities);\n  };\n\n  const cityOptionChange = obj => {\n    setInputCity(obj.value);\n  };\n\n  const registerFormHandler = async event => {\n    event.preventDefault();\n\n    if (inputGender === \"\") {\n      setLevelValidation(\"Please choose level requirement\");\n      return new Error('No input gender');\n    }\n\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5000/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'email': inputEmail,\n          'username': inputUsername,\n          'firstName': inputFirst,\n          'lastName': inputLast,\n          'county': inputCounty,\n          'gender': inputGender,\n          'city': inputCity,\n          'password': inputPw,\n          'confirmPw': inputConfirmPw\n        })\n      });\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        setIsError(responseData.error);\n        setIsLoading(false);\n        return new Error(responseData.message);\n      } else {\n        let tokenExp = new Date().getTime() + 1000 * 60 * 60 * 3;\n        dispatch(authActions.isAuthenticated(true));\n        dispatch(authActions.token(responseData.token));\n        dispatch(authActions.tokenExpiration(tokenExp));\n        dispatch(userActions.userId(responseData.userId));\n        dispatch(userActions.userCounty(responseData.county));\n        dispatch(userActions.userCity(responseData.city));\n        dispatch(userActions.userCreatedEvents(responseData.createdEvents));\n        dispatch(userActions.userFirst(responseData.firsName));\n        dispatch(userActions.userLast(responseData.lastName));\n        dispatch(userActions.userGender(responseData.gender));\n        dispatch(userActions.userDescription(responseData.description));\n        dispatch(userActions.userLabels(responseData.labels));\n        dispatch(userActions.userJoinedEvents(responseData.joinedEvents));\n        dispatch(userActions.userMatchesPlayed(responseData.matchesPlayed));\n        dispatch(userActions.userSportInterests(responseData.sportInterests));\n        dispatch(userActions.userImages(responseData.userImages));\n        dispatch(userActions.userReviewRating(responseData.reviewRating));\n        localStorage.setItem('userData', JSON.stringify({\n          userId: responseData.userId,\n          token: responseData.token,\n          expiration: tokenExp\n        }));\n        /*tokenExp it was tokenExp.toISOString() and above dates not converted to strings */\n\n        dispatch(dialogActions.modalToggle());\n        console.log(responseData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxRegister\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-5\",\n          id: \"noticeEvent\",\n          children: [\" \", isError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: registerFormHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your data with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: inputEmail,\n              onInput: e => setInputEmail(e.target.value),\n              placeholder: \"Enter email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formUserName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputUsername,\n              onInput: e => setInputUsername(e.target.value),\n              placeholder: \"User name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputFirst,\n              onInput: e => setInputFirst(e.target.value),\n              placeholder: \"First name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: inputLast,\n              onInput: e => setInputLast(e.target.value),\n              placeholder: \"Last name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"6\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choiceBtns\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"radio\",\n                \"aria-label\": \"option 1\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  id: buttonClass === \"btnActive1\" ? \"btnActive1\" : \"\",\n                  value: inputGender,\n                  onClick: btnClass1,\n                  style: {\n                    marginLeft: '25px',\n                    margin: '25px'\n                  },\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"radio\",\n                \"aria-label\": \"option 2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  id: buttonClass === \"btnActive2\" ? \"btnActive2\" : \"\",\n                  value: inputGender,\n                  onClick: btnClass2,\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this), !inputGender && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger validationInput123\",\n              style: {\n                textAlign: \"start\"\n              },\n              children: levelValidation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formCounty\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"County\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: listCounties,\n              value: inputCounty.value,\n              onChange: option => countyOptionChange(option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formCity\",\n            style: {\n              'marginTop': '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: listCities,\n              value: inputCity.value,\n              onChange: opt => cityOptionChange(opt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPassword\",\n            style: {\n              'marginTop': '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: inputPw,\n              onInput: e => setInputPw(e.target.value),\n              placeholder: \"Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formConfirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: inputConfirmPw,\n              onInput: e => setInputConfirmPw(e.target.value),\n              placeholder: \"Confirm Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }, this), !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 26\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            disabled: true,\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"grow\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 13\n            }, this), \"Loading...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"o44M/FyAfk4lmk7X+CVYm5vcvOw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/RegisterForm.js"],"names":["React","useState","useEffect","Select","Form","Button","Spinner","Col","useSelector","useDispatch","authActions","dialogActions","countyList","countyCityList","userActions","RegisterForm","inputEmail","setInputEmail","inputUsername","setInputUsername","inputFirst","setInputFirst","inputLast","setInputLast","inputPw","setInputPw","inputConfirmPw","setInputConfirmPw","isLoading","setIsLoading","buttonClass","setButtonClass","inputGender","setInputGender","isError","setIsError","inputCounty","setInputCounty","levelValidation","setLevelValidation","inputCity","setInputCity","listCounties","setListCounties","listCities","setListCities","dispatch","state","authentication","isAuthenticated","userId","token","tokenExpiration","dialog","modalToggle","lstCounties","i","push","value","label","console","log","btnClass1","btnClass2","countyOptionChange","obj","countyNameList","lstCities","cityOptionChange","registerFormHandler","event","preventDefault","Error","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","error","message","tokenExp","Date","getTime","userCounty","county","userCity","city","userCreatedEvents","createdEvents","userFirst","firsName","userLast","lastName","userGender","gender","userDescription","description","userLabels","labels","userJoinedEvents","joinedEvents","userMatchesPlayed","matchesPlayed","userSportInterests","sportInterests","userImages","userReviewRating","reviewRating","localStorage","setItem","expiration","e","target","marginLeft","margin","textAlign","option","opt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Select from 'react-select'\r\nimport { Form, Button, Spinner, Col } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authActions } from \"../../store/auth\";\r\nimport { dialogActions } from \"../../store/modalAndAlerts\";\r\nimport \"./RegisterForm.css\";\r\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\r\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\r\nimport { userActions } from \"../../store/userData\";\r\n\r\nconst RegisterForm = () => {  \r\n  const [inputEmail, setInputEmail] = useState('')\r\n  const [inputUsername, setInputUsername] = useState('')\r\n  const [inputFirst, setInputFirst] = useState('')\r\n  const [inputLast, setInputLast] = useState('')\r\n  const [inputPw, setInputPw] = useState('')\r\n  const [inputConfirmPw, setInputConfirmPw] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [buttonClass, setButtonClass] = useState()\r\n  const [inputGender, setInputGender] = useState(null)\r\n  const [isError, setIsError] = useState()\r\n  const [inputCounty, setInputCounty] = useState('')\r\n  const [levelValidation, setLevelValidation] = useState('')\r\n  const [inputCity, setInputCity] = useState('')\r\n  const [listCounties, setListCounties] = useState([])\r\n  const [listCities, setListCities] = useState([])\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  useSelector((state) => state.authentication.isAuthenticated)\r\n  useSelector((state) => state.authentication.userId)\r\n  useSelector((state) => state.authentication.token)\r\n  useSelector((state) => state.authentication.tokenExpiration)\r\n  useSelector((state) => state.dialog.modalToggle)\r\n\r\n    useEffect(()=>{\r\n      let lstCounties = []\r\n      for (let i of countyList){\r\n        lstCounties.push({value: i, label: i})\r\n      }\r\n      console.log(lstCounties)\r\n      setListCounties(lstCounties)\r\n    },[])\r\n\r\n  const btnClass1 = () => {\r\n    setInputGender('male');\r\n    setButtonClass(\"btnActive1\");\r\n  };\r\n  const btnClass2 = () => {\r\n    setInputGender(\"female\");\r\n    setButtonClass(\"btnActive2\");\r\n  };\r\n\r\n  const countyOptionChange = (obj) => {\r\n    setInputCounty(obj.value)\r\n    console.log(obj.value)\r\n    const countyNameList = countyCityList[obj.value]\r\n    console.log('LIST OF CITIES IN ARRAY: >>', countyNameList )\r\n\r\n    let lstCities = []\r\n      for (let i of countyNameList){\r\n        lstCities.push({value: i, label: i})\r\n      }\r\n    console.log(lstCities)\r\n    setListCities(lstCities)\r\n  }\r\n\r\n\r\n  const cityOptionChange = (obj) => {\r\n    setInputCity(obj.value)\r\n  }\r\n  \r\n\r\n  const registerFormHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (inputGender === \"\") {\r\n      setLevelValidation(\"Please choose level requirement\");\r\n      return new Error('No input gender')\r\n    }\r\n    setIsLoading(true)\r\n    try {\r\n      const response = await fetch('http://localhost:5000/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          'email': inputEmail,\r\n          'username': inputUsername,\r\n          'firstName': inputFirst,\r\n          'lastName': inputLast,\r\n          'county' : inputCounty,\r\n          'gender' : inputGender,\r\n          'city' : inputCity,\r\n          'password': inputPw,\r\n          'confirmPw': inputConfirmPw,\r\n        })\r\n      })\r\n      const responseData = await response.json()\r\n      if(!response.ok){\r\n        setIsError(responseData.error)\r\n        setIsLoading(false)\r\n        return new Error(responseData.message)\r\n      }else{\r\n        let tokenExp = new Date().getTime() + (1000 * 60 * 60 * 3)\r\n        dispatch(authActions.isAuthenticated(true)) \r\n        dispatch(authActions.token(responseData.token)) \r\n        dispatch(authActions.tokenExpiration(tokenExp))\r\n        \r\n        dispatch(userActions.userId(responseData.userId))\r\n        dispatch(userActions.userCounty(responseData.county))\r\n        dispatch(userActions.userCity(responseData.city))\r\n        dispatch(userActions.userCreatedEvents(responseData.createdEvents))\r\n        dispatch(userActions.userFirst(responseData.firsName))\r\n        dispatch(userActions.userLast(responseData.lastName))\r\n        dispatch(userActions.userGender(responseData.gender))\r\n        dispatch(userActions.userDescription(responseData.description))\r\n        dispatch(userActions.userLabels(responseData.labels))\r\n        dispatch(userActions.userJoinedEvents(responseData.joinedEvents))\r\n        dispatch(userActions.userMatchesPlayed(responseData.matchesPlayed))\r\n        dispatch(userActions.userSportInterests(responseData.sportInterests))\r\n        dispatch(userActions.userImages(responseData.userImages))\r\n        dispatch(userActions.userReviewRating(responseData.reviewRating))\r\n\r\n        localStorage.setItem('userData', JSON.stringify({userId:responseData.userId, token:responseData.token, expiration: tokenExp})) /*tokenExp it was tokenExp.toISOString() and above dates not converted to strings */\r\n        dispatch(dialogActions.modalToggle())\r\n        console.log(responseData)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n \r\n  return (\r\n    <div className=\"registerContainer\">\r\n      <div className=\"boxRegister\">\r\n        <div className=\"registerForm\">\r\n        <h3>Register</h3>\r\n        {isError && <p className=\"mb-5\" id=\"noticeEvent\"> {isError}</p>}\r\n        <Form onSubmit={registerFormHandler}>\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your data with anyone else.\r\n            </Form.Text>\r\n            <br/>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" value={inputEmail} onInput={e => setInputEmail(e.target.value)} placeholder=\"Enter email\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formUserName\">\r\n            <Form.Label>User Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputUsername} onInput={e => setInputUsername(e.target.value)} placeholder=\"User name\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputFirst} onInput={e => setInputFirst(e.target.value)} placeholder=\"First name\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formLastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control type=\"text\" value={inputLast} onInput={e => setInputLast(e.target.value)} placeholder=\"Last name\" required/>\r\n          </Form.Group>\r\n\r\n          \r\n          <Col sm=\"6\">\r\n            <Form.Label>Gender</Form.Label>\r\n            <div className=\"choiceBtns\">\r\n              <Form.Check type=\"radio\" aria-label=\"option 1\">\r\n                <button\r\n                  type=\"button\"\r\n                  id={buttonClass === \"btnActive1\" ? \"btnActive1\" : \"\"}\r\n                  value={inputGender}\r\n                  onClick={btnClass1}\r\n                  style={{marginLeft:'25px',margin:'25px'}}\r\n                >\r\n                  Male\r\n                </button>\r\n              </Form.Check>\r\n              <Form.Check type=\"radio\" aria-label=\"option 2\">\r\n                <button\r\n                  type=\"button\"\r\n                  id={buttonClass === \"btnActive2\" ? \"btnActive2\" : \"\"}\r\n                  value={inputGender}\r\n                  onClick={btnClass2}\r\n                >\r\n                  Female\r\n                </button>\r\n              </Form.Check>\r\n            </div>\r\n            {!inputGender && (\r\n              <div\r\n                className=\"text-danger validationInput123\"\r\n                style={{ textAlign: \"start\" }}\r\n              >\r\n                {levelValidation}\r\n              </div>\r\n            )}\r\n            </Col>\r\n          <Form.Group controlId=\"formCounty\">\r\n          <Form.Label>County</Form.Label>\r\n            <Select options ={listCounties} value={inputCounty.value} onChange={(option) => countyOptionChange(option)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formCity\" style={{'marginTop':'10px',}}>\r\n          <Form.Label>City</Form.Label>\r\n            <Select options = {listCities} value={inputCity.value} onChange={(opt) => cityOptionChange(opt)}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formPassword\" style={{'marginTop':'10px',}}>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" value={inputPw} onInput={e => setInputPw(e.target.value)} placeholder=\"Password\" required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type=\"password\" value={inputConfirmPw} onInput={e => setInputConfirmPw(e.target.value)} placeholder=\"Confirm Password\" required />\r\n          </Form.Group>\r\n\r\n          {!isLoading && <Button variant=\"primary\" type=\"submit\">Register</Button>}\r\n          {isLoading && <Button variant=\"primary\" disabled>\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"grow\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            Loading...\r\n          </Button>}\r\n        </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}