{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chumu\\\\Desktop\\\\FullStackTraining\\\\SportTogether\\\\frontend\\\\src\\\\components\\\\Forms\\\\AddEventForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./AddEventForm.css\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\nimport sportOptions from \"../../utils/sportListAndOptions/sportOptions\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Form, Col, Row, Button, FloatingLabel, FormControl } from \"react-bootstrap\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { ReactComponent as LogoSvg1 } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/Images/SportTogetherJustLogoSVG1.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\n\nvar yyyy = today.getFullYear();\nif (dd < 10) dd = \"0\" + dd;\nif (mm < 10) mm = \"0\" + mm;\ntoday = yyyy + \"-\" + mm + \"-\" + dd;\n\nconst AddEventForm = props => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [inputSport, setInputSport] = useState(\"\");\n  const [inputNrPlayers, setInputNrPlayers] = useState(\"\");\n  const [inputLevel, setInputLevel] = useState(\"\");\n  const [inputCounty, setInputCounty] = useState(\"Select County...\");\n  const [inputCity, setInputCity] = useState(\"Select City...\");\n  const [inputPlace, setInputPlace] = useState(\"\");\n  const [inputDate, setInputDate] = useState(\"\");\n  const [inputTime, setInputTime] = useState(\"\");\n  const [inputDescription, setInputDescription] = useState(\"\");\n  const [listCounties, setListCounties] = useState([]);\n  const [listCities, setListCities] = useState([]);\n  const [buttonClass, setButtonClass] = useState(\"\");\n  const [sportValidation, setSportValidation] = useState(\"\");\n  const [countyValidation, setCountyValidation] = useState(\"\");\n  const [cityValidation, setCityValidation] = useState(\"\");\n  const [levelValidation, setLevelValidation] = useState(\"\");\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function reverseDate(string) {\n    return string = string.split(\"-\").reverse().join(\"-\");\n  }\n\n  useEffect(() => {\n    let lstCounties = [];\n\n    for (let i of countyList) {\n      lstCounties.push({\n        value: i,\n        label: i\n      });\n    }\n\n    setListCounties(lstCounties);\n  }, []);\n\n  const countyOptionChange = obj => {\n    setInputCounty(obj.value);\n    const countyNameList = countyCityList[obj.value];\n    let lstCities = [];\n\n    for (let i of countyNameList) {\n      lstCities.push({\n        value: i,\n        label: i\n      });\n    }\n\n    setListCities(lstCities);\n  };\n\n  const cityOptionChange = obj => {\n    console.log(obj.value);\n    setInputCity(obj.value);\n  };\n\n  const sportChoiceHandler = opt => {\n    console.log(opt);\n    setInputSport(opt.value);\n  };\n\n  const btnClass1 = () => {\n    setInputLevel(\"true\");\n    console.log(\"CLICK BTN1\");\n    setButtonClass(\"btnActive1\");\n  };\n\n  const btnClass2 = () => {\n    setInputLevel(\"false\");\n    setButtonClass(\"btnActive2\");\n  };\n\n  const currentLocationHandler = () => {\n    const cc = JSON.parse(localStorage.getItem(\"userLoc\"));\n    setInputCounty(cc.county);\n    setInputCity(cc.city);\n  }; // SUBMIT HANDLER !\n\n\n  const handleSubmit = async event => {\n    const form = event.currentTarget; // manual validation handlers\n\n    if (inputSport === \"\") {\n      setSportValidation(\"Please choose a sport\");\n    }\n\n    if (inputCounty === \"Select County...\") {\n      setCountyValidation(\"Please choose the County for your event\");\n    }\n\n    if (inputCity === \"Select City...\") {\n      setCityValidation(\"Please choose the City for your event\");\n    }\n\n    if (inputLevel === \"\") {\n      setLevelValidation(\"Please choose level requirement\");\n    } // FORM VALIDATION CHECKER\n\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n    }\n\n    setValidated(true);\n\n    if (form.checkValidity() === true) {\n      //ON SUBMIT Try ...\n      setIsLoading(true);\n\n      if (!inputSport || !inputLevel || inputCounty === \"Select County...\" || inputCity === \"Select City...\") {\n        setIsLoading(false);\n        console.log(\"Not good\");\n        new Error(\"Need validation\");\n        return event.preventDefault();\n      } else {\n        event.preventDefault();\n\n        try {\n          const response = await fetch(\"http://localhost:5000/createEvent\", {\n            method: \"POST\",\n            headers: new Headers({\n              Authorization: \"Bearer \" + auth.token,\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            }),\n            body: JSON.stringify({\n              Sport: inputSport,\n              County: inputCounty,\n              City: capitalizeFirstLetter(inputCity),\n              NrPlayers: inputNrPlayers,\n              LevelRequirement: inputLevel,\n              Place: inputPlace,\n              Date: reverseDate(inputDate),\n              Time: inputTime,\n              Description: inputDescription\n            })\n          });\n          const responseData = await response.json();\n\n          if (response.ok) {\n            console.log(\"response.OK from /createEvent > responnseData :\", responseData); // isSuccess used to show message\n          } else {\n            setIsError(responseData.error);\n            setIsLoading(false);\n            return new Error(responseData.message);\n          }\n        } catch (error) {\n          setIsError(error);\n          setIsLoading(false);\n          console.log(error);\n        }\n\n        setTimeout(() => {\n          props.onAddEventItem(false);\n        }, 1000);\n      }\n    }\n\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addEventFormClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-5\",\n      id: \"noticeEvent\",\n      children: \"Keep in mind, once you create an event, you will not be able to edit/delete it if other users joined the event unless you make a request to all users and they agree with your request!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3 justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"2\",\n          className: \"d-flex justify-content-center\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-5\",\n        id: \"noticeEvent\",\n        children: isError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Choose a sport*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: sportOptions,\n            value: inputSport.value,\n            onChange: option => sportChoiceHandler(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), !inputSport && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            children: sportValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nr of players including you*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"ex: 4\",\n            min: \"2\",\n            max: \"20\",\n            value: inputNrPlayers,\n            onInput: e => setInputNrPlayers(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide then number of players you wish to play(including you)*.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Level Requirement*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choiceBtns\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              \"aria-label\": \"option 1\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: buttonClass === \"btnActive1\" ? \"btnActive1\" : \"\",\n                value: true,\n                onClick: btnClass1,\n                children: [\" \", \"Only my level\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              \"aria-label\": \"option 2\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: buttonClass === \"btnActive2\" ? \"btnActive2\" : \"\",\n                value: false,\n                onClick: btnClass2,\n                children: [\" \", \"Open to everyone\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), !inputLevel && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            style: {\n              textAlign: \"start\"\n            },\n            children: levelValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom03\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"County*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"currentLocationBtn\",\n            onClick: currentLocationHandler,\n            children: [\" \", /*#__PURE__*/_jsxDEV(LogoSvg1, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: listCounties,\n            value: inputCounty,\n            placeholder: inputCounty,\n            onChange: option => countyOptionChange(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), inputCounty === \"Select County...\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            children: countyValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: listCities,\n            value: inputCity,\n            placeholder: inputCity,\n            onChange: opt => cityOptionChange(opt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), inputCity === \"Select City...\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger validationInput123\",\n            children: cityValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"6\",\n          controlId: \"validationCustom05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"You can specify a place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: inputPlace,\n            onInput: e => setInputPlace(e.target.value),\n            autoComplete: \"off\",\n            placeholder: \"Place: ex: Sport club...(Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start date*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"date\",\n            min: today,\n            value: inputDate,\n            onInput: e => setInputDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start time*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"time\",\n            value: inputTime,\n            onInput: e => setInputTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please provide start time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n            controlId: \"floatingTextarea\",\n            label: \"You can write a description.(Optional)\",\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: inputDescription,\n              onInput: e => setInputDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        style: {\n          float: \"right\",\n          marginTop: \"15px\"\n        },\n        children: \"Create event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        style: {\n          float: \"right\"\n        },\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          as: \"span\",\n          animation: \"grow\",\n          size: \"sm\",\n          role: \"status\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEventForm, \"dnpu05v45+uHaoaq4QKD1tq5i1A=\");\n\n_c = AddEventForm;\nexport default AddEventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEventForm\");","map":{"version":3,"sources":["C:/Users/chumu/Desktop/FullStackTraining/SportTogether/frontend/src/components/Forms/AddEventForm.js"],"names":["React","useState","useContext","useEffect","Select","countyList","countyCityList","sportOptions","Spinner","Form","Col","Row","Button","FloatingLabel","FormControl","AuthContext","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","AddEventForm","props","auth","isLoading","setIsLoading","validated","setValidated","isError","setIsError","inputSport","setInputSport","inputNrPlayers","setInputNrPlayers","inputLevel","setInputLevel","inputCounty","setInputCounty","inputCity","setInputCity","inputPlace","setInputPlace","inputDate","setInputDate","inputTime","setInputTime","inputDescription","setInputDescription","listCounties","setListCounties","listCities","setListCities","buttonClass","setButtonClass","sportValidation","setSportValidation","countyValidation","setCountyValidation","cityValidation","setCityValidation","levelValidation","setLevelValidation","capitalizeFirstLetter","string","charAt","toUpperCase","slice","reverseDate","split","reverse","join","lstCounties","i","push","value","label","countyOptionChange","obj","countyNameList","lstCities","cityOptionChange","console","log","sportChoiceHandler","opt","btnClass1","btnClass2","currentLocationHandler","cc","JSON","parse","localStorage","getItem","county","city","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","Error","response","fetch","method","headers","Headers","Authorization","token","Accept","body","stringify","Sport","County","City","NrPlayers","LevelRequirement","Place","Time","Description","responseData","json","ok","error","message","setTimeout","onAddEventItem","option","e","target","textAlign","float","marginTop"],"mappings":"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","sourcesContent":["import \"./AddEventForm.css\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport countyList from \"../../utils/CitiesAndCountiesRo/countyList\";\r\nimport countyCityList from \"../../utils/CitiesAndCountiesRo/countyCityList\";\r\nimport sportOptions from \"../../utils/sportListAndOptions/sportOptions\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport {\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  FloatingLabel,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { ReactComponent as LogoSvg1 } from \"../../assets/Images/SportTogetherJustLogoSVG1.svg\";\r\n\r\nvar today = new Date();\r\nvar dd = today.getDate();\r\nvar mm = today.getMonth() + 1; //January is 0 so need to add 1 to make it 1!\r\nvar yyyy = today.getFullYear();\r\n\r\nif (dd < 10) dd = \"0\" + dd;\r\nif (mm < 10) mm = \"0\" + mm;\r\ntoday = yyyy + \"-\" + mm + \"-\" + dd;\r\n\r\nconst AddEventForm = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [validated, setValidated] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [inputSport, setInputSport] = useState(\"\");\r\n  const [inputNrPlayers, setInputNrPlayers] = useState(\"\");\r\n  const [inputLevel, setInputLevel] = useState(\"\");\r\n  const [inputCounty, setInputCounty] = useState(\"Select County...\");\r\n  const [inputCity, setInputCity] = useState(\"Select City...\");\r\n  const [inputPlace, setInputPlace] = useState(\"\");\r\n  const [inputDate, setInputDate] = useState(\"\");\r\n  const [inputTime, setInputTime] = useState(\"\");\r\n  const [inputDescription, setInputDescription] = useState(\"\");\r\n  const [listCounties, setListCounties] = useState([]);\r\n  const [listCities, setListCities] = useState([]);\r\n  const [buttonClass, setButtonClass] = useState(\"\");\r\n  const [sportValidation, setSportValidation] = useState(\"\");\r\n  const [countyValidation, setCountyValidation] = useState(\"\");\r\n  const [cityValidation, setCityValidation] = useState(\"\");\r\n  const [levelValidation, setLevelValidation] = useState(\"\");\r\n\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  function reverseDate(string) {\r\n    return (string = string.split(\"-\").reverse().join(\"-\"));\r\n  }\r\n\r\n  useEffect(() => {\r\n    let lstCounties = [];\r\n    for (let i of countyList) {\r\n      lstCounties.push({ value: i, label: i });\r\n    }\r\n    setListCounties(lstCounties);\r\n  }, []);\r\n\r\n  const countyOptionChange = obj => {\r\n    setInputCounty(obj.value);\r\n    const countyNameList = countyCityList[obj.value];\r\n    let lstCities = [];\r\n    for (let i of countyNameList) {\r\n      lstCities.push({ value: i, label: i });\r\n    }\r\n    setListCities(lstCities);\r\n  };\r\n\r\n  const cityOptionChange = obj => {\r\n    console.log(obj.value);\r\n    setInputCity(obj.value);\r\n  };\r\n\r\n  const sportChoiceHandler = opt => {\r\n    console.log(opt);\r\n    setInputSport(opt.value);\r\n  };\r\n\r\n  const btnClass1 = () => {\r\n    setInputLevel(\"true\");\r\n    console.log(\"CLICK BTN1\");\r\n    setButtonClass(\"btnActive1\");\r\n  };\r\n  const btnClass2 = () => {\r\n    setInputLevel(\"false\");\r\n    setButtonClass(\"btnActive2\");\r\n  };\r\n\r\n  const currentLocationHandler = () => {\r\n    const cc = JSON.parse(localStorage.getItem(\"userLoc\"));\r\n\r\n    setInputCounty(cc.county);\r\n    setInputCity(cc.city);\r\n  };\r\n\r\n  // SUBMIT HANDLER !\r\n  const handleSubmit = async event => {\r\n    const form = event.currentTarget;\r\n    // manual validation handlers\r\n    if (inputSport === \"\") {\r\n      setSportValidation(\"Please choose a sport\");\r\n    }\r\n    if (inputCounty === \"Select County...\") {\r\n      setCountyValidation(\"Please choose the County for your event\");\r\n    }\r\n    if (inputCity === \"Select City...\") {\r\n      setCityValidation(\"Please choose the City for your event\");\r\n    }\r\n    if (inputLevel === \"\") {\r\n      setLevelValidation(\"Please choose level requirement\");\r\n    }\r\n    // FORM VALIDATION CHECKER\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity() === true) {\r\n      //ON SUBMIT Try ...\r\n      setIsLoading(true);\r\n      if (!inputSport || !inputLevel || inputCounty === \"Select County...\" || inputCity === \"Select City...\") {\r\n        setIsLoading(false);\r\n        console.log(\"Not good\");\r\n        new Error(\"Need validation\");\r\n        return event.preventDefault();\r\n      } else {\r\n        event.preventDefault();\r\n        try {\r\n          const response = await fetch(\"http://localhost:5000/createEvent\", {\r\n            method: \"POST\",\r\n            headers: new Headers({\r\n              Authorization: \"Bearer \" + auth.token,\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            }),\r\n            body: JSON.stringify({\r\n              Sport: inputSport,\r\n              County: inputCounty,\r\n              City: capitalizeFirstLetter(inputCity),\r\n              NrPlayers: inputNrPlayers,\r\n              LevelRequirement: inputLevel,\r\n              Place: inputPlace,\r\n              Date: reverseDate(inputDate),\r\n              Time: inputTime,\r\n              Description: inputDescription,\r\n            }),\r\n          });\r\n          const responseData = await response.json();\r\n          if (response.ok) {\r\n            console.log(\r\n              \"response.OK from /createEvent > responnseData :\",\r\n              responseData\r\n            );\r\n            // isSuccess used to show message\r\n          } else {\r\n            setIsError(responseData.error);\r\n            setIsLoading(false);\r\n            return new Error(responseData.message);\r\n          }\r\n        } catch (error) {\r\n          setIsError(error);\r\n          setIsLoading(false);\r\n          console.log(error);\r\n        }\r\n        setTimeout(() => {\r\n          props.onAddEventItem(false);\r\n        }, 1000);\r\n      }\r\n    }\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addEventFormClass\">\r\n      <p className=\"mb-5\" id=\"noticeEvent\">\r\n        Keep in mind, once you create an event, you will not be able to\r\n        edit/delete it if other users joined the event unless you make a request\r\n        to all users and they agree with your request!\r\n      </p>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        {isLoading && (\r\n          <Row className=\"mb-3 justify-content-center\">\r\n            <Col md=\"2\" className=\"d-flex justify-content-center\">\r\n              {\" \"}\r\n              <Spinner animation=\"border\" role=\"status\" />{\" \"}\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        {isError && (\r\n          <p className=\"mb-5\" id=\"noticeEvent\">\r\n            {isError}\r\n          </p>\r\n        )}\r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\">\r\n            <Form.Label>Choose a sport*</Form.Label>\r\n            <Select\r\n              options={sportOptions}\r\n              value={inputSport.value}\r\n              onChange={option => sportChoiceHandler(option)}\r\n            />\r\n            {!inputSport && (\r\n              <div className=\"text-danger validationInput123\">\r\n                {sportValidation}\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Form.Label>Nr of players including you*</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"ex: 4\"\r\n              min=\"2\"\r\n              max=\"20\"\r\n              value={inputNrPlayers}\r\n              onInput={e => setInputNrPlayers(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide then number of players you wish to play(including\r\n              you)*.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Col md=\"6\" style={{ textAlign: \"center\" }}>\r\n            <Form.Label>Level Requirement*</Form.Label>\r\n            <div className=\"choiceBtns\">\r\n              <Form.Check type=\"radio\" aria-label=\"option 1\">\r\n                {\" \"}\r\n                <button\r\n                  type=\"button\"\r\n                  id={buttonClass === \"btnActive1\" ? \"btnActive1\" : \"\"}\r\n                  value={true}\r\n                  onClick={btnClass1}\r\n                >\r\n                  {\" \"}\r\n                  Only my level{\" \"}\r\n                </button>{\" \"}\r\n              </Form.Check>\r\n              <Form.Check type=\"radio\" aria-label=\"option 2\">\r\n                {\" \"}\r\n                <button\r\n                  type=\"button\"\r\n                  id={buttonClass === \"btnActive2\" ? \"btnActive2\" : \"\"}\r\n                  value={false}\r\n                  onClick={btnClass2}\r\n                >\r\n                  {\" \"}\r\n                  Open to everyone\r\n                </button>{\" \"}\r\n              </Form.Check>\r\n            </div>\r\n            {!inputLevel && (\r\n              <div\r\n                className=\"text-danger validationInput123\"\r\n                style={{ textAlign: \"start\" }}\r\n              >\r\n                {levelValidation}\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n            <Form.Label>County*</Form.Label>{\" \"}\r\n            <button\r\n              type=\"button\"\r\n              className=\"currentLocationBtn\"\r\n              onClick={currentLocationHandler}\r\n            >\r\n              {\" \"}\r\n              <LogoSvg1 />{\" \"}\r\n            </button>\r\n            <Select\r\n              options={listCounties}\r\n              value={inputCounty}\r\n              placeholder={inputCounty}\r\n              onChange={option => countyOptionChange(option)}\r\n            />\r\n            {inputCounty === \"Select County...\" && (\r\n              <div className=\"text-danger validationInput123\">\r\n                {countyValidation}\r\n              </div>\r\n            )}\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>City*</Form.Label>\r\n            <Select\r\n              options={listCities}\r\n              value={inputCity}\r\n              placeholder={inputCity}\r\n              onChange={opt => cityOptionChange(opt)}\r\n            />\r\n            {inputCity === \"Select City...\" && (\r\n              <div className=\"text-danger validationInput123\">\r\n                {cityValidation}\r\n              </div>\r\n            )}\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n            <Form.Label>You can specify a place</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={inputPlace}\r\n              onInput={e => setInputPlace(e.target.value)}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Place: ex: Sport club...(Optional)\"\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Form.Label>Start date*</Form.Label>\r\n            <FormControl\r\n              type=\"date\"\r\n              min={today}\r\n              value={inputDate}\r\n              onInput={e => setInputDate(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start date\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n\r\n          <Col md=\"6\">\r\n            <Form.Label>Start time*</Form.Label>\r\n            <FormControl\r\n              type=\"time\"\r\n              value={inputTime}\r\n              onInput={e => setInputTime(e.target.value)}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide start time\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-5\">\r\n          <Col md=\"12\">\r\n            <FloatingLabel\r\n              controlId=\"floatingTextarea\"\r\n              label=\"You can write a description.(Optional)\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={inputDescription}\r\n                onInput={e => setInputDescription(e.target.value)}\r\n              />\r\n            </FloatingLabel>\r\n          </Col>\r\n        </Row>\r\n\r\n        {!isLoading && (\r\n          <Button type=\"submit\" style={{ float: \"right\", marginTop: \"15px\" }}>\r\n            Create event\r\n          </Button>\r\n        )}\r\n        {isLoading && (\r\n          <Button variant=\"primary\" style={{ float: \"right\" }} disabled>\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"grow\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            Loading...\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEventForm;\r\n"]},"metadata":{},"sourceType":"module"}